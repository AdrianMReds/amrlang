Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
Rule 2     programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
Rule 3     cuadGotoMain -> <empty>
Rule 4     cuadEnd -> <empty>
Rule 5     auxprograma -> <empty>
Rule 6     varsaux -> vars varsaux
Rule 7     varsaux -> empty
Rule 8     paux2 -> function paux2
Rule 9     paux2 -> empty
Rule 10    vars -> var type vaux PYC
Rule 11    vars -> empty
Rule 12    vaux -> ID agregaVar nextvar
Rule 13    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 14    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 15    nextvar -> COMA vaux
Rule 16    nextvar -> empty
Rule 17    agregaVar -> <empty>
Rule 18    agregaPar -> <empty>
Rule 19    guardarTipoVar -> <empty>
Rule 20    guardarTipoFunc -> <empty>
Rule 21    mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque
Rule 22    fillMain -> <empty>
Rule 23    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 24    bloque -> LLAVEIZQ empty LLAVEDER
Rule 25    bloqueaux -> estatuto bloqueaux
Rule 26    bloqueaux -> estatuto
Rule 27    type -> int guardarTipoVar
Rule 28    type -> float guardarTipoVar
Rule 29    type -> string guardarTipoVar
Rule 30    type -> bool guardarTipoVar
Rule 31    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
Rule 32    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
Rule 33    agregaDir -> <empty>
Rule 34    cuadEndf -> <empty>
Rule 35    agregaFunc -> <empty>
Rule 36    ftype -> int guardarTipoFunc
Rule 37    ftype -> float guardarTipoFunc
Rule 38    ftype -> string guardarTipoFunc
Rule 39    ftype -> bool guardarTipoFunc
Rule 40    ftype -> void guardarTipoFunc
Rule 41    funcaux -> type ID agregaPar masParam
Rule 42    funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam
Rule 43    funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
Rule 44    masParam -> COMA funcaux
Rule 45    masParam -> empty
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> escritura
Rule 48    estatuto -> llamada
Rule 49    estatuto -> condicion
Rule 50    estatuto -> whileloop
Rule 51    estatuto -> forloop
Rule 52    estatuto -> lectura
Rule 53    estatuto -> estReturn
Rule 54    asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
Rule 55    asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC
Rule 56    asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
Rule 57    checkID -> <empty>
Rule 58    cuadAsignacion -> <empty>
Rule 59    asignaux -> CORIZQ expresion CORDER
Rule 60    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 61    asignaux -> empty
Rule 62    escritura -> write PARIZQ escaux PARDER PYC
Rule 63    escaux -> expresion cuadEsc nextexp
Rule 64    escaux -> CTESTRING cuadEsc nextexp
Rule 65    escaux -> llamada_esp nextexp
Rule 66    escaux -> llamada nextexp
Rule 67    cuadEsc -> <empty>
Rule 68    nextexp -> COMA escaux
Rule 69    nextexp -> empty
Rule 70    llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
Rule 71    llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
Rule 72    llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
Rule 73    llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC
Rule 74    checkFunc -> <empty>
Rule 75    cuadEra -> <empty>
Rule 76    llamaux -> COMA expresion nextparametro
Rule 77    llamaux -> COMA llamada_esp nextparametro
Rule 78    llamaux -> COMA CTESTRING nextparametro
Rule 79    llamaux -> empty
Rule 80    nextparametro -> llamaux
Rule 81    nextparametro -> empty
Rule 82    condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
Rule 83    condicionAux -> else cuadGoto bloque
Rule 84    condicionAux -> empty
Rule 85    whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
Rule 86    migaja -> <empty>
Rule 87    cuadFinWhile -> <empty>
Rule 88    forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
Rule 89    checkExpFor -> <empty>
Rule 90    gotoFor -> <empty>
Rule 91    returnFor -> <empty>
Rule 92    lectura -> read PARIZQ ID checkID cuadRead PARDER PYC
Rule 93    cuadRead -> <empty>
Rule 94    estReturn -> return PARIZQ retAux PARDER PYC
Rule 95    retAux -> expresion
Rule 96    retAux -> CTESTRING
Rule 97    retAux -> true
Rule 98    retAux -> false
Rule 99    retAux -> llamada
Rule 100   expresion -> andExpresion
Rule 101   expresion -> andExpresion OR pushOper andExpresion
Rule 102   andExpresion -> relopExpresion
Rule 103   andExpresion -> relopExpresion AND pushOper relopExpresion
Rule 104   relopExpresion -> aritExpresion cuadArit
Rule 105   relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit
Rule 106   relopAux -> MAYORQUE pushOper
Rule 107   relopAux -> MENORQUE pushOper
Rule 108   relopAux -> MAYORIGUAL pushOper
Rule 109   relopAux -> MENORIGUAL pushOper
Rule 110   relopAux -> EQUALS pushOper
Rule 111   relopAux -> DIFERENTE pushOper
Rule 112   aritExpresion -> term cuadTerm
Rule 113   aritExpresion -> term cuadTerm aritAux term cuadTerm
Rule 114   aritAux -> MAS pushOper
Rule 115   aritAux -> MENOS pushOper
Rule 116   term -> factor
Rule 117   term -> factor cuadFactor termAux factor cuadFactor
Rule 118   termAux -> MULT pushOper
Rule 119   termAux -> DIV pushOper
Rule 120   factor -> PARIZQ guardaFondo expresion PARDER quitaFondo
Rule 121   factor -> CTEINT pushOT
Rule 122   factor -> CTEFLOAT pushOT
Rule 123   factor -> true pushOT
Rule 124   factor -> false pushOT
Rule 125   factor -> ID checkID pushOT
Rule 126   factor -> llamada_esp pushOT
Rule 127   factor -> llamada pushOT
Rule 128   guardaFondo -> <empty>
Rule 129   quitaFondo -> <empty>
Rule 130   llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 131   especiales -> length
Rule 132   especiales -> max
Rule 133   especiales -> min
Rule 134   especiales -> avg
Rule 135   especiales -> median
Rule 136   especiales -> mode
Rule 137   especiales -> variance
Rule 138   especiales -> stdev
Rule 139   pushOper -> <empty>
Rule 140   pushOT -> <empty>
Rule 141   cuadTerm -> <empty>
Rule 142   cuadFactor -> <empty>
Rule 143   cuadArit -> <empty>
Rule 144   cuadGotof -> <empty>
Rule 145   cuadFinIf -> <empty>
Rule 146   cuadGoto -> <empty>
Rule 147   empty -> <empty>

Terminals, with rules where they appear

AND                  : 103
ASIGNA               : 54 55 56
COMA                 : 14 15 43 44 60 68 76 77 78
CORDER               : 13 14 42 43 59 60
CORIZQ               : 13 14 42 43 59 60
CTEBOOL              : 
CTEFLOAT             : 122
CTEINT               : 13 14 14 42 43 43 121
CTESTRING            : 56 64 71 78 96
DIFERENTE            : 111
DIV                  : 119
DOSPUNTOS            : 88
EQUALS               : 110
ID                   : 1 2 12 13 14 31 32 41 42 43 54 55 56 70 71 72 73 92 125 130
LLAVEDER             : 23 24
LLAVEIZQ             : 23 24
MAS                  : 114
MAYORIGUAL           : 108
MAYORQUE             : 106
MENORIGUAL           : 109
MENORQUE             : 107
MENOS                : 115
MULT                 : 118
OR                   : 101
PARDER               : 21 31 32 62 70 71 72 73 82 85 88 92 94 120 130
PARIZQ               : 21 31 32 62 70 71 72 73 82 85 88 92 94 120 130
PUNTO                : 130
PYC                  : 1 1 2 2 10 54 55 56 62 70 71 72 73 92 94
avg                  : 134
bool                 : 30 39
else                 : 83
end                  : 1 2
error                : 
false                : 98 124
float                : 28 37
for                  : 88
func                 : 21 31 32
if                   : 82
int                  : 27 36
length               : 131
main                 : 21
max                  : 132
median               : 135
min                  : 133
mode                 : 136
program              : 1 2
read                 : 92
return               : 94
stdev                : 138
string               : 29 38
true                 : 97 123
var                  : 10
variance             : 137
void                 : 40
while                : 85
write                : 62

Nonterminals, with rules where they appear

agregaDir            : 31 32
agregaFunc           : 21 31 32
agregaPar            : 41 42 43
agregaVar            : 12 13 14
andExpresion         : 100 101 101
aritAux              : 113
aritExpresion        : 104 105 105
asignacion           : 46
asignaux             : 54 55 56
auxprograma          : 1 2
bloque               : 21 31 32 82 83 85 88
bloqueaux            : 23 25
checkExpFor          : 88 88
checkFunc            : 70 71 72 73
checkID              : 54 55 56 92 125
condicion            : 49
condicionAux         : 82
cuadArit             : 104 105 105
cuadAsignacion       : 54 56
cuadEnd              : 1 2
cuadEndf             : 31 32
cuadEra              : 70 71 72 73
cuadEsc              : 63 64
cuadFactor           : 117 117
cuadFinIf            : 82
cuadFinWhile         : 85
cuadGoto             : 83
cuadGotoMain         : 1 2
cuadGotof            : 82 85
cuadRead             : 92
cuadTerm             : 112 113 113
empty                : 2 7 9 11 16 24 32 45 61 69 79 81 84
escaux               : 62 68
escritura            : 47
especiales           : 130
estReturn            : 53
estatuto             : 25 26
expresion            : 54 59 60 60 63 70 76 82 85 88 88 95 120
factor               : 116 117 117
fillMain             : 21
forloop              : 51
ftype                : 31 32
funcaux              : 31 44
function             : 8
gotoFor              : 88
guardaFondo          : 120
guardarTipoFunc      : 36 37 38 39 40
guardarTipoVar       : 27 28 29 30
lectura              : 52
llamada              : 48 66 99 127
llamada_esp          : 55 65 72 77 126
llamaux              : 70 71 72 80
mainfunction         : 1 2
masParam             : 41 42 43
migaja               : 85
nextexp              : 63 64 65 66
nextparametro        : 76 77 78
nextvar              : 12 13 14
paux2                : 1 8
programa             : 0
pushOT               : 121 122 123 124 125 126 127
pushOper             : 101 103 106 107 108 109 110 111 114 115 118 119
quitaFondo           : 120
relopAux             : 105
relopExpresion       : 102 103 103
retAux               : 94
returnFor            : 88
term                 : 112 113 113
termAux              : 117
type                 : 10 41 42 43
vars                 : 6
varsaux              : 1 6 31 32
vaux                 : 10 15
whileloop            : 50

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> . program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program . cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (3) cuadGotoMain -> .

    ID              reduce using rule 3 (cuadGotoMain -> .)

    cuadGotoMain                   shift and go to state 3

state 3

    (1) programa -> program cuadGotoMain . ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program cuadGotoMain . auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (5) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4

  ! ID              [ reduce using rule 5 (auxprograma -> .) ]

    auxprograma                    shift and go to state 5

state 4

    (1) programa -> program cuadGotoMain ID . auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (5) auxprograma -> .

    PYC             reduce using rule 5 (auxprograma -> .)

    auxprograma                    shift and go to state 6

state 5

    (2) programa -> program cuadGotoMain auxprograma . ID PYC empty mainfunction end cuadEnd PYC

    ID              shift and go to state 7


state 6

    (1) programa -> program cuadGotoMain ID auxprograma . PYC varsaux paux2 mainfunction end cuadEnd PYC

    PYC             shift and go to state 8


state 7

    (2) programa -> program cuadGotoMain auxprograma ID . PYC empty mainfunction end cuadEnd PYC

    PYC             shift and go to state 9


state 8

    (1) programa -> program cuadGotoMain ID auxprograma PYC . varsaux paux2 mainfunction end cuadEnd PYC
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (147) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 147 (empty -> .)
    float           reduce using rule 147 (empty -> .)
    string          reduce using rule 147 (empty -> .)
    bool            reduce using rule 147 (empty -> .)
    void            reduce using rule 147 (empty -> .)
    func            reduce using rule 147 (empty -> .)

  ! var             [ reduce using rule 147 (empty -> .) ]

    varsaux                        shift and go to state 10
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 9

    (2) programa -> program cuadGotoMain auxprograma ID PYC . empty mainfunction end cuadEnd PYC
    (147) empty -> .

    func            reduce using rule 147 (empty -> .)

    empty                          shift and go to state 14

state 10

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux . paux2 mainfunction end cuadEnd PYC
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (31) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (147) empty -> .
    (36) ftype -> . int guardarTipoFunc
    (37) ftype -> . float guardarTipoFunc
    (38) ftype -> . string guardarTipoFunc
    (39) ftype -> . bool guardarTipoFunc
    (40) ftype -> . void guardarTipoFunc

    func            reduce using rule 147 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    paux2                          shift and go to state 15
    function                       shift and go to state 16
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 11

    (6) varsaux -> vars . varsaux
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (147) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 147 (empty -> .)
    float           reduce using rule 147 (empty -> .)
    string          reduce using rule 147 (empty -> .)
    bool            reduce using rule 147 (empty -> .)
    void            reduce using rule 147 (empty -> .)
    func            reduce using rule 147 (empty -> .)
    LLAVEIZQ        reduce using rule 147 (empty -> .)

  ! var             [ reduce using rule 147 (empty -> .) ]

    vars                           shift and go to state 11
    varsaux                        shift and go to state 24
    empty                          shift and go to state 12

state 12

    (7) varsaux -> empty .
    (11) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 7 (varsaux -> empty .)
    int             reduce using rule 7 (varsaux -> empty .)
    float           reduce using rule 7 (varsaux -> empty .)
    string          reduce using rule 7 (varsaux -> empty .)
    bool            reduce using rule 7 (varsaux -> empty .)
    void            reduce using rule 7 (varsaux -> empty .)
    func            reduce using rule 7 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 7 (varsaux -> empty .)
    var             reduce using rule 11 (vars -> empty .)

  ! int             [ reduce using rule 11 (vars -> empty .) ]
  ! float           [ reduce using rule 11 (vars -> empty .) ]
  ! string          [ reduce using rule 11 (vars -> empty .) ]
  ! bool            [ reduce using rule 11 (vars -> empty .) ]
  ! void            [ reduce using rule 11 (vars -> empty .) ]
  ! func            [ reduce using rule 11 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 11 (vars -> empty .) ]


state 13

    (10) vars -> var . type vaux PYC
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 25

state 14

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty . mainfunction end cuadEnd PYC
    (21) mainfunction -> . func main agregaFunc PARIZQ PARDER fillMain bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 30

state 15

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 . mainfunction end cuadEnd PYC
    (21) mainfunction -> . func main agregaFunc PARIZQ PARDER fillMain bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 32

state 16

    (8) paux2 -> function . paux2
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (31) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (147) empty -> .
    (36) ftype -> . int guardarTipoFunc
    (37) ftype -> . float guardarTipoFunc
    (38) ftype -> . string guardarTipoFunc
    (39) ftype -> . bool guardarTipoFunc
    (40) ftype -> . void guardarTipoFunc

    func            reduce using rule 147 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    function                       shift and go to state 16
    paux2                          shift and go to state 33
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 17

    (9) paux2 -> empty .

    func            reduce using rule 9 (paux2 -> empty .)


state 18

    (31) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    func            shift and go to state 34


state 19

    (36) ftype -> int . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (37) ftype -> float . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (38) ftype -> string . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (39) ftype -> bool . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (40) ftype -> void . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 39

state 24

    (6) varsaux -> vars varsaux .

    int             reduce using rule 6 (varsaux -> vars varsaux .)
    float           reduce using rule 6 (varsaux -> vars varsaux .)
    string          reduce using rule 6 (varsaux -> vars varsaux .)
    bool            reduce using rule 6 (varsaux -> vars varsaux .)
    void            reduce using rule 6 (varsaux -> vars varsaux .)
    func            reduce using rule 6 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 6 (varsaux -> vars varsaux .)


state 25

    (10) vars -> var type . vaux PYC
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 40

state 26

    (27) type -> int . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (28) type -> float . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (29) type -> string . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (30) type -> bool . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 45

state 30

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction . end cuadEnd PYC

    end             shift and go to state 46


state 31

    (21) mainfunction -> func . main agregaFunc PARIZQ PARDER fillMain bloque

    main            shift and go to state 47


state 32

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction . end cuadEnd PYC

    end             shift and go to state 48


state 33

    (8) paux2 -> function paux2 .

    func            reduce using rule 8 (paux2 -> function paux2 .)


state 34

    (31) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    ID              shift and go to state 49


state 35

    (36) ftype -> int guardarTipoFunc .

    func            reduce using rule 36 (ftype -> int guardarTipoFunc .)


state 36

    (37) ftype -> float guardarTipoFunc .

    func            reduce using rule 37 (ftype -> float guardarTipoFunc .)


state 37

    (38) ftype -> string guardarTipoFunc .

    func            reduce using rule 38 (ftype -> string guardarTipoFunc .)


state 38

    (39) ftype -> bool guardarTipoFunc .

    func            reduce using rule 39 (ftype -> bool guardarTipoFunc .)


state 39

    (40) ftype -> void guardarTipoFunc .

    func            reduce using rule 40 (ftype -> void guardarTipoFunc .)


state 40

    (10) vars -> var type vaux . PYC

    PYC             shift and go to state 50


state 41

    (12) vaux -> ID . agregaVar nextvar
    (13) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (17) agregaVar -> .

    CORIZQ          shift and go to state 52
    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 51

state 42

    (27) type -> int guardarTipoVar .

    ID              reduce using rule 27 (type -> int guardarTipoVar .)


state 43

    (28) type -> float guardarTipoVar .

    ID              reduce using rule 28 (type -> float guardarTipoVar .)


state 44

    (29) type -> string guardarTipoVar .

    ID              reduce using rule 29 (type -> string guardarTipoVar .)


state 45

    (30) type -> bool guardarTipoVar .

    ID              reduce using rule 30 (type -> bool guardarTipoVar .)


state 46

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 53

state 47

    (21) mainfunction -> func main . agregaFunc PARIZQ PARDER fillMain bloque
    (35) agregaFunc -> .

    PARIZQ          reduce using rule 35 (agregaFunc -> .)

    agregaFunc                     shift and go to state 54

state 48

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 55

state 49

    (31) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (35) agregaFunc -> .

    PARIZQ          reduce using rule 35 (agregaFunc -> .)

    agregaFunc                     shift and go to state 56

state 50

    (10) vars -> var type vaux PYC .

    var             reduce using rule 10 (vars -> var type vaux PYC .)
    int             reduce using rule 10 (vars -> var type vaux PYC .)
    float           reduce using rule 10 (vars -> var type vaux PYC .)
    string          reduce using rule 10 (vars -> var type vaux PYC .)
    bool            reduce using rule 10 (vars -> var type vaux PYC .)
    void            reduce using rule 10 (vars -> var type vaux PYC .)
    func            reduce using rule 10 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 10 (vars -> var type vaux PYC .)


state 51

    (12) vaux -> ID agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (147) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 147 (empty -> .)

    nextvar                        shift and go to state 57
    empty                          shift and go to state 59

state 52

    (13) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 60


state 53

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd . PYC

    PYC             shift and go to state 61


state 54

    (21) mainfunction -> func main agregaFunc . PARIZQ PARDER fillMain bloque

    PARIZQ          shift and go to state 62


state 55

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd . PYC

    PYC             shift and go to state 63


state 56

    (31) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    PARIZQ          shift and go to state 64


state 57

    (12) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID agregaVar nextvar .)


state 58

    (15) nextvar -> COMA . vaux
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 65

state 59

    (16) nextvar -> empty .

    PYC             reduce using rule 16 (nextvar -> empty .)


state 60

    (13) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 66
    COMA            shift and go to state 67


state 61

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .

    $end            reduce using rule 2 (programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .)


state 62

    (21) mainfunction -> func main agregaFunc PARIZQ . PARDER fillMain bloque

    PARDER          shift and go to state 68


state 63

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .

    $end            reduce using rule 1 (programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .)


state 64

    (31) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux agregaDir bloque cuadEndf
    (41) funcaux -> . type ID agregaPar masParam
    (42) funcaux -> . type ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (147) empty -> .
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    PARDER          reduce using rule 147 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 69
    empty                          shift and go to state 70
    type                           shift and go to state 71

state 65

    (15) nextvar -> COMA vaux .

    PYC             reduce using rule 15 (nextvar -> COMA vaux .)


state 66

    (13) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 72

state 67

    (14) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 73


state 68

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER . fillMain bloque
    (22) fillMain -> .

    LLAVEIZQ        reduce using rule 22 (fillMain -> .)

    fillMain                       shift and go to state 74

state 69

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux agregaDir bloque cuadEndf

    PARDER          shift and go to state 75


state 70

    (32) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux agregaDir bloque cuadEndf

    PARDER          shift and go to state 76


state 71

    (41) funcaux -> type . ID agregaPar masParam
    (42) funcaux -> type . ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> type . ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam

    ID              shift and go to state 77


state 72

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (147) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 147 (empty -> .)

    nextvar                        shift and go to state 78
    empty                          shift and go to state 59

state 73

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 79


state 74

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER fillMain . bloque
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 80

state 75

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux agregaDir bloque cuadEndf
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (147) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 147 (empty -> .)

  ! var             [ reduce using rule 147 (empty -> .) ]

    varsaux                        shift and go to state 82
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 76

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux agregaDir bloque cuadEndf
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (147) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 147 (empty -> .)

  ! var             [ reduce using rule 147 (empty -> .) ]

    empty                          shift and go to state 12
    varsaux                        shift and go to state 83
    vars                           shift and go to state 11

state 77

    (41) funcaux -> type ID . agregaPar masParam
    (42) funcaux -> type ID . CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> type ID . CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (18) agregaPar -> .

    CORIZQ          shift and go to state 85
    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 84

state 78

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 13 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 79

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 86

state 80

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque .

    end             reduce using rule 21 (mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque .)


state 81

    (23) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (24) bloque -> LLAVEIZQ . empty LLAVEDER
    (25) bloqueaux -> . estatuto bloqueaux
    (26) bloqueaux -> . estatuto
    (147) empty -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada
    (49) estatuto -> . condicion
    (50) estatuto -> . whileloop
    (51) estatuto -> . forloop
    (52) estatuto -> . lectura
    (53) estatuto -> . estReturn
    (54) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (62) escritura -> . write PARIZQ escaux PARDER PYC
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC
    (82) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (85) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (88) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (92) lectura -> . read PARIZQ ID checkID cuadRead PARDER PYC
    (94) estReturn -> . return PARIZQ retAux PARDER PYC

    LLAVEDER        reduce using rule 147 (empty -> .)
    ID              shift and go to state 98
    write           shift and go to state 99
    if              shift and go to state 100
    while           shift and go to state 101
    for             shift and go to state 102
    read            shift and go to state 103
    return          shift and go to state 104

    bloqueaux                      shift and go to state 87
    empty                          shift and go to state 88
    estatuto                       shift and go to state 89
    asignacion                     shift and go to state 90
    escritura                      shift and go to state 91
    llamada                        shift and go to state 92
    condicion                      shift and go to state 93
    whileloop                      shift and go to state 94
    forloop                        shift and go to state 95
    lectura                        shift and go to state 96
    estReturn                      shift and go to state 97

state 82

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . agregaDir bloque cuadEndf
    (33) agregaDir -> .

    LLAVEIZQ        reduce using rule 33 (agregaDir -> .)

    agregaDir                      shift and go to state 105

state 83

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . agregaDir bloque cuadEndf
    (33) agregaDir -> .

    LLAVEIZQ        reduce using rule 33 (agregaDir -> .)

    agregaDir                      shift and go to state 106

state 84

    (41) funcaux -> type ID agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (147) empty -> .

    COMA            shift and go to state 108
    PARDER          reduce using rule 147 (empty -> .)

    masParam                       shift and go to state 107
    empty                          shift and go to state 109

state 85

    (42) funcaux -> type ID CORIZQ . CTEINT CORDER agregaPar masParam
    (43) funcaux -> type ID CORIZQ . CTEINT COMA CTEINT CORDER agregaPar masParam

    CTEINT          shift and go to state 110


state 86

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (147) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 147 (empty -> .)

    nextvar                        shift and go to state 111
    empty                          shift and go to state 59

state 87

    (23) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 112


state 88

    (24) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 113


state 89

    (25) bloqueaux -> estatuto . bloqueaux
    (26) bloqueaux -> estatuto .
    (25) bloqueaux -> . estatuto bloqueaux
    (26) bloqueaux -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada
    (49) estatuto -> . condicion
    (50) estatuto -> . whileloop
    (51) estatuto -> . forloop
    (52) estatuto -> . lectura
    (53) estatuto -> . estReturn
    (54) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (62) escritura -> . write PARIZQ escaux PARDER PYC
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC
    (82) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (85) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (88) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (92) lectura -> . read PARIZQ ID checkID cuadRead PARDER PYC
    (94) estReturn -> . return PARIZQ retAux PARDER PYC

    LLAVEDER        reduce using rule 26 (bloqueaux -> estatuto .)
    ID              shift and go to state 98
    write           shift and go to state 99
    if              shift and go to state 100
    while           shift and go to state 101
    for             shift and go to state 102
    read            shift and go to state 103
    return          shift and go to state 104

    estatuto                       shift and go to state 89
    bloqueaux                      shift and go to state 114
    asignacion                     shift and go to state 90
    escritura                      shift and go to state 91
    llamada                        shift and go to state 92
    condicion                      shift and go to state 93
    whileloop                      shift and go to state 94
    forloop                        shift and go to state 95
    lectura                        shift and go to state 96
    estReturn                      shift and go to state 97

state 90

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    write           reduce using rule 46 (estatuto -> asignacion .)
    if              reduce using rule 46 (estatuto -> asignacion .)
    while           reduce using rule 46 (estatuto -> asignacion .)
    for             reduce using rule 46 (estatuto -> asignacion .)
    read            reduce using rule 46 (estatuto -> asignacion .)
    return          reduce using rule 46 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 46 (estatuto -> asignacion .)


state 91

    (47) estatuto -> escritura .

    ID              reduce using rule 47 (estatuto -> escritura .)
    write           reduce using rule 47 (estatuto -> escritura .)
    if              reduce using rule 47 (estatuto -> escritura .)
    while           reduce using rule 47 (estatuto -> escritura .)
    for             reduce using rule 47 (estatuto -> escritura .)
    read            reduce using rule 47 (estatuto -> escritura .)
    return          reduce using rule 47 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 47 (estatuto -> escritura .)


state 92

    (48) estatuto -> llamada .

    ID              reduce using rule 48 (estatuto -> llamada .)
    write           reduce using rule 48 (estatuto -> llamada .)
    if              reduce using rule 48 (estatuto -> llamada .)
    while           reduce using rule 48 (estatuto -> llamada .)
    for             reduce using rule 48 (estatuto -> llamada .)
    read            reduce using rule 48 (estatuto -> llamada .)
    return          reduce using rule 48 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 48 (estatuto -> llamada .)


state 93

    (49) estatuto -> condicion .

    ID              reduce using rule 49 (estatuto -> condicion .)
    write           reduce using rule 49 (estatuto -> condicion .)
    if              reduce using rule 49 (estatuto -> condicion .)
    while           reduce using rule 49 (estatuto -> condicion .)
    for             reduce using rule 49 (estatuto -> condicion .)
    read            reduce using rule 49 (estatuto -> condicion .)
    return          reduce using rule 49 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 49 (estatuto -> condicion .)


state 94

    (50) estatuto -> whileloop .

    ID              reduce using rule 50 (estatuto -> whileloop .)
    write           reduce using rule 50 (estatuto -> whileloop .)
    if              reduce using rule 50 (estatuto -> whileloop .)
    while           reduce using rule 50 (estatuto -> whileloop .)
    for             reduce using rule 50 (estatuto -> whileloop .)
    read            reduce using rule 50 (estatuto -> whileloop .)
    return          reduce using rule 50 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 50 (estatuto -> whileloop .)


state 95

    (51) estatuto -> forloop .

    ID              reduce using rule 51 (estatuto -> forloop .)
    write           reduce using rule 51 (estatuto -> forloop .)
    if              reduce using rule 51 (estatuto -> forloop .)
    while           reduce using rule 51 (estatuto -> forloop .)
    for             reduce using rule 51 (estatuto -> forloop .)
    read            reduce using rule 51 (estatuto -> forloop .)
    return          reduce using rule 51 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 51 (estatuto -> forloop .)


state 96

    (52) estatuto -> lectura .

    ID              reduce using rule 52 (estatuto -> lectura .)
    write           reduce using rule 52 (estatuto -> lectura .)
    if              reduce using rule 52 (estatuto -> lectura .)
    while           reduce using rule 52 (estatuto -> lectura .)
    for             reduce using rule 52 (estatuto -> lectura .)
    read            reduce using rule 52 (estatuto -> lectura .)
    return          reduce using rule 52 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 52 (estatuto -> lectura .)


state 97

    (53) estatuto -> estReturn .

    ID              reduce using rule 53 (estatuto -> estReturn .)
    write           reduce using rule 53 (estatuto -> estReturn .)
    if              reduce using rule 53 (estatuto -> estReturn .)
    while           reduce using rule 53 (estatuto -> estReturn .)
    for             reduce using rule 53 (estatuto -> estReturn .)
    read            reduce using rule 53 (estatuto -> estReturn .)
    return          reduce using rule 53 (estatuto -> estReturn .)
    LLAVEDER        reduce using rule 53 (estatuto -> estReturn .)


state 98

    (54) asignacion -> ID . checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> ID . checkID asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> ID . checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (70) llamada -> ID . checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID . checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID . checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER PYC
    (57) checkID -> .
    (74) checkFunc -> .

    CORIZQ          reduce using rule 57 (checkID -> .)
    ASIGNA          reduce using rule 57 (checkID -> .)
    PARIZQ          reduce using rule 74 (checkFunc -> .)

    checkID                        shift and go to state 115
    checkFunc                      shift and go to state 116

state 99

    (62) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 117


state 100

    (82) condicion -> if . PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf

    PARIZQ          shift and go to state 118


state 101

    (85) whileloop -> while . migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (86) migaja -> .

    PARIZQ          reduce using rule 86 (migaja -> .)

    migaja                         shift and go to state 119

state 102

    (88) forloop -> for . PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    PARIZQ          shift and go to state 120


state 103

    (92) lectura -> read . PARIZQ ID checkID cuadRead PARDER PYC

    PARIZQ          shift and go to state 121


state 104

    (94) estReturn -> return . PARIZQ retAux PARDER PYC

    PARIZQ          shift and go to state 122


state 105

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir . bloque cuadEndf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 123

state 106

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir . bloque cuadEndf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 124

state 107

    (41) funcaux -> type ID agregaPar masParam .

    PARDER          reduce using rule 41 (funcaux -> type ID agregaPar masParam .)


state 108

    (44) masParam -> COMA . funcaux
    (41) funcaux -> . type ID agregaPar masParam
    (42) funcaux -> . type ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 125
    type                           shift and go to state 71

state 109

    (45) masParam -> empty .

    PARDER          reduce using rule 45 (masParam -> empty .)


state 110

    (42) funcaux -> type ID CORIZQ CTEINT . CORDER agregaPar masParam
    (43) funcaux -> type ID CORIZQ CTEINT . COMA CTEINT CORDER agregaPar masParam

    CORDER          shift and go to state 126
    COMA            shift and go to state 127


state 111

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 14 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 112

    (23) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    return          reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 113

    (24) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    return          reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 114

    (25) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 25 (bloqueaux -> estatuto bloqueaux .)


state 115

    (54) asignacion -> ID checkID . asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> ID checkID . asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> ID checkID . asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (59) asignaux -> . CORIZQ expresion CORDER
    (60) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (61) asignaux -> . empty
    (147) empty -> .

    CORIZQ          shift and go to state 129
    ASIGNA          reduce using rule 147 (empty -> .)

    asignaux                       shift and go to state 128
    empty                          shift and go to state 130

state 116

    (70) llamada -> ID checkFunc . cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID checkFunc . cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID checkFunc . cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID checkFunc . cuadEra PARIZQ PARDER PYC
    (75) cuadEra -> .

    PARIZQ          reduce using rule 75 (cuadEra -> .)

    cuadEra                        shift and go to state 131

state 117

    (62) escritura -> write PARIZQ . escaux PARDER PYC
    (63) escaux -> . expresion cuadEsc nextexp
    (64) escaux -> . CTESTRING cuadEsc nextexp
    (65) escaux -> . llamada_esp nextexp
    (66) escaux -> . llamada nextexp
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT

    CTESTRING       shift and go to state 135
    ID              shift and go to state 139
    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147

    escaux                         shift and go to state 133
    expresion                      shift and go to state 134
    llamada_esp                    shift and go to state 136
    llamada                        shift and go to state 137
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143

state 118

    (82) condicion -> if PARIZQ . expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 148
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 119

    (85) whileloop -> while migaja . PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile

    PARIZQ          shift and go to state 152


state 120

    (88) forloop -> for PARIZQ . expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 153
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 121

    (92) lectura -> read PARIZQ . ID checkID cuadRead PARDER PYC

    ID              shift and go to state 154


state 122

    (94) estReturn -> return PARIZQ . retAux PARDER PYC
    (95) retAux -> . expresion
    (96) retAux -> . CTESTRING
    (97) retAux -> . true
    (98) retAux -> . false
    (99) retAux -> . llamada
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    CTESTRING       shift and go to state 157
    true            shift and go to state 158
    false           shift and go to state 159
    ID              shift and go to state 161
    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145

    retAux                         shift and go to state 155
    expresion                      shift and go to state 156
    llamada                        shift and go to state 160
    andExpresion                   shift and go to state 138
    llamada_esp                    shift and go to state 150
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143

state 123

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque . cuadEndf
    (34) cuadEndf -> .

    int             reduce using rule 34 (cuadEndf -> .)
    float           reduce using rule 34 (cuadEndf -> .)
    string          reduce using rule 34 (cuadEndf -> .)
    bool            reduce using rule 34 (cuadEndf -> .)
    void            reduce using rule 34 (cuadEndf -> .)
    func            reduce using rule 34 (cuadEndf -> .)

    cuadEndf                       shift and go to state 162

state 124

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque . cuadEndf
    (34) cuadEndf -> .

    int             reduce using rule 34 (cuadEndf -> .)
    float           reduce using rule 34 (cuadEndf -> .)
    string          reduce using rule 34 (cuadEndf -> .)
    bool            reduce using rule 34 (cuadEndf -> .)
    void            reduce using rule 34 (cuadEndf -> .)
    func            reduce using rule 34 (cuadEndf -> .)

    cuadEndf                       shift and go to state 163

state 125

    (44) masParam -> COMA funcaux .

    PARDER          reduce using rule 44 (masParam -> COMA funcaux .)


state 126

    (42) funcaux -> type ID CORIZQ CTEINT CORDER . agregaPar masParam
    (18) agregaPar -> .

    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 164

state 127

    (43) funcaux -> type ID CORIZQ CTEINT COMA . CTEINT CORDER agregaPar masParam

    CTEINT          shift and go to state 165


state 128

    (54) asignacion -> ID checkID asignaux . ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> ID checkID asignaux . ASIGNA llamada_esp PYC
    (56) asignacion -> ID checkID asignaux . ASIGNA CTESTRING cuadAsignacion PYC

    ASIGNA          shift and go to state 166


state 129

    (59) asignaux -> CORIZQ . expresion CORDER
    (60) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 167
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 130

    (61) asignaux -> empty .

    ASIGNA          reduce using rule 61 (asignaux -> empty .)


state 131

    (70) llamada -> ID checkFunc cuadEra . PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID checkFunc cuadEra . PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID checkFunc cuadEra . PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID checkFunc cuadEra . PARIZQ PARDER PYC

    PARIZQ          shift and go to state 168


state 132

    (120) factor -> PARIZQ . guardaFondo expresion PARDER quitaFondo
    (128) guardaFondo -> .

    PARIZQ          reduce using rule 128 (guardaFondo -> .)
    CTEINT          reduce using rule 128 (guardaFondo -> .)
    CTEFLOAT        reduce using rule 128 (guardaFondo -> .)
    true            reduce using rule 128 (guardaFondo -> .)
    false           reduce using rule 128 (guardaFondo -> .)
    ID              reduce using rule 128 (guardaFondo -> .)

    guardaFondo                    shift and go to state 169

state 133

    (62) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 170


state 134

    (63) escaux -> expresion . cuadEsc nextexp
    (67) cuadEsc -> .

    COMA            reduce using rule 67 (cuadEsc -> .)
    PARDER          reduce using rule 67 (cuadEsc -> .)

    cuadEsc                        shift and go to state 171

state 135

    (64) escaux -> CTESTRING . cuadEsc nextexp
    (67) cuadEsc -> .

    COMA            reduce using rule 67 (cuadEsc -> .)
    PARDER          reduce using rule 67 (cuadEsc -> .)

    cuadEsc                        shift and go to state 172

state 136

    (65) escaux -> llamada_esp . nextexp
    (126) factor -> llamada_esp . pushOT
    (68) nextexp -> . COMA escaux
    (69) nextexp -> . empty
    (140) pushOT -> .
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 140 (pushOT -> .)
    COMA            shift and go to state 175
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)

  ! COMA            [ reduce using rule 140 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 147 (empty -> .) ]

    nextexp                        shift and go to state 173
    pushOT                         shift and go to state 174
    empty                          shift and go to state 176

state 137

    (66) escaux -> llamada . nextexp
    (127) factor -> llamada . pushOT
    (68) nextexp -> . COMA escaux
    (69) nextexp -> . empty
    (140) pushOT -> .
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 140 (pushOT -> .)
    COMA            shift and go to state 175
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)

  ! COMA            [ reduce using rule 140 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 147 (empty -> .) ]

    nextexp                        shift and go to state 177
    pushOT                         shift and go to state 178
    empty                          shift and go to state 176

state 138

    (100) expresion -> andExpresion .
    (101) expresion -> andExpresion . OR pushOper andExpresion

    COMA            reduce using rule 100 (expresion -> andExpresion .)
    PARDER          reduce using rule 100 (expresion -> andExpresion .)
    DOSPUNTOS       reduce using rule 100 (expresion -> andExpresion .)
    CORDER          reduce using rule 100 (expresion -> andExpresion .)
    PYC             reduce using rule 100 (expresion -> andExpresion .)
    OR              shift and go to state 179


state 139

    (130) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (70) llamada -> ID . checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID . checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID . checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER PYC
    (125) factor -> ID . checkID pushOT
    (74) checkFunc -> .
    (57) checkID -> .

    PUNTO           shift and go to state 180
    PARIZQ          reduce using rule 74 (checkFunc -> .)
    MULT            reduce using rule 57 (checkID -> .)
    DIV             reduce using rule 57 (checkID -> .)
    MAS             reduce using rule 57 (checkID -> .)
    MENOS           reduce using rule 57 (checkID -> .)
    MAYORQUE        reduce using rule 57 (checkID -> .)
    MENORQUE        reduce using rule 57 (checkID -> .)
    MAYORIGUAL      reduce using rule 57 (checkID -> .)
    MENORIGUAL      reduce using rule 57 (checkID -> .)
    EQUALS          reduce using rule 57 (checkID -> .)
    DIFERENTE       reduce using rule 57 (checkID -> .)
    AND             reduce using rule 57 (checkID -> .)
    OR              reduce using rule 57 (checkID -> .)
    COMA            reduce using rule 57 (checkID -> .)
    PARDER          reduce using rule 57 (checkID -> .)

    checkFunc                      shift and go to state 116
    checkID                        shift and go to state 181

state 140

    (102) andExpresion -> relopExpresion .
    (103) andExpresion -> relopExpresion . AND pushOper relopExpresion

    OR              reduce using rule 102 (andExpresion -> relopExpresion .)
    COMA            reduce using rule 102 (andExpresion -> relopExpresion .)
    PARDER          reduce using rule 102 (andExpresion -> relopExpresion .)
    DOSPUNTOS       reduce using rule 102 (andExpresion -> relopExpresion .)
    CORDER          reduce using rule 102 (andExpresion -> relopExpresion .)
    PYC             reduce using rule 102 (andExpresion -> relopExpresion .)
    AND             shift and go to state 182


state 141

    (104) relopExpresion -> aritExpresion . cuadArit
    (105) relopExpresion -> aritExpresion . cuadArit relopAux aritExpresion cuadArit
    (143) cuadArit -> .

    MAYORQUE        reduce using rule 143 (cuadArit -> .)
    MENORQUE        reduce using rule 143 (cuadArit -> .)
    MAYORIGUAL      reduce using rule 143 (cuadArit -> .)
    MENORIGUAL      reduce using rule 143 (cuadArit -> .)
    EQUALS          reduce using rule 143 (cuadArit -> .)
    DIFERENTE       reduce using rule 143 (cuadArit -> .)
    AND             reduce using rule 143 (cuadArit -> .)
    OR              reduce using rule 143 (cuadArit -> .)
    COMA            reduce using rule 143 (cuadArit -> .)
    PARDER          reduce using rule 143 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 143 (cuadArit -> .)
    CORDER          reduce using rule 143 (cuadArit -> .)
    PYC             reduce using rule 143 (cuadArit -> .)

    cuadArit                       shift and go to state 183

state 142

    (112) aritExpresion -> term . cuadTerm
    (113) aritExpresion -> term . cuadTerm aritAux term cuadTerm
    (141) cuadTerm -> .

    MAS             reduce using rule 141 (cuadTerm -> .)
    MENOS           reduce using rule 141 (cuadTerm -> .)
    MAYORQUE        reduce using rule 141 (cuadTerm -> .)
    MENORQUE        reduce using rule 141 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 141 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 141 (cuadTerm -> .)
    EQUALS          reduce using rule 141 (cuadTerm -> .)
    DIFERENTE       reduce using rule 141 (cuadTerm -> .)
    AND             reduce using rule 141 (cuadTerm -> .)
    OR              reduce using rule 141 (cuadTerm -> .)
    COMA            reduce using rule 141 (cuadTerm -> .)
    PARDER          reduce using rule 141 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 141 (cuadTerm -> .)
    CORDER          reduce using rule 141 (cuadTerm -> .)
    PYC             reduce using rule 141 (cuadTerm -> .)

    cuadTerm                       shift and go to state 184

state 143

    (116) term -> factor .
    (117) term -> factor . cuadFactor termAux factor cuadFactor
    (142) cuadFactor -> .

    MAS             reduce using rule 116 (term -> factor .)
    MENOS           reduce using rule 116 (term -> factor .)
    MAYORQUE        reduce using rule 116 (term -> factor .)
    MENORQUE        reduce using rule 116 (term -> factor .)
    MAYORIGUAL      reduce using rule 116 (term -> factor .)
    MENORIGUAL      reduce using rule 116 (term -> factor .)
    EQUALS          reduce using rule 116 (term -> factor .)
    DIFERENTE       reduce using rule 116 (term -> factor .)
    AND             reduce using rule 116 (term -> factor .)
    OR              reduce using rule 116 (term -> factor .)
    COMA            reduce using rule 116 (term -> factor .)
    PARDER          reduce using rule 116 (term -> factor .)
    DOSPUNTOS       reduce using rule 116 (term -> factor .)
    CORDER          reduce using rule 116 (term -> factor .)
    PYC             reduce using rule 116 (term -> factor .)
    MULT            reduce using rule 142 (cuadFactor -> .)
    DIV             reduce using rule 142 (cuadFactor -> .)

    cuadFactor                     shift and go to state 185

state 144

    (121) factor -> CTEINT . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 186

state 145

    (122) factor -> CTEFLOAT . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 187

state 146

    (123) factor -> true . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 188

state 147

    (124) factor -> false . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 189

state 148

    (82) condicion -> if PARIZQ expresion . PARDER cuadGotof bloque condicionAux cuadFinIf

    PARDER          shift and go to state 190


state 149

    (125) factor -> ID . checkID pushOT
    (130) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (70) llamada -> ID . checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID . checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID . checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER PYC
    (57) checkID -> .
    (74) checkFunc -> .

    PUNTO           shift and go to state 180
    MULT            reduce using rule 57 (checkID -> .)
    DIV             reduce using rule 57 (checkID -> .)
    MAS             reduce using rule 57 (checkID -> .)
    MENOS           reduce using rule 57 (checkID -> .)
    MAYORQUE        reduce using rule 57 (checkID -> .)
    MENORQUE        reduce using rule 57 (checkID -> .)
    MAYORIGUAL      reduce using rule 57 (checkID -> .)
    MENORIGUAL      reduce using rule 57 (checkID -> .)
    EQUALS          reduce using rule 57 (checkID -> .)
    DIFERENTE       reduce using rule 57 (checkID -> .)
    AND             reduce using rule 57 (checkID -> .)
    OR              reduce using rule 57 (checkID -> .)
    PARDER          reduce using rule 57 (checkID -> .)
    DOSPUNTOS       reduce using rule 57 (checkID -> .)
    CORDER          reduce using rule 57 (checkID -> .)
    COMA            reduce using rule 57 (checkID -> .)
    PYC             reduce using rule 57 (checkID -> .)
    PARIZQ          reduce using rule 74 (checkFunc -> .)

    checkID                        shift and go to state 181
    checkFunc                      shift and go to state 116

state 150

    (126) factor -> llamada_esp . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 174

state 151

    (127) factor -> llamada . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 178

state 152

    (85) whileloop -> while migaja PARIZQ . expresion PARDER cuadGotof bloque cuadFinWhile
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 191
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 153

    (88) forloop -> for PARIZQ expresion . checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (89) checkExpFor -> .

    DOSPUNTOS       reduce using rule 89 (checkExpFor -> .)

    checkExpFor                    shift and go to state 192

state 154

    (92) lectura -> read PARIZQ ID . checkID cuadRead PARDER PYC
    (57) checkID -> .

    PARDER          reduce using rule 57 (checkID -> .)

    checkID                        shift and go to state 193

state 155

    (94) estReturn -> return PARIZQ retAux . PARDER PYC

    PARDER          shift and go to state 194


state 156

    (95) retAux -> expresion .

    PARDER          reduce using rule 95 (retAux -> expresion .)


state 157

    (96) retAux -> CTESTRING .

    PARDER          reduce using rule 96 (retAux -> CTESTRING .)


state 158

    (97) retAux -> true .
    (123) factor -> true . pushOT
    (140) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 97 (retAux -> true .)
    PARDER          reduce using rule 97 (retAux -> true .)
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)

  ! PARDER          [ reduce using rule 140 (pushOT -> .) ]

    pushOT                         shift and go to state 188

state 159

    (98) retAux -> false .
    (124) factor -> false . pushOT
    (140) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 98 (retAux -> false .)
    PARDER          reduce using rule 98 (retAux -> false .)
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)

  ! PARDER          [ reduce using rule 140 (pushOT -> .) ]

    pushOT                         shift and go to state 189

state 160

    (99) retAux -> llamada .
    (127) factor -> llamada . pushOT
    (140) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 99 (retAux -> llamada .)
    PARDER          reduce using rule 99 (retAux -> llamada .)
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)

  ! PARDER          [ reduce using rule 140 (pushOT -> .) ]

    pushOT                         shift and go to state 178

state 161

    (70) llamada -> ID . checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID . checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID . checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER PYC
    (125) factor -> ID . checkID pushOT
    (130) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (74) checkFunc -> .
    (57) checkID -> .

    PUNTO           shift and go to state 180
    PARIZQ          reduce using rule 74 (checkFunc -> .)
    MULT            reduce using rule 57 (checkID -> .)
    DIV             reduce using rule 57 (checkID -> .)
    MAS             reduce using rule 57 (checkID -> .)
    MENOS           reduce using rule 57 (checkID -> .)
    MAYORQUE        reduce using rule 57 (checkID -> .)
    MENORQUE        reduce using rule 57 (checkID -> .)
    MAYORIGUAL      reduce using rule 57 (checkID -> .)
    MENORIGUAL      reduce using rule 57 (checkID -> .)
    EQUALS          reduce using rule 57 (checkID -> .)
    DIFERENTE       reduce using rule 57 (checkID -> .)
    AND             reduce using rule 57 (checkID -> .)
    OR              reduce using rule 57 (checkID -> .)
    PARDER          reduce using rule 57 (checkID -> .)

    checkFunc                      shift and go to state 116
    checkID                        shift and go to state 181

state 162

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .

    int             reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    float           reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    string          reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    bool            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    void            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    func            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)


state 163

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .

    int             reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    float           reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    string          reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    bool            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    void            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    func            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)


state 164

    (42) funcaux -> type ID CORIZQ CTEINT CORDER agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (147) empty -> .

    COMA            shift and go to state 108
    PARDER          reduce using rule 147 (empty -> .)

    masParam                       shift and go to state 195
    empty                          shift and go to state 109

state 165

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT . CORDER agregaPar masParam

    CORDER          shift and go to state 196


state 166

    (54) asignacion -> ID checkID asignaux ASIGNA . expresion cuadAsignacion PYC
    (55) asignacion -> ID checkID asignaux ASIGNA . llamada_esp PYC
    (56) asignacion -> ID checkID asignaux ASIGNA . CTESTRING cuadAsignacion PYC
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    CTESTRING       shift and go to state 200
    ID              shift and go to state 197
    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147

    expresion                      shift and go to state 198
    llamada_esp                    shift and go to state 199
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada                        shift and go to state 151

state 167

    (59) asignaux -> CORIZQ expresion . CORDER
    (60) asignaux -> CORIZQ expresion . COMA expresion CORDER

    CORDER          shift and go to state 201
    COMA            shift and go to state 202


state 168

    (70) llamada -> ID checkFunc cuadEra PARIZQ . expresion llamaux PARDER PYC
    (71) llamada -> ID checkFunc cuadEra PARIZQ . CTESTRING llamaux PARDER PYC
    (72) llamada -> ID checkFunc cuadEra PARIZQ . llamada_esp llamaux PARDER PYC
    (73) llamada -> ID checkFunc cuadEra PARIZQ . PARDER PYC
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    CTESTRING       shift and go to state 205
    PARDER          shift and go to state 204
    ID              shift and go to state 197
    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147

    expresion                      shift and go to state 203
    llamada_esp                    shift and go to state 206
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada                        shift and go to state 151

state 169

    (120) factor -> PARIZQ guardaFondo . expresion PARDER quitaFondo
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 207
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 170

    (62) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 208


state 171

    (63) escaux -> expresion cuadEsc . nextexp
    (68) nextexp -> . COMA escaux
    (69) nextexp -> . empty
    (147) empty -> .

    COMA            shift and go to state 175
    PARDER          reduce using rule 147 (empty -> .)

    nextexp                        shift and go to state 209
    empty                          shift and go to state 176

state 172

    (64) escaux -> CTESTRING cuadEsc . nextexp
    (68) nextexp -> . COMA escaux
    (69) nextexp -> . empty
    (147) empty -> .

    COMA            shift and go to state 175
    PARDER          reduce using rule 147 (empty -> .)

    nextexp                        shift and go to state 210
    empty                          shift and go to state 176

state 173

    (65) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 65 (escaux -> llamada_esp nextexp .)


state 174

    (126) factor -> llamada_esp pushOT .

    MULT            reduce using rule 126 (factor -> llamada_esp pushOT .)
    DIV             reduce using rule 126 (factor -> llamada_esp pushOT .)
    MAS             reduce using rule 126 (factor -> llamada_esp pushOT .)
    MENOS           reduce using rule 126 (factor -> llamada_esp pushOT .)
    MAYORQUE        reduce using rule 126 (factor -> llamada_esp pushOT .)
    MENORQUE        reduce using rule 126 (factor -> llamada_esp pushOT .)
    MAYORIGUAL      reduce using rule 126 (factor -> llamada_esp pushOT .)
    MENORIGUAL      reduce using rule 126 (factor -> llamada_esp pushOT .)
    EQUALS          reduce using rule 126 (factor -> llamada_esp pushOT .)
    DIFERENTE       reduce using rule 126 (factor -> llamada_esp pushOT .)
    AND             reduce using rule 126 (factor -> llamada_esp pushOT .)
    OR              reduce using rule 126 (factor -> llamada_esp pushOT .)
    COMA            reduce using rule 126 (factor -> llamada_esp pushOT .)
    PARDER          reduce using rule 126 (factor -> llamada_esp pushOT .)
    DOSPUNTOS       reduce using rule 126 (factor -> llamada_esp pushOT .)
    CORDER          reduce using rule 126 (factor -> llamada_esp pushOT .)
    PYC             reduce using rule 126 (factor -> llamada_esp pushOT .)


state 175

    (68) nextexp -> COMA . escaux
    (63) escaux -> . expresion cuadEsc nextexp
    (64) escaux -> . CTESTRING cuadEsc nextexp
    (65) escaux -> . llamada_esp nextexp
    (66) escaux -> . llamada nextexp
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT

    CTESTRING       shift and go to state 135
    ID              shift and go to state 139
    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147

    escaux                         shift and go to state 211
    expresion                      shift and go to state 134
    llamada_esp                    shift and go to state 136
    llamada                        shift and go to state 137
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143

state 176

    (69) nextexp -> empty .

    PARDER          reduce using rule 69 (nextexp -> empty .)


state 177

    (66) escaux -> llamada nextexp .

    PARDER          reduce using rule 66 (escaux -> llamada nextexp .)


state 178

    (127) factor -> llamada pushOT .

    MULT            reduce using rule 127 (factor -> llamada pushOT .)
    DIV             reduce using rule 127 (factor -> llamada pushOT .)
    MAS             reduce using rule 127 (factor -> llamada pushOT .)
    MENOS           reduce using rule 127 (factor -> llamada pushOT .)
    MAYORQUE        reduce using rule 127 (factor -> llamada pushOT .)
    MENORQUE        reduce using rule 127 (factor -> llamada pushOT .)
    MAYORIGUAL      reduce using rule 127 (factor -> llamada pushOT .)
    MENORIGUAL      reduce using rule 127 (factor -> llamada pushOT .)
    EQUALS          reduce using rule 127 (factor -> llamada pushOT .)
    DIFERENTE       reduce using rule 127 (factor -> llamada pushOT .)
    AND             reduce using rule 127 (factor -> llamada pushOT .)
    OR              reduce using rule 127 (factor -> llamada pushOT .)
    COMA            reduce using rule 127 (factor -> llamada pushOT .)
    PARDER          reduce using rule 127 (factor -> llamada pushOT .)
    DOSPUNTOS       reduce using rule 127 (factor -> llamada pushOT .)
    CORDER          reduce using rule 127 (factor -> llamada pushOT .)
    PYC             reduce using rule 127 (factor -> llamada pushOT .)


state 179

    (101) expresion -> andExpresion OR . pushOper andExpresion
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 212

state 180

    (130) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (131) especiales -> . length
    (132) especiales -> . max
    (133) especiales -> . min
    (134) especiales -> . avg
    (135) especiales -> . median
    (136) especiales -> . mode
    (137) especiales -> . variance
    (138) especiales -> . stdev

    length          shift and go to state 214
    max             shift and go to state 215
    min             shift and go to state 216
    avg             shift and go to state 217
    median          shift and go to state 218
    mode            shift and go to state 219
    variance        shift and go to state 220
    stdev           shift and go to state 221

    especiales                     shift and go to state 213

state 181

    (125) factor -> ID checkID . pushOT
    (140) pushOT -> .

    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    COMA            reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    DOSPUNTOS       reduce using rule 140 (pushOT -> .)
    CORDER          reduce using rule 140 (pushOT -> .)
    PYC             reduce using rule 140 (pushOT -> .)

    pushOT                         shift and go to state 222

state 182

    (103) andExpresion -> relopExpresion AND . pushOper relopExpresion
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 223

state 183

    (104) relopExpresion -> aritExpresion cuadArit .
    (105) relopExpresion -> aritExpresion cuadArit . relopAux aritExpresion cuadArit
    (106) relopAux -> . MAYORQUE pushOper
    (107) relopAux -> . MENORQUE pushOper
    (108) relopAux -> . MAYORIGUAL pushOper
    (109) relopAux -> . MENORIGUAL pushOper
    (110) relopAux -> . EQUALS pushOper
    (111) relopAux -> . DIFERENTE pushOper

    AND             reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    OR              reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    COMA            reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    PARDER          reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    CORDER          reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    PYC             reduce using rule 104 (relopExpresion -> aritExpresion cuadArit .)
    MAYORQUE        shift and go to state 225
    MENORQUE        shift and go to state 226
    MAYORIGUAL      shift and go to state 227
    MENORIGUAL      shift and go to state 228
    EQUALS          shift and go to state 229
    DIFERENTE       shift and go to state 230

    relopAux                       shift and go to state 224

state 184

    (112) aritExpresion -> term cuadTerm .
    (113) aritExpresion -> term cuadTerm . aritAux term cuadTerm
    (114) aritAux -> . MAS pushOper
    (115) aritAux -> . MENOS pushOper

    MAYORQUE        reduce using rule 112 (aritExpresion -> term cuadTerm .)
    MENORQUE        reduce using rule 112 (aritExpresion -> term cuadTerm .)
    MAYORIGUAL      reduce using rule 112 (aritExpresion -> term cuadTerm .)
    MENORIGUAL      reduce using rule 112 (aritExpresion -> term cuadTerm .)
    EQUALS          reduce using rule 112 (aritExpresion -> term cuadTerm .)
    DIFERENTE       reduce using rule 112 (aritExpresion -> term cuadTerm .)
    AND             reduce using rule 112 (aritExpresion -> term cuadTerm .)
    OR              reduce using rule 112 (aritExpresion -> term cuadTerm .)
    COMA            reduce using rule 112 (aritExpresion -> term cuadTerm .)
    PARDER          reduce using rule 112 (aritExpresion -> term cuadTerm .)
    DOSPUNTOS       reduce using rule 112 (aritExpresion -> term cuadTerm .)
    CORDER          reduce using rule 112 (aritExpresion -> term cuadTerm .)
    PYC             reduce using rule 112 (aritExpresion -> term cuadTerm .)
    MAS             shift and go to state 232
    MENOS           shift and go to state 233

    aritAux                        shift and go to state 231

state 185

    (117) term -> factor cuadFactor . termAux factor cuadFactor
    (118) termAux -> . MULT pushOper
    (119) termAux -> . DIV pushOper

    MULT            shift and go to state 235
    DIV             shift and go to state 236

    termAux                        shift and go to state 234

state 186

    (121) factor -> CTEINT pushOT .

    MULT            reduce using rule 121 (factor -> CTEINT pushOT .)
    DIV             reduce using rule 121 (factor -> CTEINT pushOT .)
    MAS             reduce using rule 121 (factor -> CTEINT pushOT .)
    MENOS           reduce using rule 121 (factor -> CTEINT pushOT .)
    MAYORQUE        reduce using rule 121 (factor -> CTEINT pushOT .)
    MENORQUE        reduce using rule 121 (factor -> CTEINT pushOT .)
    MAYORIGUAL      reduce using rule 121 (factor -> CTEINT pushOT .)
    MENORIGUAL      reduce using rule 121 (factor -> CTEINT pushOT .)
    EQUALS          reduce using rule 121 (factor -> CTEINT pushOT .)
    DIFERENTE       reduce using rule 121 (factor -> CTEINT pushOT .)
    AND             reduce using rule 121 (factor -> CTEINT pushOT .)
    OR              reduce using rule 121 (factor -> CTEINT pushOT .)
    COMA            reduce using rule 121 (factor -> CTEINT pushOT .)
    PARDER          reduce using rule 121 (factor -> CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 121 (factor -> CTEINT pushOT .)
    CORDER          reduce using rule 121 (factor -> CTEINT pushOT .)
    PYC             reduce using rule 121 (factor -> CTEINT pushOT .)


state 187

    (122) factor -> CTEFLOAT pushOT .

    MULT            reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    DIV             reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    MAS             reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    MENOS           reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    MAYORQUE        reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    MENORQUE        reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    MAYORIGUAL      reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    MENORIGUAL      reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    EQUALS          reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    DIFERENTE       reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    AND             reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    OR              reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    COMA            reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    PARDER          reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    DOSPUNTOS       reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    CORDER          reduce using rule 122 (factor -> CTEFLOAT pushOT .)
    PYC             reduce using rule 122 (factor -> CTEFLOAT pushOT .)


state 188

    (123) factor -> true pushOT .

    MULT            reduce using rule 123 (factor -> true pushOT .)
    DIV             reduce using rule 123 (factor -> true pushOT .)
    MAS             reduce using rule 123 (factor -> true pushOT .)
    MENOS           reduce using rule 123 (factor -> true pushOT .)
    MAYORQUE        reduce using rule 123 (factor -> true pushOT .)
    MENORQUE        reduce using rule 123 (factor -> true pushOT .)
    MAYORIGUAL      reduce using rule 123 (factor -> true pushOT .)
    MENORIGUAL      reduce using rule 123 (factor -> true pushOT .)
    EQUALS          reduce using rule 123 (factor -> true pushOT .)
    DIFERENTE       reduce using rule 123 (factor -> true pushOT .)
    AND             reduce using rule 123 (factor -> true pushOT .)
    OR              reduce using rule 123 (factor -> true pushOT .)
    COMA            reduce using rule 123 (factor -> true pushOT .)
    PARDER          reduce using rule 123 (factor -> true pushOT .)
    DOSPUNTOS       reduce using rule 123 (factor -> true pushOT .)
    CORDER          reduce using rule 123 (factor -> true pushOT .)
    PYC             reduce using rule 123 (factor -> true pushOT .)


state 189

    (124) factor -> false pushOT .

    MULT            reduce using rule 124 (factor -> false pushOT .)
    DIV             reduce using rule 124 (factor -> false pushOT .)
    MAS             reduce using rule 124 (factor -> false pushOT .)
    MENOS           reduce using rule 124 (factor -> false pushOT .)
    MAYORQUE        reduce using rule 124 (factor -> false pushOT .)
    MENORQUE        reduce using rule 124 (factor -> false pushOT .)
    MAYORIGUAL      reduce using rule 124 (factor -> false pushOT .)
    MENORIGUAL      reduce using rule 124 (factor -> false pushOT .)
    EQUALS          reduce using rule 124 (factor -> false pushOT .)
    DIFERENTE       reduce using rule 124 (factor -> false pushOT .)
    AND             reduce using rule 124 (factor -> false pushOT .)
    OR              reduce using rule 124 (factor -> false pushOT .)
    COMA            reduce using rule 124 (factor -> false pushOT .)
    PARDER          reduce using rule 124 (factor -> false pushOT .)
    DOSPUNTOS       reduce using rule 124 (factor -> false pushOT .)
    CORDER          reduce using rule 124 (factor -> false pushOT .)
    PYC             reduce using rule 124 (factor -> false pushOT .)


state 190

    (82) condicion -> if PARIZQ expresion PARDER . cuadGotof bloque condicionAux cuadFinIf
    (144) cuadGotof -> .

    LLAVEIZQ        reduce using rule 144 (cuadGotof -> .)

    cuadGotof                      shift and go to state 237

state 191

    (85) whileloop -> while migaja PARIZQ expresion . PARDER cuadGotof bloque cuadFinWhile

    PARDER          shift and go to state 238


state 192

    (88) forloop -> for PARIZQ expresion checkExpFor . DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    DOSPUNTOS       shift and go to state 239


state 193

    (92) lectura -> read PARIZQ ID checkID . cuadRead PARDER PYC
    (93) cuadRead -> .

    PARDER          reduce using rule 93 (cuadRead -> .)

    cuadRead                       shift and go to state 240

state 194

    (94) estReturn -> return PARIZQ retAux PARDER . PYC

    PYC             shift and go to state 241


state 195

    (42) funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam .

    PARDER          reduce using rule 42 (funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam .)


state 196

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER . agregaPar masParam
    (18) agregaPar -> .

    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 242

state 197

    (130) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (125) factor -> ID . checkID pushOT
    (70) llamada -> ID . checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> ID . checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> ID . checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER PYC
    (57) checkID -> .
    (74) checkFunc -> .

    PUNTO           shift and go to state 180
    MULT            reduce using rule 57 (checkID -> .)
    DIV             reduce using rule 57 (checkID -> .)
    MAS             reduce using rule 57 (checkID -> .)
    MENOS           reduce using rule 57 (checkID -> .)
    MAYORQUE        reduce using rule 57 (checkID -> .)
    MENORQUE        reduce using rule 57 (checkID -> .)
    MAYORIGUAL      reduce using rule 57 (checkID -> .)
    MENORIGUAL      reduce using rule 57 (checkID -> .)
    EQUALS          reduce using rule 57 (checkID -> .)
    DIFERENTE       reduce using rule 57 (checkID -> .)
    AND             reduce using rule 57 (checkID -> .)
    OR              reduce using rule 57 (checkID -> .)
    PYC             reduce using rule 57 (checkID -> .)
    COMA            reduce using rule 57 (checkID -> .)
    PARDER          reduce using rule 57 (checkID -> .)
    PARIZQ          reduce using rule 74 (checkFunc -> .)

    checkID                        shift and go to state 181
    checkFunc                      shift and go to state 116

state 198

    (54) asignacion -> ID checkID asignaux ASIGNA expresion . cuadAsignacion PYC
    (58) cuadAsignacion -> .

    PYC             reduce using rule 58 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 243

state 199

    (55) asignacion -> ID checkID asignaux ASIGNA llamada_esp . PYC
    (126) factor -> llamada_esp . pushOT
    (140) pushOT -> .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 244
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)

  ! PYC             [ reduce using rule 140 (pushOT -> .) ]

    pushOT                         shift and go to state 174

state 200

    (56) asignacion -> ID checkID asignaux ASIGNA CTESTRING . cuadAsignacion PYC
    (58) cuadAsignacion -> .

    PYC             reduce using rule 58 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 245

state 201

    (59) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 59 (asignaux -> CORIZQ expresion CORDER .)


state 202

    (60) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 246
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 203

    (70) llamada -> ID checkFunc cuadEra PARIZQ expresion . llamaux PARDER PYC
    (76) llamaux -> . COMA expresion nextparametro
    (77) llamaux -> . COMA llamada_esp nextparametro
    (78) llamaux -> . COMA CTESTRING nextparametro
    (79) llamaux -> . empty
    (147) empty -> .

    COMA            shift and go to state 248
    PARDER          reduce using rule 147 (empty -> .)

    llamaux                        shift and go to state 247
    empty                          shift and go to state 249

state 204

    (73) llamada -> ID checkFunc cuadEra PARIZQ PARDER . PYC

    PYC             shift and go to state 250


state 205

    (71) llamada -> ID checkFunc cuadEra PARIZQ CTESTRING . llamaux PARDER PYC
    (76) llamaux -> . COMA expresion nextparametro
    (77) llamaux -> . COMA llamada_esp nextparametro
    (78) llamaux -> . COMA CTESTRING nextparametro
    (79) llamaux -> . empty
    (147) empty -> .

    COMA            shift and go to state 248
    PARDER          reduce using rule 147 (empty -> .)

    llamaux                        shift and go to state 251
    empty                          shift and go to state 249

state 206

    (72) llamada -> ID checkFunc cuadEra PARIZQ llamada_esp . llamaux PARDER PYC
    (126) factor -> llamada_esp . pushOT
    (76) llamaux -> . COMA expresion nextparametro
    (77) llamaux -> . COMA llamada_esp nextparametro
    (78) llamaux -> . COMA CTESTRING nextparametro
    (79) llamaux -> . empty
    (140) pushOT -> .
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 140 (pushOT -> .)
    COMA            shift and go to state 248
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)

  ! COMA            [ reduce using rule 140 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 147 (empty -> .) ]

    llamaux                        shift and go to state 252
    pushOT                         shift and go to state 174
    empty                          shift and go to state 249

state 207

    (120) factor -> PARIZQ guardaFondo expresion . PARDER quitaFondo

    PARDER          shift and go to state 253


state 208

    (62) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    return          reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 62 (escritura -> write PARIZQ escaux PARDER PYC .)


state 209

    (63) escaux -> expresion cuadEsc nextexp .

    PARDER          reduce using rule 63 (escaux -> expresion cuadEsc nextexp .)


state 210

    (64) escaux -> CTESTRING cuadEsc nextexp .

    PARDER          reduce using rule 64 (escaux -> CTESTRING cuadEsc nextexp .)


state 211

    (68) nextexp -> COMA escaux .

    PARDER          reduce using rule 68 (nextexp -> COMA escaux .)


state 212

    (101) expresion -> andExpresion OR pushOper . andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    andExpresion                   shift and go to state 254
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 213

    (130) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 255


state 214

    (131) especiales -> length .

    PARIZQ          reduce using rule 131 (especiales -> length .)


state 215

    (132) especiales -> max .

    PARIZQ          reduce using rule 132 (especiales -> max .)


state 216

    (133) especiales -> min .

    PARIZQ          reduce using rule 133 (especiales -> min .)


state 217

    (134) especiales -> avg .

    PARIZQ          reduce using rule 134 (especiales -> avg .)


state 218

    (135) especiales -> median .

    PARIZQ          reduce using rule 135 (especiales -> median .)


state 219

    (136) especiales -> mode .

    PARIZQ          reduce using rule 136 (especiales -> mode .)


state 220

    (137) especiales -> variance .

    PARIZQ          reduce using rule 137 (especiales -> variance .)


state 221

    (138) especiales -> stdev .

    PARIZQ          reduce using rule 138 (especiales -> stdev .)


state 222

    (125) factor -> ID checkID pushOT .

    MULT            reduce using rule 125 (factor -> ID checkID pushOT .)
    DIV             reduce using rule 125 (factor -> ID checkID pushOT .)
    MAS             reduce using rule 125 (factor -> ID checkID pushOT .)
    MENOS           reduce using rule 125 (factor -> ID checkID pushOT .)
    MAYORQUE        reduce using rule 125 (factor -> ID checkID pushOT .)
    MENORQUE        reduce using rule 125 (factor -> ID checkID pushOT .)
    MAYORIGUAL      reduce using rule 125 (factor -> ID checkID pushOT .)
    MENORIGUAL      reduce using rule 125 (factor -> ID checkID pushOT .)
    EQUALS          reduce using rule 125 (factor -> ID checkID pushOT .)
    DIFERENTE       reduce using rule 125 (factor -> ID checkID pushOT .)
    AND             reduce using rule 125 (factor -> ID checkID pushOT .)
    OR              reduce using rule 125 (factor -> ID checkID pushOT .)
    COMA            reduce using rule 125 (factor -> ID checkID pushOT .)
    PARDER          reduce using rule 125 (factor -> ID checkID pushOT .)
    DOSPUNTOS       reduce using rule 125 (factor -> ID checkID pushOT .)
    CORDER          reduce using rule 125 (factor -> ID checkID pushOT .)
    PYC             reduce using rule 125 (factor -> ID checkID pushOT .)


state 223

    (103) andExpresion -> relopExpresion AND pushOper . relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    relopExpresion                 shift and go to state 256
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 224

    (105) relopExpresion -> aritExpresion cuadArit relopAux . aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    aritExpresion                  shift and go to state 257
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 225

    (106) relopAux -> MAYORQUE . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 258

state 226

    (107) relopAux -> MENORQUE . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 259

state 227

    (108) relopAux -> MAYORIGUAL . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 260

state 228

    (109) relopAux -> MENORIGUAL . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 261

state 229

    (110) relopAux -> EQUALS . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 262

state 230

    (111) relopAux -> DIFERENTE . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 263

state 231

    (113) aritExpresion -> term cuadTerm aritAux . term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    term                           shift and go to state 264
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 232

    (114) aritAux -> MAS . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 265

state 233

    (115) aritAux -> MENOS . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 266

state 234

    (117) term -> factor cuadFactor termAux . factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    factor                         shift and go to state 267
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 235

    (118) termAux -> MULT . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 268

state 236

    (119) termAux -> DIV . pushOper
    (139) pushOper -> .

    PARIZQ          reduce using rule 139 (pushOper -> .)
    CTEINT          reduce using rule 139 (pushOper -> .)
    CTEFLOAT        reduce using rule 139 (pushOper -> .)
    true            reduce using rule 139 (pushOper -> .)
    false           reduce using rule 139 (pushOper -> .)
    ID              reduce using rule 139 (pushOper -> .)

    pushOper                       shift and go to state 269

state 237

    (82) condicion -> if PARIZQ expresion PARDER cuadGotof . bloque condicionAux cuadFinIf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 270

state 238

    (85) whileloop -> while migaja PARIZQ expresion PARDER . cuadGotof bloque cuadFinWhile
    (144) cuadGotof -> .

    LLAVEIZQ        reduce using rule 144 (cuadGotof -> .)

    cuadGotof                      shift and go to state 271

state 239

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS . expresion checkExpFor PARDER gotoFor bloque returnFor
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147
    ID              shift and go to state 149

    expresion                      shift and go to state 272
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada_esp                    shift and go to state 150
    llamada                        shift and go to state 151

state 240

    (92) lectura -> read PARIZQ ID checkID cuadRead . PARDER PYC

    PARDER          shift and go to state 273


state 241

    (94) estReturn -> return PARIZQ retAux PARDER PYC .

    ID              reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    write           reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    if              reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    while           reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    for             reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    read            reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    return          reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)
    LLAVEDER        reduce using rule 94 (estReturn -> return PARIZQ retAux PARDER PYC .)


state 242

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (147) empty -> .

    COMA            shift and go to state 108
    PARDER          reduce using rule 147 (empty -> .)

    masParam                       shift and go to state 274
    empty                          shift and go to state 109

state 243

    (54) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion . PYC

    PYC             shift and go to state 275


state 244

    (55) asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    return          reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)


state 245

    (56) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion . PYC

    PYC             shift and go to state 276


state 246

    (60) asignaux -> CORIZQ expresion COMA expresion . CORDER

    CORDER          shift and go to state 277


state 247

    (70) llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux . PARDER PYC

    PARDER          shift and go to state 278


state 248

    (76) llamaux -> COMA . expresion nextparametro
    (77) llamaux -> COMA . llamada_esp nextparametro
    (78) llamaux -> COMA . CTESTRING nextparametro
    (100) expresion -> . andExpresion
    (101) expresion -> . andExpresion OR pushOper andExpresion
    (130) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (102) andExpresion -> . relopExpresion
    (103) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (104) relopExpresion -> . aritExpresion cuadArit
    (105) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (112) aritExpresion -> . term cuadTerm
    (113) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (116) term -> . factor
    (117) term -> . factor cuadFactor termAux factor cuadFactor
    (120) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (121) factor -> . CTEINT pushOT
    (122) factor -> . CTEFLOAT pushOT
    (123) factor -> . true pushOT
    (124) factor -> . false pushOT
    (125) factor -> . ID checkID pushOT
    (126) factor -> . llamada_esp pushOT
    (127) factor -> . llamada pushOT
    (70) llamada -> . ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER PYC

    CTESTRING       shift and go to state 281
    ID              shift and go to state 197
    PARIZQ          shift and go to state 132
    CTEINT          shift and go to state 144
    CTEFLOAT        shift and go to state 145
    true            shift and go to state 146
    false           shift and go to state 147

    expresion                      shift and go to state 279
    llamada_esp                    shift and go to state 280
    andExpresion                   shift and go to state 138
    relopExpresion                 shift and go to state 140
    aritExpresion                  shift and go to state 141
    term                           shift and go to state 142
    factor                         shift and go to state 143
    llamada                        shift and go to state 151

state 249

    (79) llamaux -> empty .

    PARDER          reduce using rule 79 (llamaux -> empty .)


state 250

    (73) llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .

    ID              reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    write           reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    if              reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    while           reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    for             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    read            reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    return          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    LLAVEDER        reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    COMA            reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    PARDER          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MULT            reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    DIV             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MAS             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MENOS           reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MAYORQUE        reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MENORQUE        reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MAYORIGUAL      reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    MENORIGUAL      reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    EQUALS          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    DIFERENTE       reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    AND             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    OR              reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    DOSPUNTOS       reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    CORDER          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)
    PYC             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER PYC .)


state 251

    (71) llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux . PARDER PYC

    PARDER          shift and go to state 282


state 252

    (72) llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux . PARDER PYC

    PARDER          shift and go to state 283


state 253

    (120) factor -> PARIZQ guardaFondo expresion PARDER . quitaFondo
    (129) quitaFondo -> .

    MULT            reduce using rule 129 (quitaFondo -> .)
    DIV             reduce using rule 129 (quitaFondo -> .)
    MAS             reduce using rule 129 (quitaFondo -> .)
    MENOS           reduce using rule 129 (quitaFondo -> .)
    MAYORQUE        reduce using rule 129 (quitaFondo -> .)
    MENORQUE        reduce using rule 129 (quitaFondo -> .)
    MAYORIGUAL      reduce using rule 129 (quitaFondo -> .)
    MENORIGUAL      reduce using rule 129 (quitaFondo -> .)
    EQUALS          reduce using rule 129 (quitaFondo -> .)
    DIFERENTE       reduce using rule 129 (quitaFondo -> .)
    AND             reduce using rule 129 (quitaFondo -> .)
    OR              reduce using rule 129 (quitaFondo -> .)
    COMA            reduce using rule 129 (quitaFondo -> .)
    PARDER          reduce using rule 129 (quitaFondo -> .)
    DOSPUNTOS       reduce using rule 129 (quitaFondo -> .)
    CORDER          reduce using rule 129 (quitaFondo -> .)
    PYC             reduce using rule 129 (quitaFondo -> .)

    quitaFondo                     shift and go to state 284

state 254

    (101) expresion -> andExpresion OR pushOper andExpresion .

    COMA            reduce using rule 101 (expresion -> andExpresion OR pushOper andExpresion .)
    PARDER          reduce using rule 101 (expresion -> andExpresion OR pushOper andExpresion .)
    DOSPUNTOS       reduce using rule 101 (expresion -> andExpresion OR pushOper andExpresion .)
    CORDER          reduce using rule 101 (expresion -> andExpresion OR pushOper andExpresion .)
    PYC             reduce using rule 101 (expresion -> andExpresion OR pushOper andExpresion .)


state 255

    (130) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 285


state 256

    (103) andExpresion -> relopExpresion AND pushOper relopExpresion .

    OR              reduce using rule 103 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    COMA            reduce using rule 103 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARDER          reduce using rule 103 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    DOSPUNTOS       reduce using rule 103 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CORDER          reduce using rule 103 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PYC             reduce using rule 103 (andExpresion -> relopExpresion AND pushOper relopExpresion .)


state 257

    (105) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion . cuadArit
    (143) cuadArit -> .

    AND             reduce using rule 143 (cuadArit -> .)
    OR              reduce using rule 143 (cuadArit -> .)
    COMA            reduce using rule 143 (cuadArit -> .)
    PARDER          reduce using rule 143 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 143 (cuadArit -> .)
    CORDER          reduce using rule 143 (cuadArit -> .)
    PYC             reduce using rule 143 (cuadArit -> .)

    cuadArit                       shift and go to state 286

state 258

    (106) relopAux -> MAYORQUE pushOper .

    PARIZQ          reduce using rule 106 (relopAux -> MAYORQUE pushOper .)
    CTEINT          reduce using rule 106 (relopAux -> MAYORQUE pushOper .)
    CTEFLOAT        reduce using rule 106 (relopAux -> MAYORQUE pushOper .)
    true            reduce using rule 106 (relopAux -> MAYORQUE pushOper .)
    false           reduce using rule 106 (relopAux -> MAYORQUE pushOper .)
    ID              reduce using rule 106 (relopAux -> MAYORQUE pushOper .)


state 259

    (107) relopAux -> MENORQUE pushOper .

    PARIZQ          reduce using rule 107 (relopAux -> MENORQUE pushOper .)
    CTEINT          reduce using rule 107 (relopAux -> MENORQUE pushOper .)
    CTEFLOAT        reduce using rule 107 (relopAux -> MENORQUE pushOper .)
    true            reduce using rule 107 (relopAux -> MENORQUE pushOper .)
    false           reduce using rule 107 (relopAux -> MENORQUE pushOper .)
    ID              reduce using rule 107 (relopAux -> MENORQUE pushOper .)


state 260

    (108) relopAux -> MAYORIGUAL pushOper .

    PARIZQ          reduce using rule 108 (relopAux -> MAYORIGUAL pushOper .)
    CTEINT          reduce using rule 108 (relopAux -> MAYORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 108 (relopAux -> MAYORIGUAL pushOper .)
    true            reduce using rule 108 (relopAux -> MAYORIGUAL pushOper .)
    false           reduce using rule 108 (relopAux -> MAYORIGUAL pushOper .)
    ID              reduce using rule 108 (relopAux -> MAYORIGUAL pushOper .)


state 261

    (109) relopAux -> MENORIGUAL pushOper .

    PARIZQ          reduce using rule 109 (relopAux -> MENORIGUAL pushOper .)
    CTEINT          reduce using rule 109 (relopAux -> MENORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 109 (relopAux -> MENORIGUAL pushOper .)
    true            reduce using rule 109 (relopAux -> MENORIGUAL pushOper .)
    false           reduce using rule 109 (relopAux -> MENORIGUAL pushOper .)
    ID              reduce using rule 109 (relopAux -> MENORIGUAL pushOper .)


state 262

    (110) relopAux -> EQUALS pushOper .

    PARIZQ          reduce using rule 110 (relopAux -> EQUALS pushOper .)
    CTEINT          reduce using rule 110 (relopAux -> EQUALS pushOper .)
    CTEFLOAT        reduce using rule 110 (relopAux -> EQUALS pushOper .)
    true            reduce using rule 110 (relopAux -> EQUALS pushOper .)
    false           reduce using rule 110 (relopAux -> EQUALS pushOper .)
    ID              reduce using rule 110 (relopAux -> EQUALS pushOper .)


state 263

    (111) relopAux -> DIFERENTE pushOper .

    PARIZQ          reduce using rule 111 (relopAux -> DIFERENTE pushOper .)
    CTEINT          reduce using rule 111 (relopAux -> DIFERENTE pushOper .)
    CTEFLOAT        reduce using rule 111 (relopAux -> DIFERENTE pushOper .)
    true            reduce using rule 111 (relopAux -> DIFERENTE pushOper .)
    false           reduce using rule 111 (relopAux -> DIFERENTE pushOper .)
    ID              reduce using rule 111 (relopAux -> DIFERENTE pushOper .)


state 264

    (113) aritExpresion -> term cuadTerm aritAux term . cuadTerm
    (141) cuadTerm -> .

    MAYORQUE        reduce using rule 141 (cuadTerm -> .)
    MENORQUE        reduce using rule 141 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 141 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 141 (cuadTerm -> .)
    EQUALS          reduce using rule 141 (cuadTerm -> .)
    DIFERENTE       reduce using rule 141 (cuadTerm -> .)
    AND             reduce using rule 141 (cuadTerm -> .)
    OR              reduce using rule 141 (cuadTerm -> .)
    COMA            reduce using rule 141 (cuadTerm -> .)
    PARDER          reduce using rule 141 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 141 (cuadTerm -> .)
    CORDER          reduce using rule 141 (cuadTerm -> .)
    PYC             reduce using rule 141 (cuadTerm -> .)

    cuadTerm                       shift and go to state 287

state 265

    (114) aritAux -> MAS pushOper .

    PARIZQ          reduce using rule 114 (aritAux -> MAS pushOper .)
    CTEINT          reduce using rule 114 (aritAux -> MAS pushOper .)
    CTEFLOAT        reduce using rule 114 (aritAux -> MAS pushOper .)
    true            reduce using rule 114 (aritAux -> MAS pushOper .)
    false           reduce using rule 114 (aritAux -> MAS pushOper .)
    ID              reduce using rule 114 (aritAux -> MAS pushOper .)


state 266

    (115) aritAux -> MENOS pushOper .

    PARIZQ          reduce using rule 115 (aritAux -> MENOS pushOper .)
    CTEINT          reduce using rule 115 (aritAux -> MENOS pushOper .)
    CTEFLOAT        reduce using rule 115 (aritAux -> MENOS pushOper .)
    true            reduce using rule 115 (aritAux -> MENOS pushOper .)
    false           reduce using rule 115 (aritAux -> MENOS pushOper .)
    ID              reduce using rule 115 (aritAux -> MENOS pushOper .)


state 267

    (117) term -> factor cuadFactor termAux factor . cuadFactor
    (142) cuadFactor -> .

    MAS             reduce using rule 142 (cuadFactor -> .)
    MENOS           reduce using rule 142 (cuadFactor -> .)
    MAYORQUE        reduce using rule 142 (cuadFactor -> .)
    MENORQUE        reduce using rule 142 (cuadFactor -> .)
    MAYORIGUAL      reduce using rule 142 (cuadFactor -> .)
    MENORIGUAL      reduce using rule 142 (cuadFactor -> .)
    EQUALS          reduce using rule 142 (cuadFactor -> .)
    DIFERENTE       reduce using rule 142 (cuadFactor -> .)
    AND             reduce using rule 142 (cuadFactor -> .)
    OR              reduce using rule 142 (cuadFactor -> .)
    COMA            reduce using rule 142 (cuadFactor -> .)
    PARDER          reduce using rule 142 (cuadFactor -> .)
    DOSPUNTOS       reduce using rule 142 (cuadFactor -> .)
    CORDER          reduce using rule 142 (cuadFactor -> .)
    PYC             reduce using rule 142 (cuadFactor -> .)

    cuadFactor                     shift and go to state 288

state 268

    (118) termAux -> MULT pushOper .

    PARIZQ          reduce using rule 118 (termAux -> MULT pushOper .)
    CTEINT          reduce using rule 118 (termAux -> MULT pushOper .)
    CTEFLOAT        reduce using rule 118 (termAux -> MULT pushOper .)
    true            reduce using rule 118 (termAux -> MULT pushOper .)
    false           reduce using rule 118 (termAux -> MULT pushOper .)
    ID              reduce using rule 118 (termAux -> MULT pushOper .)


state 269

    (119) termAux -> DIV pushOper .

    PARIZQ          reduce using rule 119 (termAux -> DIV pushOper .)
    CTEINT          reduce using rule 119 (termAux -> DIV pushOper .)
    CTEFLOAT        reduce using rule 119 (termAux -> DIV pushOper .)
    true            reduce using rule 119 (termAux -> DIV pushOper .)
    false           reduce using rule 119 (termAux -> DIV pushOper .)
    ID              reduce using rule 119 (termAux -> DIV pushOper .)


state 270

    (82) condicion -> if PARIZQ expresion PARDER cuadGotof bloque . condicionAux cuadFinIf
    (83) condicionAux -> . else cuadGoto bloque
    (84) condicionAux -> . empty
    (147) empty -> .

    else            shift and go to state 290
    ID              reduce using rule 147 (empty -> .)
    write           reduce using rule 147 (empty -> .)
    if              reduce using rule 147 (empty -> .)
    while           reduce using rule 147 (empty -> .)
    for             reduce using rule 147 (empty -> .)
    read            reduce using rule 147 (empty -> .)
    return          reduce using rule 147 (empty -> .)
    LLAVEDER        reduce using rule 147 (empty -> .)

    condicionAux                   shift and go to state 289
    empty                          shift and go to state 291

state 271

    (85) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof . bloque cuadFinWhile
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 292

state 272

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion . checkExpFor PARDER gotoFor bloque returnFor
    (89) checkExpFor -> .

    PARDER          reduce using rule 89 (checkExpFor -> .)

    checkExpFor                    shift and go to state 293

state 273

    (92) lectura -> read PARIZQ ID checkID cuadRead PARDER . PYC

    PYC             shift and go to state 294


state 274

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam .

    PARDER          reduce using rule 43 (funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam .)


state 275

    (54) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .

    ID              reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    write           reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    if              reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    while           reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    for             reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    read            reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    return          reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)


state 276

    (56) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .

    ID              reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    write           reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    if              reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    while           reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    for             reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    read            reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    return          reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)


state 277

    (60) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 60 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 278

    (70) llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER . PYC

    PYC             shift and go to state 295


state 279

    (76) llamaux -> COMA expresion . nextparametro
    (80) nextparametro -> . llamaux
    (81) nextparametro -> . empty
    (76) llamaux -> . COMA expresion nextparametro
    (77) llamaux -> . COMA llamada_esp nextparametro
    (78) llamaux -> . COMA CTESTRING nextparametro
    (79) llamaux -> . empty
    (147) empty -> .

    COMA            shift and go to state 248
    PARDER          reduce using rule 147 (empty -> .)

    nextparametro                  shift and go to state 296
    llamaux                        shift and go to state 297
    empty                          shift and go to state 298

state 280

    (77) llamaux -> COMA llamada_esp . nextparametro
    (126) factor -> llamada_esp . pushOT
    (80) nextparametro -> . llamaux
    (81) nextparametro -> . empty
    (140) pushOT -> .
    (76) llamaux -> . COMA expresion nextparametro
    (77) llamaux -> . COMA llamada_esp nextparametro
    (78) llamaux -> . COMA CTESTRING nextparametro
    (79) llamaux -> . empty
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 140 (pushOT -> .)
    MULT            reduce using rule 140 (pushOT -> .)
    DIV             reduce using rule 140 (pushOT -> .)
    MAS             reduce using rule 140 (pushOT -> .)
    MENOS           reduce using rule 140 (pushOT -> .)
    MAYORQUE        reduce using rule 140 (pushOT -> .)
    MENORQUE        reduce using rule 140 (pushOT -> .)
    MAYORIGUAL      reduce using rule 140 (pushOT -> .)
    MENORIGUAL      reduce using rule 140 (pushOT -> .)
    EQUALS          reduce using rule 140 (pushOT -> .)
    DIFERENTE       reduce using rule 140 (pushOT -> .)
    AND             reduce using rule 140 (pushOT -> .)
    OR              reduce using rule 140 (pushOT -> .)
    PARDER          reduce using rule 140 (pushOT -> .)
    COMA            shift and go to state 248

  ! COMA            [ reduce using rule 140 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 147 (empty -> .) ]

    nextparametro                  shift and go to state 299
    pushOT                         shift and go to state 174
    llamaux                        shift and go to state 297
    empty                          shift and go to state 298

state 281

    (78) llamaux -> COMA CTESTRING . nextparametro
    (80) nextparametro -> . llamaux
    (81) nextparametro -> . empty
    (76) llamaux -> . COMA expresion nextparametro
    (77) llamaux -> . COMA llamada_esp nextparametro
    (78) llamaux -> . COMA CTESTRING nextparametro
    (79) llamaux -> . empty
    (147) empty -> .

    COMA            shift and go to state 248
    PARDER          reduce using rule 147 (empty -> .)

    nextparametro                  shift and go to state 300
    llamaux                        shift and go to state 297
    empty                          shift and go to state 298

state 282

    (71) llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER . PYC

    PYC             shift and go to state 301


state 283

    (72) llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER . PYC

    PYC             shift and go to state 302


state 284

    (120) factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .

    MULT            reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DIV             reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAS             reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENOS           reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAYORQUE        reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENORQUE        reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAYORIGUAL      reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENORIGUAL      reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    EQUALS          reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DIFERENTE       reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    AND             reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    OR              reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    COMA            reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    PARDER          reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DOSPUNTOS       reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    CORDER          reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    PYC             reduce using rule 120 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)


state 285

    (130) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    COMA            reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MULT            reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIV             reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAS             reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENOS           reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORQUE        reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORQUE        reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    EQUALS          reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIFERENTE       reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    AND             reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    OR              reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CORDER          reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 130 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 286

    (105) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .

    AND             reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    OR              reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    COMA            reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARDER          reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CORDER          reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PYC             reduce using rule 105 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)


state 287

    (113) aritExpresion -> term cuadTerm aritAux term cuadTerm .

    MAYORQUE        reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORQUE        reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MAYORIGUAL      reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORIGUAL      reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    EQUALS          reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DIFERENTE       reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    AND             reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    OR              reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    COMA            reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARDER          reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DOSPUNTOS       reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CORDER          reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PYC             reduce using rule 113 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)


state 288

    (117) term -> factor cuadFactor termAux factor cuadFactor .

    MAS             reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENOS           reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORQUE        reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORQUE        reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORIGUAL      reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORIGUAL      reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    EQUALS          reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    DIFERENTE       reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    AND             reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    OR              reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    COMA            reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARDER          reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    DOSPUNTOS       reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    CORDER          reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)
    PYC             reduce using rule 117 (term -> factor cuadFactor termAux factor cuadFactor .)


state 289

    (82) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux . cuadFinIf
    (145) cuadFinIf -> .

    ID              reduce using rule 145 (cuadFinIf -> .)
    write           reduce using rule 145 (cuadFinIf -> .)
    if              reduce using rule 145 (cuadFinIf -> .)
    while           reduce using rule 145 (cuadFinIf -> .)
    for             reduce using rule 145 (cuadFinIf -> .)
    read            reduce using rule 145 (cuadFinIf -> .)
    return          reduce using rule 145 (cuadFinIf -> .)
    LLAVEDER        reduce using rule 145 (cuadFinIf -> .)

    cuadFinIf                      shift and go to state 303

state 290

    (83) condicionAux -> else . cuadGoto bloque
    (146) cuadGoto -> .

    LLAVEIZQ        reduce using rule 146 (cuadGoto -> .)

    cuadGoto                       shift and go to state 304

state 291

    (84) condicionAux -> empty .

    ID              reduce using rule 84 (condicionAux -> empty .)
    write           reduce using rule 84 (condicionAux -> empty .)
    if              reduce using rule 84 (condicionAux -> empty .)
    while           reduce using rule 84 (condicionAux -> empty .)
    for             reduce using rule 84 (condicionAux -> empty .)
    read            reduce using rule 84 (condicionAux -> empty .)
    return          reduce using rule 84 (condicionAux -> empty .)
    LLAVEDER        reduce using rule 84 (condicionAux -> empty .)


state 292

    (85) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque . cuadFinWhile
    (87) cuadFinWhile -> .

    ID              reduce using rule 87 (cuadFinWhile -> .)
    write           reduce using rule 87 (cuadFinWhile -> .)
    if              reduce using rule 87 (cuadFinWhile -> .)
    while           reduce using rule 87 (cuadFinWhile -> .)
    for             reduce using rule 87 (cuadFinWhile -> .)
    read            reduce using rule 87 (cuadFinWhile -> .)
    return          reduce using rule 87 (cuadFinWhile -> .)
    LLAVEDER        reduce using rule 87 (cuadFinWhile -> .)

    cuadFinWhile                   shift and go to state 305

state 293

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor . PARDER gotoFor bloque returnFor

    PARDER          shift and go to state 306


state 294

    (92) lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .

    ID              reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    write           reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    if              reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    while           reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    for             reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    read            reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    return          reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    LLAVEDER        reduce using rule 92 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)


state 295

    (70) llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .

    ID              reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    write           reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    if              reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    while           reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    for             reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    read            reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    return          reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    LLAVEDER        reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    COMA            reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    PARDER          reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MULT            reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    DIV             reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MAS             reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MENOS           reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MAYORQUE        reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MENORQUE        reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MAYORIGUAL      reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    MENORIGUAL      reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    EQUALS          reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    DIFERENTE       reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    AND             reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    OR              reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    DOSPUNTOS       reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    CORDER          reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)
    PYC             reduce using rule 70 (llamada -> ID checkFunc cuadEra PARIZQ expresion llamaux PARDER PYC .)


state 296

    (76) llamaux -> COMA expresion nextparametro .

    PARDER          reduce using rule 76 (llamaux -> COMA expresion nextparametro .)


state 297

    (80) nextparametro -> llamaux .

    PARDER          reduce using rule 80 (nextparametro -> llamaux .)


state 298

    (81) nextparametro -> empty .
    (79) llamaux -> empty .

  ! reduce/reduce conflict for PARDER resolved using rule 79 (llamaux -> empty .)
    PARDER          reduce using rule 79 (llamaux -> empty .)

  ! PARDER          [ reduce using rule 81 (nextparametro -> empty .) ]


state 299

    (77) llamaux -> COMA llamada_esp nextparametro .

    PARDER          reduce using rule 77 (llamaux -> COMA llamada_esp nextparametro .)


state 300

    (78) llamaux -> COMA CTESTRING nextparametro .

    PARDER          reduce using rule 78 (llamaux -> COMA CTESTRING nextparametro .)


state 301

    (71) llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .

    ID              reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    write           reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    if              reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    while           reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    for             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    read            reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    return          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    LLAVEDER        reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    COMA            reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    PARDER          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MULT            reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    DIV             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MAS             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MENOS           reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MAYORQUE        reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MENORQUE        reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MAYORIGUAL      reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    MENORIGUAL      reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    EQUALS          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    DIFERENTE       reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    AND             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    OR              reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    DOSPUNTOS       reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    CORDER          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)
    PYC             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ CTESTRING llamaux PARDER PYC .)


state 302

    (72) llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .

    ID              reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    write           reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    if              reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    while           reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    for             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    read            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    return          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    LLAVEDER        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    COMA            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    PARDER          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MULT            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    DIV             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MAS             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MENOS           reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MAYORQUE        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MENORQUE        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MAYORIGUAL      reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    MENORIGUAL      reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    EQUALS          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    DIFERENTE       reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    AND             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    OR              reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    DOSPUNTOS       reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    CORDER          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)
    PYC             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ llamada_esp llamaux PARDER PYC .)


state 303

    (82) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .

    ID              reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    write           reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    if              reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    while           reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    for             reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    read            reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    return          reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    LLAVEDER        reduce using rule 82 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)


state 304

    (83) condicionAux -> else cuadGoto . bloque
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 307

state 305

    (85) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .

    ID              reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    write           reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    if              reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    while           reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    for             reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    read            reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    return          reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    LLAVEDER        reduce using rule 85 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)


state 306

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER . gotoFor bloque returnFor
    (90) gotoFor -> .

    LLAVEIZQ        reduce using rule 90 (gotoFor -> .)

    gotoFor                        shift and go to state 308

state 307

    (83) condicionAux -> else cuadGoto bloque .

    ID              reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    write           reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    if              reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    while           reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    for             reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    read            reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    return          reduce using rule 83 (condicionAux -> else cuadGoto bloque .)
    LLAVEDER        reduce using rule 83 (condicionAux -> else cuadGoto bloque .)


state 308

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor . bloque returnFor
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 309

state 309

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque . returnFor
    (91) returnFor -> .

    ID              reduce using rule 91 (returnFor -> .)
    write           reduce using rule 91 (returnFor -> .)
    if              reduce using rule 91 (returnFor -> .)
    while           reduce using rule 91 (returnFor -> .)
    for             reduce using rule 91 (returnFor -> .)
    read            reduce using rule 91 (returnFor -> .)
    return          reduce using rule 91 (returnFor -> .)
    LLAVEDER        reduce using rule 91 (returnFor -> .)

    returnFor                      shift and go to state 310

state 310

    (88) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .

    ID              reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    write           reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    if              reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    while           reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    for             reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    read            reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    return          reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    LLAVEDER        reduce using rule 88 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for var in state 8 resolved as shift
WARNING: shift/reduce conflict for var in state 11 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for var in state 76 resolved as shift
WARNING: shift/reduce conflict for COMA in state 136 resolved as shift
WARNING: shift/reduce conflict for COMA in state 137 resolved as shift
WARNING: shift/reduce conflict for PYC in state 199 resolved as shift
WARNING: shift/reduce conflict for COMA in state 206 resolved as shift
WARNING: shift/reduce conflict for COMA in state 280 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 12
WARNING: reduce/reduce conflict in state 136 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 137
WARNING: reduce/reduce conflict in state 158 resolved using rule (retAux -> true)
WARNING: rejected rule (pushOT -> <empty>) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (retAux -> false)
WARNING: rejected rule (pushOT -> <empty>) in state 159
WARNING: reduce/reduce conflict in state 160 resolved using rule (retAux -> llamada)
WARNING: rejected rule (pushOT -> <empty>) in state 160
WARNING: reduce/reduce conflict in state 206 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 206
WARNING: reduce/reduce conflict in state 280 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 298 resolved using rule (llamaux -> empty)
WARNING: rejected rule (nextparametro -> empty) in state 298
WARNING: Rule (nextparametro -> empty) is never reduced
