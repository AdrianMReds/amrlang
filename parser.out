Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC
Rule 2     programa -> program auxprograma ID PYC empty mainfunction end PYC
Rule 3     auxprograma -> <empty>
Rule 4     varsaux -> vars varsaux
Rule 5     varsaux -> empty
Rule 6     paux2 -> function paux2
Rule 7     paux2 -> empty
Rule 8     vars -> var type vaux PYC
Rule 9     vars -> empty
Rule 10    vaux -> ID agregaVar nextvar
Rule 11    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 12    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 13    nextvar -> COMA vaux
Rule 14    nextvar -> empty
Rule 15    agregaVar -> <empty>
Rule 16    guardarTipoVar -> <empty>
Rule 17    guardarTipoFunc -> <empty>
Rule 18    mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque
Rule 19    mainfunction -> func main agregaFunc PARIZQ PARDER bloque
Rule 20    agregaFunc -> <empty>
Rule 21    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 22    bloque -> LLAVEIZQ empty LLAVEDER
Rule 23    bloqueaux -> estatuto bloqueaux
Rule 24    bloqueaux -> estatuto
Rule 25    type -> int guardarTipoVar
Rule 26    type -> float guardarTipoVar
Rule 27    type -> string guardarTipoVar
Rule 28    type -> bool guardarTipoVar
Rule 29    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
Rule 30    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
Rule 31    ftype -> int guardarTipoFunc
Rule 32    ftype -> float guardarTipoFunc
Rule 33    ftype -> string guardarTipoFunc
Rule 34    ftype -> bool guardarTipoFunc
Rule 35    ftype -> void guardarTipoFunc
Rule 36    funcaux -> type ID agregaVar
Rule 37    funcaux -> type ID agregaVar COMA funcaux
Rule 38    estatuto -> asignacion
Rule 39    estatuto -> escritura
Rule 40    estatuto -> llamada
Rule 41    estatuto -> condicion
Rule 42    estatuto -> whileloop
Rule 43    estatuto -> forloop
Rule 44    estatuto -> lectura
Rule 45    asignacion -> ID asignaux ASIGNA hyper_exp PYC
Rule 46    asignacion -> ID asignaux ASIGNA llamada_esp PYC
Rule 47    asignacion -> ID asignaux ASIGNA CTESTRING PYC
Rule 48    asignaux -> CORIZQ expresion CORDER
Rule 49    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 50    asignaux -> empty
Rule 51    escritura -> write PARIZQ escaux PARDER PYC
Rule 52    escaux -> expresion nextexp
Rule 53    escaux -> CTESTRING nextexp
Rule 54    escaux -> llamada_esp nextexp
Rule 55    nextexp -> COMA escaux
Rule 56    nextexp -> empty
Rule 57    llamada -> ID PARIZQ expresion llamaux PARDER
Rule 58    llamada -> ID PARIZQ llamada_esp llamaux PARDER
Rule 59    llamada -> ID PARIZQ PARDER
Rule 60    llamaux -> expresion nextparametro
Rule 61    llamaux -> llamada_esp nextparametro
Rule 62    nextparametro -> COMA llamaux
Rule 63    nextparametro -> empty
Rule 64    condicion -> if PARIZQ expresion PARDER bloque
Rule 65    condicion -> if PARIZQ expresion PARDER bloque else bloque
Rule 66    whileloop -> while PARIZQ expresion PARDER bloque
Rule 67    forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
Rule 68    lectura -> read PARIZQ ID PARDER PYC
Rule 69    expresion -> term
Rule 70    expresion -> term MAS term
Rule 71    expresion -> term MENOS term
Rule 72    term -> fact
Rule 73    term -> fact MULT fact
Rule 74    term -> fact DIV fact
Rule 75    fact -> CTEINT
Rule 76    fact -> CTEFLOAT
Rule 77    fact -> ID
Rule 78    fact -> hyper_exp
Rule 79    hyper_exp -> super_exp
Rule 80    hyper_exp -> super_exp AND super_exp
Rule 81    hyper_exp -> super_exp OR super_exp
Rule 82    super_exp -> expresion
Rule 83    super_exp -> expresion MAYORQUE expresion
Rule 84    super_exp -> expresion MENORQUE expresion
Rule 85    super_exp -> expresion EQUALS expresion
Rule 86    super_exp -> expresion DIFERENTE expresion
Rule 87    llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 88    especiales -> length
Rule 89    especiales -> max
Rule 90    especiales -> min
Rule 91    especiales -> avg
Rule 92    especiales -> median
Rule 93    especiales -> mode
Rule 94    especiales -> variance
Rule 95    especiales -> stdev
Rule 96    empty -> <empty>

Terminals, with rules where they appear

AND                  : 80
ASIGNA               : 45 46 47
COMA                 : 12 13 37 49 55 62
CORDER               : 11 12 48 49
CORIZQ               : 11 12 48 49
CTEFLOAT             : 76
CTEINT               : 11 12 12 75
CTESTRING            : 47 53
DIFERENTE            : 86
DIV                  : 74
DOSPUNTOS            : 67
EQUALS               : 85
ID                   : 1 2 10 11 12 29 30 36 37 45 46 47 57 58 59 68 77 87
LLAVEDER             : 21 22
LLAVEIZQ             : 21 22
MAS                  : 70
MAYORQUE             : 83
MENORQUE             : 84
MENOS                : 71
MULT                 : 73
OR                   : 81
PARDER               : 18 19 29 30 51 57 58 59 64 65 66 67 68 87
PARIZQ               : 18 19 29 30 51 57 58 59 64 65 66 67 68 87
PUNTO                : 87
PYC                  : 1 1 2 2 8 45 46 47 51 68
avg                  : 91
bool                 : 28 34
else                 : 65
end                  : 1 2
error                : 
float                : 26 32
for                  : 67
func                 : 18 19 29 30
if                   : 64 65
int                  : 25 31
length               : 88
main                 : 18 19
max                  : 89
median               : 92
min                  : 90
mode                 : 93
program              : 1 2
read                 : 68
stdev                : 95
string               : 27 33
var                  : 8
variance             : 94
void                 : 35
while                : 66
write                : 51

Nonterminals, with rules where they appear

agregaFunc           : 18 19 29 30
agregaVar            : 10 11 12 36 37
asignacion           : 38
asignaux             : 45 46 47
auxprograma          : 1 2
bloque               : 18 19 29 30 64 65 65 66 67
bloqueaux            : 21 23
condicion            : 41
empty                : 2 5 7 9 14 22 30 50 56 63
escaux               : 51 55
escritura            : 39
especiales           : 87
estatuto             : 23 24
expresion            : 48 49 49 52 57 60 64 65 66 67 67 82 83 83 84 84 85 85 86 86
fact                 : 72 73 73 74 74
forloop              : 43
ftype                : 29 30
funcaux              : 29 37
function             : 6
guardarTipoFunc      : 31 32 33 34 35
guardarTipoVar       : 25 26 27 28
hyper_exp            : 45 78
lectura              : 44
llamada              : 40
llamada_esp          : 46 54 58 61
llamaux              : 57 58 62
mainfunction         : 1 2
nextexp              : 52 53 54
nextparametro        : 60 61
nextvar              : 10 11 12
paux2                : 1 6
programa             : 0
super_exp            : 79 80 80 81 81
term                 : 69 70 70 71 71
type                 : 8 36 37
vars                 : 4
varsaux              : 1 4 18 29 30
vaux                 : 8 13
whileloop            : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> . program auxprograma ID PYC empty mainfunction end PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> program . auxprograma ID PYC empty mainfunction end PYC
    (3) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 3

  ! ID              [ reduce using rule 3 (auxprograma -> .) ]

    auxprograma                    shift and go to state 4

state 3

    (1) programa -> program ID . auxprograma PYC varsaux paux2 mainfunction end PYC
    (3) auxprograma -> .

    PYC             reduce using rule 3 (auxprograma -> .)

    auxprograma                    shift and go to state 5

state 4

    (2) programa -> program auxprograma . ID PYC empty mainfunction end PYC

    ID              shift and go to state 6


state 5

    (1) programa -> program ID auxprograma . PYC varsaux paux2 mainfunction end PYC

    PYC             shift and go to state 7


state 6

    (2) programa -> program auxprograma ID . PYC empty mainfunction end PYC

    PYC             shift and go to state 8


state 7

    (1) programa -> program ID auxprograma PYC . varsaux paux2 mainfunction end PYC
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (96) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 96 (empty -> .)
    float           reduce using rule 96 (empty -> .)
    string          reduce using rule 96 (empty -> .)
    bool            reduce using rule 96 (empty -> .)
    void            reduce using rule 96 (empty -> .)
    func            reduce using rule 96 (empty -> .)

  ! var             [ reduce using rule 96 (empty -> .) ]

    varsaux                        shift and go to state 9
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 8

    (2) programa -> program auxprograma ID PYC . empty mainfunction end PYC
    (96) empty -> .

    func            reduce using rule 96 (empty -> .)

    empty                          shift and go to state 13

state 9

    (1) programa -> program ID auxprograma PYC varsaux . paux2 mainfunction end PYC
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (96) empty -> .
    (31) ftype -> . int guardarTipoFunc
    (32) ftype -> . float guardarTipoFunc
    (33) ftype -> . string guardarTipoFunc
    (34) ftype -> . bool guardarTipoFunc
    (35) ftype -> . void guardarTipoFunc

    func            reduce using rule 96 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    paux2                          shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 10

    (4) varsaux -> vars . varsaux
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (96) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 96 (empty -> .)
    float           reduce using rule 96 (empty -> .)
    string          reduce using rule 96 (empty -> .)
    bool            reduce using rule 96 (empty -> .)
    void            reduce using rule 96 (empty -> .)
    func            reduce using rule 96 (empty -> .)
    LLAVEIZQ        reduce using rule 96 (empty -> .)

  ! var             [ reduce using rule 96 (empty -> .) ]

    vars                           shift and go to state 10
    varsaux                        shift and go to state 23
    empty                          shift and go to state 11

state 11

    (5) varsaux -> empty .
    (9) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 5 (varsaux -> empty .)
    int             reduce using rule 5 (varsaux -> empty .)
    float           reduce using rule 5 (varsaux -> empty .)
    string          reduce using rule 5 (varsaux -> empty .)
    bool            reduce using rule 5 (varsaux -> empty .)
    void            reduce using rule 5 (varsaux -> empty .)
    func            reduce using rule 5 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 5 (varsaux -> empty .)
    var             reduce using rule 9 (vars -> empty .)

  ! int             [ reduce using rule 9 (vars -> empty .) ]
  ! float           [ reduce using rule 9 (vars -> empty .) ]
  ! string          [ reduce using rule 9 (vars -> empty .) ]
  ! bool            [ reduce using rule 9 (vars -> empty .) ]
  ! void            [ reduce using rule 9 (vars -> empty .) ]
  ! func            [ reduce using rule 9 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 9 (vars -> empty .) ]


state 12

    (8) vars -> var . type vaux PYC
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 24

state 13

    (2) programa -> program auxprograma ID PYC empty . mainfunction end PYC
    (18) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 29

state 14

    (1) programa -> program ID auxprograma PYC varsaux paux2 . mainfunction end PYC
    (18) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 31

state 15

    (6) paux2 -> function . paux2
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (96) empty -> .
    (31) ftype -> . int guardarTipoFunc
    (32) ftype -> . float guardarTipoFunc
    (33) ftype -> . string guardarTipoFunc
    (34) ftype -> . bool guardarTipoFunc
    (35) ftype -> . void guardarTipoFunc

    func            reduce using rule 96 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    function                       shift and go to state 15
    paux2                          shift and go to state 32
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 16

    (7) paux2 -> empty .

    func            reduce using rule 7 (paux2 -> empty .)


state 17

    (29) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux bloque

    func            shift and go to state 33


state 18

    (31) ftype -> int . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 34

state 19

    (32) ftype -> float . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (33) ftype -> string . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (34) ftype -> bool . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (35) ftype -> void . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (4) varsaux -> vars varsaux .

    int             reduce using rule 4 (varsaux -> vars varsaux .)
    float           reduce using rule 4 (varsaux -> vars varsaux .)
    string          reduce using rule 4 (varsaux -> vars varsaux .)
    bool            reduce using rule 4 (varsaux -> vars varsaux .)
    void            reduce using rule 4 (varsaux -> vars varsaux .)
    func            reduce using rule 4 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 4 (varsaux -> vars varsaux .)


state 24

    (8) vars -> var type . vaux PYC
    (10) vaux -> . ID agregaVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 39

state 25

    (25) type -> int . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 41

state 26

    (26) type -> float . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (27) type -> string . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (28) type -> bool . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (2) programa -> program auxprograma ID PYC empty mainfunction . end PYC

    end             shift and go to state 45


state 30

    (18) mainfunction -> func . main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func . main agregaFunc PARIZQ PARDER bloque

    main            shift and go to state 46


state 31

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction . end PYC

    end             shift and go to state 47


state 32

    (6) paux2 -> function paux2 .

    func            reduce using rule 6 (paux2 -> function paux2 .)


state 33

    (29) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux bloque

    ID              shift and go to state 48


state 34

    (31) ftype -> int guardarTipoFunc .

    func            reduce using rule 31 (ftype -> int guardarTipoFunc .)


state 35

    (32) ftype -> float guardarTipoFunc .

    func            reduce using rule 32 (ftype -> float guardarTipoFunc .)


state 36

    (33) ftype -> string guardarTipoFunc .

    func            reduce using rule 33 (ftype -> string guardarTipoFunc .)


state 37

    (34) ftype -> bool guardarTipoFunc .

    func            reduce using rule 34 (ftype -> bool guardarTipoFunc .)


state 38

    (35) ftype -> void guardarTipoFunc .

    func            reduce using rule 35 (ftype -> void guardarTipoFunc .)


state 39

    (8) vars -> var type vaux . PYC

    PYC             shift and go to state 49


state 40

    (10) vaux -> ID . agregaVar nextvar
    (11) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (15) agregaVar -> .

    CORIZQ          shift and go to state 51
    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 50

state 41

    (25) type -> int guardarTipoVar .

    ID              reduce using rule 25 (type -> int guardarTipoVar .)


state 42

    (26) type -> float guardarTipoVar .

    ID              reduce using rule 26 (type -> float guardarTipoVar .)


state 43

    (27) type -> string guardarTipoVar .

    ID              reduce using rule 27 (type -> string guardarTipoVar .)


state 44

    (28) type -> bool guardarTipoVar .

    ID              reduce using rule 28 (type -> bool guardarTipoVar .)


state 45

    (2) programa -> program auxprograma ID PYC empty mainfunction end . PYC

    PYC             shift and go to state 52


state 46

    (18) mainfunction -> func main . agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func main . agregaFunc PARIZQ PARDER bloque
    (20) agregaFunc -> .

    PARIZQ          reduce using rule 20 (agregaFunc -> .)

    agregaFunc                     shift and go to state 53

state 47

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end . PYC

    PYC             shift and go to state 54


state 48

    (29) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux bloque
    (20) agregaFunc -> .

    PARIZQ          reduce using rule 20 (agregaFunc -> .)

    agregaFunc                     shift and go to state 55

state 49

    (8) vars -> var type vaux PYC .

    var             reduce using rule 8 (vars -> var type vaux PYC .)
    int             reduce using rule 8 (vars -> var type vaux PYC .)
    float           reduce using rule 8 (vars -> var type vaux PYC .)
    string          reduce using rule 8 (vars -> var type vaux PYC .)
    bool            reduce using rule 8 (vars -> var type vaux PYC .)
    void            reduce using rule 8 (vars -> var type vaux PYC .)
    func            reduce using rule 8 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 8 (vars -> var type vaux PYC .)


state 50

    (10) vaux -> ID agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (96) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 96 (empty -> .)

    nextvar                        shift and go to state 56
    empty                          shift and go to state 58

state 51

    (11) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (12) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 59


state 52

    (2) programa -> program auxprograma ID PYC empty mainfunction end PYC .

    $end            reduce using rule 2 (programa -> program auxprograma ID PYC empty mainfunction end PYC .)


state 53

    (18) mainfunction -> func main agregaFunc . PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func main agregaFunc . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 60


state 54

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .

    $end            reduce using rule 1 (programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .)


state 55

    (29) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux bloque

    PARIZQ          shift and go to state 61


state 56

    (10) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 10 (vaux -> ID agregaVar nextvar .)


state 57

    (13) nextvar -> COMA . vaux
    (10) vaux -> . ID agregaVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 62

state 58

    (14) nextvar -> empty .

    PYC             reduce using rule 14 (nextvar -> empty .)


state 59

    (11) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (12) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 63
    COMA            shift and go to state 64


state 60

    (18) mainfunction -> func main agregaFunc PARIZQ . PARDER varsaux bloque
    (19) mainfunction -> func main agregaFunc PARIZQ . PARDER bloque

    PARDER          shift and go to state 65


state 61

    (29) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux bloque
    (36) funcaux -> . type ID agregaVar
    (37) funcaux -> . type ID agregaVar COMA funcaux
    (96) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 96 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    funcaux                        shift and go to state 66
    empty                          shift and go to state 67
    type                           shift and go to state 68

state 62

    (13) nextvar -> COMA vaux .

    PYC             reduce using rule 13 (nextvar -> COMA vaux .)


state 63

    (11) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 69

state 64

    (12) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 70


state 65

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER . varsaux bloque
    (19) mainfunction -> func main agregaFunc PARIZQ PARDER . bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (96) empty -> .

  ! shift/reduce conflict for LLAVEIZQ resolved as shift
  ! shift/reduce conflict for var resolved as shift
    LLAVEIZQ        shift and go to state 73
    var             shift and go to state 12

  ! LLAVEIZQ        [ reduce using rule 96 (empty -> .) ]
  ! var             [ reduce using rule 96 (empty -> .) ]

    varsaux                        shift and go to state 71
    bloque                         shift and go to state 72
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 66

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux bloque

    PARDER          shift and go to state 74


state 67

    (30) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux bloque

    PARDER          shift and go to state 75


state 68

    (36) funcaux -> type . ID agregaVar
    (37) funcaux -> type . ID agregaVar COMA funcaux

    ID              shift and go to state 76


state 69

    (11) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (96) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 96 (empty -> .)

    nextvar                        shift and go to state 77
    empty                          shift and go to state 58

state 70

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 78


state 71

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 79

state 72

    (19) mainfunction -> func main agregaFunc PARIZQ PARDER bloque .

    end             reduce using rule 19 (mainfunction -> func main agregaFunc PARIZQ PARDER bloque .)


state 73

    (21) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (22) bloque -> LLAVEIZQ . empty LLAVEDER
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (96) empty -> .
    (38) estatuto -> . asignacion
    (39) estatuto -> . escritura
    (40) estatuto -> . llamada
    (41) estatuto -> . condicion
    (42) estatuto -> . whileloop
    (43) estatuto -> . forloop
    (44) estatuto -> . lectura
    (45) asignacion -> . ID asignaux ASIGNA hyper_exp PYC
    (46) asignacion -> . ID asignaux ASIGNA llamada_esp PYC
    (47) asignacion -> . ID asignaux ASIGNA CTESTRING PYC
    (51) escritura -> . write PARIZQ escaux PARDER PYC
    (57) llamada -> . ID PARIZQ expresion llamaux PARDER
    (58) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (59) llamada -> . ID PARIZQ PARDER
    (64) condicion -> . if PARIZQ expresion PARDER bloque
    (65) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (66) whileloop -> . while PARIZQ expresion PARDER bloque
    (67) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (68) lectura -> . read PARIZQ ID PARDER PYC

    LLAVEDER        reduce using rule 96 (empty -> .)
    ID              shift and go to state 90
    write           shift and go to state 91
    if              shift and go to state 92
    while           shift and go to state 93
    for             shift and go to state 94
    read            shift and go to state 95

    bloqueaux                      shift and go to state 80
    empty                          shift and go to state 81
    estatuto                       shift and go to state 82
    asignacion                     shift and go to state 83
    escritura                      shift and go to state 84
    llamada                        shift and go to state 85
    condicion                      shift and go to state 86
    whileloop                      shift and go to state 87
    forloop                        shift and go to state 88
    lectura                        shift and go to state 89

state 74

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (96) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 96 (empty -> .)

  ! var             [ reduce using rule 96 (empty -> .) ]

    varsaux                        shift and go to state 96
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 75

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (96) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 96 (empty -> .)

  ! var             [ reduce using rule 96 (empty -> .) ]

    empty                          shift and go to state 11
    varsaux                        shift and go to state 97
    vars                           shift and go to state 10

state 76

    (36) funcaux -> type ID . agregaVar
    (37) funcaux -> type ID . agregaVar COMA funcaux
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PARDER          reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 98

state 77

    (11) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 11 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 78

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 99

state 79

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .

    end             reduce using rule 18 (mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .)


state 80

    (21) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 100


state 81

    (22) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 101


state 82

    (23) bloqueaux -> estatuto . bloqueaux
    (24) bloqueaux -> estatuto .
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (38) estatuto -> . asignacion
    (39) estatuto -> . escritura
    (40) estatuto -> . llamada
    (41) estatuto -> . condicion
    (42) estatuto -> . whileloop
    (43) estatuto -> . forloop
    (44) estatuto -> . lectura
    (45) asignacion -> . ID asignaux ASIGNA hyper_exp PYC
    (46) asignacion -> . ID asignaux ASIGNA llamada_esp PYC
    (47) asignacion -> . ID asignaux ASIGNA CTESTRING PYC
    (51) escritura -> . write PARIZQ escaux PARDER PYC
    (57) llamada -> . ID PARIZQ expresion llamaux PARDER
    (58) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (59) llamada -> . ID PARIZQ PARDER
    (64) condicion -> . if PARIZQ expresion PARDER bloque
    (65) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (66) whileloop -> . while PARIZQ expresion PARDER bloque
    (67) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (68) lectura -> . read PARIZQ ID PARDER PYC

    LLAVEDER        reduce using rule 24 (bloqueaux -> estatuto .)
    ID              shift and go to state 90
    write           shift and go to state 91
    if              shift and go to state 92
    while           shift and go to state 93
    for             shift and go to state 94
    read            shift and go to state 95

    estatuto                       shift and go to state 82
    bloqueaux                      shift and go to state 102
    asignacion                     shift and go to state 83
    escritura                      shift and go to state 84
    llamada                        shift and go to state 85
    condicion                      shift and go to state 86
    whileloop                      shift and go to state 87
    forloop                        shift and go to state 88
    lectura                        shift and go to state 89

state 83

    (38) estatuto -> asignacion .

    ID              reduce using rule 38 (estatuto -> asignacion .)
    write           reduce using rule 38 (estatuto -> asignacion .)
    if              reduce using rule 38 (estatuto -> asignacion .)
    while           reduce using rule 38 (estatuto -> asignacion .)
    for             reduce using rule 38 (estatuto -> asignacion .)
    read            reduce using rule 38 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 38 (estatuto -> asignacion .)


state 84

    (39) estatuto -> escritura .

    ID              reduce using rule 39 (estatuto -> escritura .)
    write           reduce using rule 39 (estatuto -> escritura .)
    if              reduce using rule 39 (estatuto -> escritura .)
    while           reduce using rule 39 (estatuto -> escritura .)
    for             reduce using rule 39 (estatuto -> escritura .)
    read            reduce using rule 39 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 39 (estatuto -> escritura .)


state 85

    (40) estatuto -> llamada .

    ID              reduce using rule 40 (estatuto -> llamada .)
    write           reduce using rule 40 (estatuto -> llamada .)
    if              reduce using rule 40 (estatuto -> llamada .)
    while           reduce using rule 40 (estatuto -> llamada .)
    for             reduce using rule 40 (estatuto -> llamada .)
    read            reduce using rule 40 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 40 (estatuto -> llamada .)


state 86

    (41) estatuto -> condicion .

    ID              reduce using rule 41 (estatuto -> condicion .)
    write           reduce using rule 41 (estatuto -> condicion .)
    if              reduce using rule 41 (estatuto -> condicion .)
    while           reduce using rule 41 (estatuto -> condicion .)
    for             reduce using rule 41 (estatuto -> condicion .)
    read            reduce using rule 41 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 41 (estatuto -> condicion .)


state 87

    (42) estatuto -> whileloop .

    ID              reduce using rule 42 (estatuto -> whileloop .)
    write           reduce using rule 42 (estatuto -> whileloop .)
    if              reduce using rule 42 (estatuto -> whileloop .)
    while           reduce using rule 42 (estatuto -> whileloop .)
    for             reduce using rule 42 (estatuto -> whileloop .)
    read            reduce using rule 42 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 42 (estatuto -> whileloop .)


state 88

    (43) estatuto -> forloop .

    ID              reduce using rule 43 (estatuto -> forloop .)
    write           reduce using rule 43 (estatuto -> forloop .)
    if              reduce using rule 43 (estatuto -> forloop .)
    while           reduce using rule 43 (estatuto -> forloop .)
    for             reduce using rule 43 (estatuto -> forloop .)
    read            reduce using rule 43 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 43 (estatuto -> forloop .)


state 89

    (44) estatuto -> lectura .

    ID              reduce using rule 44 (estatuto -> lectura .)
    write           reduce using rule 44 (estatuto -> lectura .)
    if              reduce using rule 44 (estatuto -> lectura .)
    while           reduce using rule 44 (estatuto -> lectura .)
    for             reduce using rule 44 (estatuto -> lectura .)
    read            reduce using rule 44 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 44 (estatuto -> lectura .)


state 90

    (45) asignacion -> ID . asignaux ASIGNA hyper_exp PYC
    (46) asignacion -> ID . asignaux ASIGNA llamada_esp PYC
    (47) asignacion -> ID . asignaux ASIGNA CTESTRING PYC
    (57) llamada -> ID . PARIZQ expresion llamaux PARDER
    (58) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (59) llamada -> ID . PARIZQ PARDER
    (48) asignaux -> . CORIZQ expresion CORDER
    (49) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (50) asignaux -> . empty
    (96) empty -> .

    PARIZQ          shift and go to state 104
    CORIZQ          shift and go to state 105
    ASIGNA          reduce using rule 96 (empty -> .)

    asignaux                       shift and go to state 103
    empty                          shift and go to state 106

state 91

    (51) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 107


state 92

    (64) condicion -> if . PARIZQ expresion PARDER bloque
    (65) condicion -> if . PARIZQ expresion PARDER bloque else bloque

    PARIZQ          shift and go to state 108


state 93

    (66) whileloop -> while . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 109


state 94

    (67) forloop -> for . PARIZQ expresion DOSPUNTOS expresion PARDER bloque

    PARIZQ          shift and go to state 110


state 95

    (68) lectura -> read . PARIZQ ID PARDER PYC

    PARIZQ          shift and go to state 111


state 96

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 112

state 97

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 113

state 98

    (36) funcaux -> type ID agregaVar .
    (37) funcaux -> type ID agregaVar . COMA funcaux

    PARDER          reduce using rule 36 (funcaux -> type ID agregaVar .)
    COMA            shift and go to state 114


state 99

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (96) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 96 (empty -> .)

    nextvar                        shift and go to state 115
    empty                          shift and go to state 58

state 100

    (21) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 101

    (22) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 102

    (23) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 23 (bloqueaux -> estatuto bloqueaux .)


state 103

    (45) asignacion -> ID asignaux . ASIGNA hyper_exp PYC
    (46) asignacion -> ID asignaux . ASIGNA llamada_esp PYC
    (47) asignacion -> ID asignaux . ASIGNA CTESTRING PYC

    ASIGNA          shift and go to state 116


state 104

    (57) llamada -> ID PARIZQ . expresion llamaux PARDER
    (58) llamada -> ID PARIZQ . llamada_esp llamaux PARDER
    (59) llamada -> ID PARIZQ . PARDER
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    PARDER          shift and go to state 119
    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

    expresion                      shift and go to state 118
    llamada_esp                    shift and go to state 120
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 105

    (48) asignaux -> CORIZQ . expresion CORDER
    (49) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 127
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 106

    (50) asignaux -> empty .

    ASIGNA          reduce using rule 50 (asignaux -> empty .)


state 107

    (51) escritura -> write PARIZQ . escaux PARDER PYC
    (52) escaux -> . expresion nextexp
    (53) escaux -> . CTESTRING nextexp
    (54) escaux -> . llamada_esp nextexp
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTESTRING       shift and go to state 131
    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

    escaux                         shift and go to state 129
    expresion                      shift and go to state 130
    llamada_esp                    shift and go to state 132
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 108

    (64) condicion -> if PARIZQ . expresion PARDER bloque
    (65) condicion -> if PARIZQ . expresion PARDER bloque else bloque
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 133
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 109

    (66) whileloop -> while PARIZQ . expresion PARDER bloque
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 134
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 110

    (67) forloop -> for PARIZQ . expresion DOSPUNTOS expresion PARDER bloque
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 135
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 111

    (68) lectura -> read PARIZQ . ID PARDER PYC

    ID              shift and go to state 136


state 112

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .

    int             reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    float           reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    string          reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    bool            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    void            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    func            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)


state 113

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .

    int             reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    float           reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    string          reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    bool            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    void            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    func            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)


state 114

    (37) funcaux -> type ID agregaVar COMA . funcaux
    (36) funcaux -> . type ID agregaVar
    (37) funcaux -> . type ID agregaVar COMA funcaux
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 68
    funcaux                        shift and go to state 137

state 115

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 116

    (45) asignacion -> ID asignaux ASIGNA . hyper_exp PYC
    (46) asignacion -> ID asignaux ASIGNA . llamada_esp PYC
    (47) asignacion -> ID asignaux ASIGNA . CTESTRING PYC
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp

    CTESTRING       shift and go to state 140
    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

    hyper_exp                      shift and go to state 138
    llamada_esp                    shift and go to state 139
    super_exp                      shift and go to state 126
    expresion                      shift and go to state 141
    term                           shift and go to state 121
    fact                           shift and go to state 122

state 117

    (87) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (77) fact -> ID .

    PUNTO           shift and go to state 142
    MAYORQUE        reduce using rule 77 (fact -> ID .)
    MENORQUE        reduce using rule 77 (fact -> ID .)
    EQUALS          reduce using rule 77 (fact -> ID .)
    DIFERENTE       reduce using rule 77 (fact -> ID .)
    ID              reduce using rule 77 (fact -> ID .)
    CTEINT          reduce using rule 77 (fact -> ID .)
    CTEFLOAT        reduce using rule 77 (fact -> ID .)
    AND             reduce using rule 77 (fact -> ID .)
    OR              reduce using rule 77 (fact -> ID .)
    MULT            reduce using rule 77 (fact -> ID .)
    DIV             reduce using rule 77 (fact -> ID .)
    MAS             reduce using rule 77 (fact -> ID .)
    MENOS           reduce using rule 77 (fact -> ID .)
    COMA            reduce using rule 77 (fact -> ID .)
    PARDER          reduce using rule 77 (fact -> ID .)
    PYC             reduce using rule 77 (fact -> ID .)


state 118

    (57) llamada -> ID PARIZQ expresion . llamaux PARDER
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion
    (60) llamaux -> . expresion nextparametro
    (61) llamaux -> . llamada_esp nextparametro
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148
    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]
  ! ID              [ reduce using rule 82 (super_exp -> expresion .) ]
  ! CTEINT          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! CTEFLOAT        [ reduce using rule 82 (super_exp -> expresion .) ]

    expresion                      shift and go to state 143
    llamaux                        shift and go to state 144
    llamada_esp                    shift and go to state 149
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 119

    (59) llamada -> ID PARIZQ PARDER .

    ID              reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    write           reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    if              reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    while           reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    for             reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    read            reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 59 (llamada -> ID PARIZQ PARDER .)


state 120

    (58) llamada -> ID PARIZQ llamada_esp . llamaux PARDER
    (60) llamaux -> . expresion nextparametro
    (61) llamaux -> . llamada_esp nextparametro
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

    llamada_esp                    shift and go to state 149
    llamaux                        shift and go to state 150
    expresion                      shift and go to state 143
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 121

    (69) expresion -> term .
    (70) expresion -> term . MAS term
    (71) expresion -> term . MENOS term

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 69 (expresion -> term .)
    MENORQUE        reduce using rule 69 (expresion -> term .)
    EQUALS          reduce using rule 69 (expresion -> term .)
    DIFERENTE       reduce using rule 69 (expresion -> term .)
    ID              reduce using rule 69 (expresion -> term .)
    CTEINT          reduce using rule 69 (expresion -> term .)
    CTEFLOAT        reduce using rule 69 (expresion -> term .)
    AND             reduce using rule 69 (expresion -> term .)
    OR              reduce using rule 69 (expresion -> term .)
    MULT            reduce using rule 69 (expresion -> term .)
    DIV             reduce using rule 69 (expresion -> term .)
    CORDER          reduce using rule 69 (expresion -> term .)
    COMA            reduce using rule 69 (expresion -> term .)
    PARDER          reduce using rule 69 (expresion -> term .)
    DOSPUNTOS       reduce using rule 69 (expresion -> term .)
    PYC             reduce using rule 69 (expresion -> term .)
    MAS             shift and go to state 151
    MENOS           shift and go to state 152

  ! MAS             [ reduce using rule 69 (expresion -> term .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> term .) ]


state 122

    (72) term -> fact .
    (73) term -> fact . MULT fact
    (74) term -> fact . DIV fact

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MAYORQUE        reduce using rule 72 (term -> fact .)
    MENORQUE        reduce using rule 72 (term -> fact .)
    EQUALS          reduce using rule 72 (term -> fact .)
    DIFERENTE       reduce using rule 72 (term -> fact .)
    ID              reduce using rule 72 (term -> fact .)
    CTEINT          reduce using rule 72 (term -> fact .)
    CTEFLOAT        reduce using rule 72 (term -> fact .)
    AND             reduce using rule 72 (term -> fact .)
    OR              reduce using rule 72 (term -> fact .)
    MAS             reduce using rule 72 (term -> fact .)
    MENOS           reduce using rule 72 (term -> fact .)
    CORDER          reduce using rule 72 (term -> fact .)
    COMA            reduce using rule 72 (term -> fact .)
    PARDER          reduce using rule 72 (term -> fact .)
    DOSPUNTOS       reduce using rule 72 (term -> fact .)
    PYC             reduce using rule 72 (term -> fact .)
    MULT            shift and go to state 153
    DIV             shift and go to state 154

  ! MULT            [ reduce using rule 72 (term -> fact .) ]
  ! DIV             [ reduce using rule 72 (term -> fact .) ]


state 123

    (75) fact -> CTEINT .

    MAYORQUE        reduce using rule 75 (fact -> CTEINT .)
    MENORQUE        reduce using rule 75 (fact -> CTEINT .)
    EQUALS          reduce using rule 75 (fact -> CTEINT .)
    DIFERENTE       reduce using rule 75 (fact -> CTEINT .)
    ID              reduce using rule 75 (fact -> CTEINT .)
    CTEINT          reduce using rule 75 (fact -> CTEINT .)
    CTEFLOAT        reduce using rule 75 (fact -> CTEINT .)
    AND             reduce using rule 75 (fact -> CTEINT .)
    OR              reduce using rule 75 (fact -> CTEINT .)
    MULT            reduce using rule 75 (fact -> CTEINT .)
    DIV             reduce using rule 75 (fact -> CTEINT .)
    MAS             reduce using rule 75 (fact -> CTEINT .)
    MENOS           reduce using rule 75 (fact -> CTEINT .)
    CORDER          reduce using rule 75 (fact -> CTEINT .)
    COMA            reduce using rule 75 (fact -> CTEINT .)
    PARDER          reduce using rule 75 (fact -> CTEINT .)
    DOSPUNTOS       reduce using rule 75 (fact -> CTEINT .)
    PYC             reduce using rule 75 (fact -> CTEINT .)


state 124

    (76) fact -> CTEFLOAT .

    MAYORQUE        reduce using rule 76 (fact -> CTEFLOAT .)
    MENORQUE        reduce using rule 76 (fact -> CTEFLOAT .)
    EQUALS          reduce using rule 76 (fact -> CTEFLOAT .)
    DIFERENTE       reduce using rule 76 (fact -> CTEFLOAT .)
    ID              reduce using rule 76 (fact -> CTEFLOAT .)
    CTEINT          reduce using rule 76 (fact -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 76 (fact -> CTEFLOAT .)
    AND             reduce using rule 76 (fact -> CTEFLOAT .)
    OR              reduce using rule 76 (fact -> CTEFLOAT .)
    MULT            reduce using rule 76 (fact -> CTEFLOAT .)
    DIV             reduce using rule 76 (fact -> CTEFLOAT .)
    MAS             reduce using rule 76 (fact -> CTEFLOAT .)
    MENOS           reduce using rule 76 (fact -> CTEFLOAT .)
    CORDER          reduce using rule 76 (fact -> CTEFLOAT .)
    COMA            reduce using rule 76 (fact -> CTEFLOAT .)
    PARDER          reduce using rule 76 (fact -> CTEFLOAT .)
    DOSPUNTOS       reduce using rule 76 (fact -> CTEFLOAT .)
    PYC             reduce using rule 76 (fact -> CTEFLOAT .)


state 125

    (78) fact -> hyper_exp .

    MAYORQUE        reduce using rule 78 (fact -> hyper_exp .)
    MENORQUE        reduce using rule 78 (fact -> hyper_exp .)
    EQUALS          reduce using rule 78 (fact -> hyper_exp .)
    DIFERENTE       reduce using rule 78 (fact -> hyper_exp .)
    ID              reduce using rule 78 (fact -> hyper_exp .)
    CTEINT          reduce using rule 78 (fact -> hyper_exp .)
    CTEFLOAT        reduce using rule 78 (fact -> hyper_exp .)
    AND             reduce using rule 78 (fact -> hyper_exp .)
    OR              reduce using rule 78 (fact -> hyper_exp .)
    MULT            reduce using rule 78 (fact -> hyper_exp .)
    DIV             reduce using rule 78 (fact -> hyper_exp .)
    MAS             reduce using rule 78 (fact -> hyper_exp .)
    MENOS           reduce using rule 78 (fact -> hyper_exp .)
    CORDER          reduce using rule 78 (fact -> hyper_exp .)
    COMA            reduce using rule 78 (fact -> hyper_exp .)
    PARDER          reduce using rule 78 (fact -> hyper_exp .)
    DOSPUNTOS       reduce using rule 78 (fact -> hyper_exp .)
    PYC             reduce using rule 78 (fact -> hyper_exp .)


state 126

    (79) hyper_exp -> super_exp .
    (80) hyper_exp -> super_exp . AND super_exp
    (81) hyper_exp -> super_exp . OR super_exp

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAYORQUE        reduce using rule 79 (hyper_exp -> super_exp .)
    MENORQUE        reduce using rule 79 (hyper_exp -> super_exp .)
    EQUALS          reduce using rule 79 (hyper_exp -> super_exp .)
    DIFERENTE       reduce using rule 79 (hyper_exp -> super_exp .)
    ID              reduce using rule 79 (hyper_exp -> super_exp .)
    CTEINT          reduce using rule 79 (hyper_exp -> super_exp .)
    CTEFLOAT        reduce using rule 79 (hyper_exp -> super_exp .)
    MULT            reduce using rule 79 (hyper_exp -> super_exp .)
    DIV             reduce using rule 79 (hyper_exp -> super_exp .)
    MAS             reduce using rule 79 (hyper_exp -> super_exp .)
    MENOS           reduce using rule 79 (hyper_exp -> super_exp .)
    CORDER          reduce using rule 79 (hyper_exp -> super_exp .)
    COMA            reduce using rule 79 (hyper_exp -> super_exp .)
    PARDER          reduce using rule 79 (hyper_exp -> super_exp .)
    DOSPUNTOS       reduce using rule 79 (hyper_exp -> super_exp .)
    PYC             reduce using rule 79 (hyper_exp -> super_exp .)
    AND             shift and go to state 155
    OR              shift and go to state 156

  ! AND             [ reduce using rule 79 (hyper_exp -> super_exp .) ]
  ! OR              [ reduce using rule 79 (hyper_exp -> super_exp .) ]


state 127

    (48) asignaux -> CORIZQ expresion . CORDER
    (49) asignaux -> CORIZQ expresion . COMA expresion CORDER
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    CORDER          shift and go to state 157
    COMA            shift and go to state 158
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! CORDER          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! COMA            [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 128

    (77) fact -> ID .

    CORDER          reduce using rule 77 (fact -> ID .)
    COMA            reduce using rule 77 (fact -> ID .)
    MAYORQUE        reduce using rule 77 (fact -> ID .)
    MENORQUE        reduce using rule 77 (fact -> ID .)
    EQUALS          reduce using rule 77 (fact -> ID .)
    DIFERENTE       reduce using rule 77 (fact -> ID .)
    AND             reduce using rule 77 (fact -> ID .)
    OR              reduce using rule 77 (fact -> ID .)
    MULT            reduce using rule 77 (fact -> ID .)
    DIV             reduce using rule 77 (fact -> ID .)
    MAS             reduce using rule 77 (fact -> ID .)
    MENOS           reduce using rule 77 (fact -> ID .)
    PARDER          reduce using rule 77 (fact -> ID .)
    DOSPUNTOS       reduce using rule 77 (fact -> ID .)
    ID              reduce using rule 77 (fact -> ID .)
    CTEINT          reduce using rule 77 (fact -> ID .)
    CTEFLOAT        reduce using rule 77 (fact -> ID .)
    PYC             reduce using rule 77 (fact -> ID .)


state 129

    (51) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 159


state 130

    (52) escaux -> expresion . nextexp
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion
    (55) nextexp -> . COMA escaux
    (56) nextexp -> . empty
    (96) empty -> .

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148
    COMA            shift and go to state 161

  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]
  ! COMA            [ reduce using rule 82 (super_exp -> expresion .) ]
  ! PARDER          [ reduce using rule 96 (empty -> .) ]

    nextexp                        shift and go to state 160
    empty                          shift and go to state 162

state 131

    (53) escaux -> CTESTRING . nextexp
    (55) nextexp -> . COMA escaux
    (56) nextexp -> . empty
    (96) empty -> .

    COMA            shift and go to state 161
    PARDER          reduce using rule 96 (empty -> .)

    nextexp                        shift and go to state 163
    empty                          shift and go to state 162

state 132

    (54) escaux -> llamada_esp . nextexp
    (55) nextexp -> . COMA escaux
    (56) nextexp -> . empty
    (96) empty -> .

    COMA            shift and go to state 161
    PARDER          reduce using rule 96 (empty -> .)

    nextexp                        shift and go to state 164
    empty                          shift and go to state 162

state 133

    (64) condicion -> if PARIZQ expresion . PARDER bloque
    (65) condicion -> if PARIZQ expresion . PARDER bloque else bloque
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PARDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          shift and go to state 165
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! PARDER          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 134

    (66) whileloop -> while PARIZQ expresion . PARDER bloque
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PARDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          shift and go to state 166
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! PARDER          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 135

    (67) forloop -> for PARIZQ expresion . DOSPUNTOS expresion PARDER bloque
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for DOSPUNTOS resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    DOSPUNTOS       shift and go to state 167
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! DOSPUNTOS       [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 136

    (68) lectura -> read PARIZQ ID . PARDER PYC

    PARDER          shift and go to state 168


state 137

    (37) funcaux -> type ID agregaVar COMA funcaux .

    PARDER          reduce using rule 37 (funcaux -> type ID agregaVar COMA funcaux .)


state 138

    (45) asignacion -> ID asignaux ASIGNA hyper_exp . PYC
    (78) fact -> hyper_exp .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 169
    MULT            reduce using rule 78 (fact -> hyper_exp .)
    DIV             reduce using rule 78 (fact -> hyper_exp .)
    MAS             reduce using rule 78 (fact -> hyper_exp .)
    MENOS           reduce using rule 78 (fact -> hyper_exp .)
    MAYORQUE        reduce using rule 78 (fact -> hyper_exp .)
    MENORQUE        reduce using rule 78 (fact -> hyper_exp .)
    EQUALS          reduce using rule 78 (fact -> hyper_exp .)
    DIFERENTE       reduce using rule 78 (fact -> hyper_exp .)
    AND             reduce using rule 78 (fact -> hyper_exp .)
    OR              reduce using rule 78 (fact -> hyper_exp .)

  ! PYC             [ reduce using rule 78 (fact -> hyper_exp .) ]


state 139

    (46) asignacion -> ID asignaux ASIGNA llamada_esp . PYC

    PYC             shift and go to state 170


state 140

    (47) asignacion -> ID asignaux ASIGNA CTESTRING . PYC

    PYC             shift and go to state 171


state 141

    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PYC             reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    ID              reduce using rule 82 (super_exp -> expresion .)
    CTEINT          reduce using rule 82 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 82 (super_exp -> expresion .)
    CORDER          reduce using rule 82 (super_exp -> expresion .)
    COMA            reduce using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 142

    (87) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (88) especiales -> . length
    (89) especiales -> . max
    (90) especiales -> . min
    (91) especiales -> . avg
    (92) especiales -> . median
    (93) especiales -> . mode
    (94) especiales -> . variance
    (95) especiales -> . stdev

    length          shift and go to state 173
    max             shift and go to state 174
    min             shift and go to state 175
    avg             shift and go to state 176
    median          shift and go to state 177
    mode            shift and go to state 178
    variance        shift and go to state 179
    stdev           shift and go to state 180

    especiales                     shift and go to state 172

state 143

    (60) llamaux -> expresion . nextparametro
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion
    (62) nextparametro -> . COMA llamaux
    (63) nextparametro -> . empty
    (96) empty -> .

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148
    COMA            shift and go to state 182

  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]
  ! COMA            [ reduce using rule 82 (super_exp -> expresion .) ]
  ! PARDER          [ reduce using rule 96 (empty -> .) ]

    nextparametro                  shift and go to state 181
    empty                          shift and go to state 183

state 144

    (57) llamada -> ID PARIZQ expresion llamaux . PARDER

    PARDER          shift and go to state 184


state 145

    (83) super_exp -> expresion MAYORQUE . expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 185
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 146

    (84) super_exp -> expresion MENORQUE . expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 186
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 147

    (85) super_exp -> expresion EQUALS . expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 187
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 148

    (86) super_exp -> expresion DIFERENTE . expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 188
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 149

    (61) llamaux -> llamada_esp . nextparametro
    (62) nextparametro -> . COMA llamaux
    (63) nextparametro -> . empty
    (96) empty -> .

    COMA            shift and go to state 182
    PARDER          reduce using rule 96 (empty -> .)

    nextparametro                  shift and go to state 189
    empty                          shift and go to state 183

state 150

    (58) llamada -> ID PARIZQ llamada_esp llamaux . PARDER

    PARDER          shift and go to state 190


state 151

    (70) expresion -> term MAS . term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    term                           shift and go to state 191
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126
    expresion                      shift and go to state 141

state 152

    (71) expresion -> term MENOS . term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    term                           shift and go to state 192
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126
    expresion                      shift and go to state 141

state 153

    (73) term -> fact MULT . fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    fact                           shift and go to state 193
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126
    expresion                      shift and go to state 141
    term                           shift and go to state 121

state 154

    (74) term -> fact DIV . fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    fact                           shift and go to state 194
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126
    expresion                      shift and go to state 141
    term                           shift and go to state 121

state 155

    (80) hyper_exp -> super_exp AND . super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    super_exp                      shift and go to state 195
    expresion                      shift and go to state 141
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125

state 156

    (81) hyper_exp -> super_exp OR . super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    super_exp                      shift and go to state 196
    expresion                      shift and go to state 141
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125

state 157

    (48) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 48 (asignaux -> CORIZQ expresion CORDER .)


state 158

    (49) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 197
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 159

    (51) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 198


state 160

    (52) escaux -> expresion nextexp .

    PARDER          reduce using rule 52 (escaux -> expresion nextexp .)


state 161

    (55) nextexp -> COMA . escaux
    (52) escaux -> . expresion nextexp
    (53) escaux -> . CTESTRING nextexp
    (54) escaux -> . llamada_esp nextexp
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTESTRING       shift and go to state 131
    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

    escaux                         shift and go to state 199
    expresion                      shift and go to state 130
    llamada_esp                    shift and go to state 132
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 162

    (56) nextexp -> empty .

    PARDER          reduce using rule 56 (nextexp -> empty .)


state 163

    (53) escaux -> CTESTRING nextexp .

    PARDER          reduce using rule 53 (escaux -> CTESTRING nextexp .)


state 164

    (54) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 54 (escaux -> llamada_esp nextexp .)


state 165

    (64) condicion -> if PARIZQ expresion PARDER . bloque
    (65) condicion -> if PARIZQ expresion PARDER . bloque else bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 200

state 166

    (66) whileloop -> while PARIZQ expresion PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 201

state 167

    (67) forloop -> for PARIZQ expresion DOSPUNTOS . expresion PARDER bloque
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124
    ID              shift and go to state 128

    expresion                      shift and go to state 202
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 168

    (68) lectura -> read PARIZQ ID PARDER . PYC

    PYC             shift and go to state 203


state 169

    (45) asignacion -> ID asignaux ASIGNA hyper_exp PYC .

    ID              reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    write           reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    if              reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    while           reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    for             reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    read            reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    LLAVEDER        reduce using rule 45 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)


state 170

    (46) asignacion -> ID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)


state 171

    (47) asignacion -> ID asignaux ASIGNA CTESTRING PYC .

    ID              reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    write           reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    if              reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    while           reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    for             reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    read            reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    LLAVEDER        reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)


state 172

    (87) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 204


state 173

    (88) especiales -> length .

    PARIZQ          reduce using rule 88 (especiales -> length .)


state 174

    (89) especiales -> max .

    PARIZQ          reduce using rule 89 (especiales -> max .)


state 175

    (90) especiales -> min .

    PARIZQ          reduce using rule 90 (especiales -> min .)


state 176

    (91) especiales -> avg .

    PARIZQ          reduce using rule 91 (especiales -> avg .)


state 177

    (92) especiales -> median .

    PARIZQ          reduce using rule 92 (especiales -> median .)


state 178

    (93) especiales -> mode .

    PARIZQ          reduce using rule 93 (especiales -> mode .)


state 179

    (94) especiales -> variance .

    PARIZQ          reduce using rule 94 (especiales -> variance .)


state 180

    (95) especiales -> stdev .

    PARIZQ          reduce using rule 95 (especiales -> stdev .)


state 181

    (60) llamaux -> expresion nextparametro .

    PARDER          reduce using rule 60 (llamaux -> expresion nextparametro .)


state 182

    (62) nextparametro -> COMA . llamaux
    (60) llamaux -> . expresion nextparametro
    (61) llamaux -> . llamada_esp nextparametro
    (69) expresion -> . term
    (70) expresion -> . term MAS term
    (71) expresion -> . term MENOS term
    (87) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (72) term -> . fact
    (73) term -> . fact MULT fact
    (74) term -> . fact DIV fact
    (75) fact -> . CTEINT
    (76) fact -> . CTEFLOAT
    (77) fact -> . ID
    (78) fact -> . hyper_exp
    (79) hyper_exp -> . super_exp
    (80) hyper_exp -> . super_exp AND super_exp
    (81) hyper_exp -> . super_exp OR super_exp
    (82) super_exp -> . expresion
    (83) super_exp -> . expresion MAYORQUE expresion
    (84) super_exp -> . expresion MENORQUE expresion
    (85) super_exp -> . expresion EQUALS expresion
    (86) super_exp -> . expresion DIFERENTE expresion

    ID              shift and go to state 117
    CTEINT          shift and go to state 123
    CTEFLOAT        shift and go to state 124

    llamaux                        shift and go to state 205
    expresion                      shift and go to state 143
    llamada_esp                    shift and go to state 149
    term                           shift and go to state 121
    fact                           shift and go to state 122
    hyper_exp                      shift and go to state 125
    super_exp                      shift and go to state 126

state 183

    (63) nextparametro -> empty .

    PARDER          reduce using rule 63 (nextparametro -> empty .)


state 184

    (57) llamada -> ID PARIZQ expresion llamaux PARDER .

    ID              reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    write           reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    if              reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    while           reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    for             reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    read            reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    LLAVEDER        reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)


state 185

    (83) super_exp -> expresion MAYORQUE expresion .
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 82 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 82 (super_exp -> expresion .)
    CTEINT          reduce using rule 82 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    CORDER          reduce using rule 82 (super_exp -> expresion .)
    COMA            reduce using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 82 (super_exp -> expresion .)
    PYC             reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! MAYORQUE        [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MENORQUE        [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! EQUALS          [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! DIFERENTE       [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! ID              [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! CTEINT          [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! CTEFLOAT        [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! AND             [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! OR              [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MULT            [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! DIV             [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MAS             [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! CORDER          [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! COMA            [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! PARDER          [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! PYC             [ reduce using rule 83 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 186

    (84) super_exp -> expresion MENORQUE expresion .
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 82 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 82 (super_exp -> expresion .)
    CTEINT          reduce using rule 82 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    CORDER          reduce using rule 82 (super_exp -> expresion .)
    COMA            reduce using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 82 (super_exp -> expresion .)
    PYC             reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! MAYORQUE        [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! MENORQUE        [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! EQUALS          [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! DIFERENTE       [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! ID              [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! CTEINT          [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! CTEFLOAT        [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! AND             [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! OR              [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! MULT            [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! DIV             [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! MAS             [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! CORDER          [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! COMA            [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! PARDER          [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! PYC             [ reduce using rule 84 (super_exp -> expresion MENORQUE expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 187

    (85) super_exp -> expresion EQUALS expresion .
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 82 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 82 (super_exp -> expresion .)
    CTEINT          reduce using rule 82 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    CORDER          reduce using rule 82 (super_exp -> expresion .)
    COMA            reduce using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 82 (super_exp -> expresion .)
    PYC             reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! MAYORQUE        [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! MENORQUE        [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! DIFERENTE       [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! ID              [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! CTEINT          [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! CTEFLOAT        [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! AND             [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! OR              [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! MULT            [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! DIV             [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! MAS             [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! MENOS           [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! CORDER          [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! COMA            [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! PARDER          [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! PYC             [ reduce using rule 85 (super_exp -> expresion EQUALS expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 188

    (86) super_exp -> expresion DIFERENTE expresion .
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 82 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 82 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 82 (super_exp -> expresion .)
    CTEINT          reduce using rule 82 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    CORDER          reduce using rule 82 (super_exp -> expresion .)
    COMA            reduce using rule 82 (super_exp -> expresion .)
    PARDER          reduce using rule 82 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 82 (super_exp -> expresion .)
    PYC             reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! MAYORQUE        [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MENORQUE        [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! EQUALS          [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! ID              [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! CTEINT          [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! CTEFLOAT        [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! AND             [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! OR              [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MULT            [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! DIV             [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MAS             [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! CORDER          [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! COMA            [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! PARDER          [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! PYC             [ reduce using rule 86 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 189

    (61) llamaux -> llamada_esp nextparametro .

    PARDER          reduce using rule 61 (llamaux -> llamada_esp nextparametro .)


state 190

    (58) llamada -> ID PARIZQ llamada_esp llamaux PARDER .

    ID              reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    write           reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    if              reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    while           reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    for             reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    read            reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    LLAVEDER        reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)


state 191

    (70) expresion -> term MAS term .
    (69) expresion -> term .
    (70) expresion -> term . MAS term
    (71) expresion -> term . MENOS term

  ! reduce/reduce conflict for MAYORQUE resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for EQUALS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for ID resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for CTEINT resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for AND resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for OR resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MULT resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for DIV resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MAS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MENOS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for CORDER resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for COMA resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for PARDER resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for PYC resolved using rule 69 (expresion -> term .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 69 (expresion -> term .)
    MENORQUE        reduce using rule 69 (expresion -> term .)
    EQUALS          reduce using rule 69 (expresion -> term .)
    DIFERENTE       reduce using rule 69 (expresion -> term .)
    ID              reduce using rule 69 (expresion -> term .)
    CTEINT          reduce using rule 69 (expresion -> term .)
    CTEFLOAT        reduce using rule 69 (expresion -> term .)
    AND             reduce using rule 69 (expresion -> term .)
    OR              reduce using rule 69 (expresion -> term .)
    MULT            reduce using rule 69 (expresion -> term .)
    DIV             reduce using rule 69 (expresion -> term .)
    CORDER          reduce using rule 69 (expresion -> term .)
    COMA            reduce using rule 69 (expresion -> term .)
    PARDER          reduce using rule 69 (expresion -> term .)
    DOSPUNTOS       reduce using rule 69 (expresion -> term .)
    PYC             reduce using rule 69 (expresion -> term .)
    MAS             shift and go to state 151
    MENOS           shift and go to state 152

  ! MAYORQUE        [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! MENORQUE        [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! EQUALS          [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! DIFERENTE       [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! ID              [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! CTEINT          [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! CTEFLOAT        [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! AND             [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! OR              [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! MULT            [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! DIV             [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! MAS             [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! CORDER          [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! COMA            [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! PARDER          [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! DOSPUNTOS       [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! PYC             [ reduce using rule 70 (expresion -> term MAS term .) ]
  ! MAS             [ reduce using rule 69 (expresion -> term .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> term .) ]


state 192

    (71) expresion -> term MENOS term .
    (69) expresion -> term .
    (70) expresion -> term . MAS term
    (71) expresion -> term . MENOS term

  ! reduce/reduce conflict for MAYORQUE resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for EQUALS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for ID resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for CTEINT resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for AND resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for OR resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MULT resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for DIV resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MAS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for MENOS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for CORDER resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for COMA resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for PARDER resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 69 (expresion -> term .)
  ! reduce/reduce conflict for PYC resolved using rule 69 (expresion -> term .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 69 (expresion -> term .)
    MENORQUE        reduce using rule 69 (expresion -> term .)
    EQUALS          reduce using rule 69 (expresion -> term .)
    DIFERENTE       reduce using rule 69 (expresion -> term .)
    ID              reduce using rule 69 (expresion -> term .)
    CTEINT          reduce using rule 69 (expresion -> term .)
    CTEFLOAT        reduce using rule 69 (expresion -> term .)
    AND             reduce using rule 69 (expresion -> term .)
    OR              reduce using rule 69 (expresion -> term .)
    MULT            reduce using rule 69 (expresion -> term .)
    DIV             reduce using rule 69 (expresion -> term .)
    CORDER          reduce using rule 69 (expresion -> term .)
    COMA            reduce using rule 69 (expresion -> term .)
    PARDER          reduce using rule 69 (expresion -> term .)
    DOSPUNTOS       reduce using rule 69 (expresion -> term .)
    PYC             reduce using rule 69 (expresion -> term .)
    MAS             shift and go to state 151
    MENOS           shift and go to state 152

  ! MAYORQUE        [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! MENORQUE        [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! EQUALS          [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! DIFERENTE       [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! ID              [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! CTEINT          [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! CTEFLOAT        [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! AND             [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! OR              [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! MULT            [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! DIV             [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! MAS             [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! CORDER          [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! COMA            [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! PARDER          [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! DOSPUNTOS       [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! PYC             [ reduce using rule 71 (expresion -> term MENOS term .) ]
  ! MAS             [ reduce using rule 69 (expresion -> term .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> term .) ]


state 193

    (73) term -> fact MULT fact .
    (72) term -> fact .
    (73) term -> fact . MULT fact
    (74) term -> fact . DIV fact

  ! reduce/reduce conflict for MAYORQUE resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for EQUALS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for ID resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for CTEINT resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for AND resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for OR resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MULT resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for DIV resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MAS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MENOS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for CORDER resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for COMA resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for PARDER resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for PYC resolved using rule 72 (term -> fact .)
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MAYORQUE        reduce using rule 72 (term -> fact .)
    MENORQUE        reduce using rule 72 (term -> fact .)
    EQUALS          reduce using rule 72 (term -> fact .)
    DIFERENTE       reduce using rule 72 (term -> fact .)
    ID              reduce using rule 72 (term -> fact .)
    CTEINT          reduce using rule 72 (term -> fact .)
    CTEFLOAT        reduce using rule 72 (term -> fact .)
    AND             reduce using rule 72 (term -> fact .)
    OR              reduce using rule 72 (term -> fact .)
    MAS             reduce using rule 72 (term -> fact .)
    MENOS           reduce using rule 72 (term -> fact .)
    CORDER          reduce using rule 72 (term -> fact .)
    COMA            reduce using rule 72 (term -> fact .)
    PARDER          reduce using rule 72 (term -> fact .)
    DOSPUNTOS       reduce using rule 72 (term -> fact .)
    PYC             reduce using rule 72 (term -> fact .)
    MULT            shift and go to state 153
    DIV             shift and go to state 154

  ! MAYORQUE        [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! MENORQUE        [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! EQUALS          [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! DIFERENTE       [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! ID              [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! CTEINT          [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! CTEFLOAT        [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! AND             [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! OR              [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! MULT            [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! DIV             [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! MAS             [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! MENOS           [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! CORDER          [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! COMA            [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! PARDER          [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! DOSPUNTOS       [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! PYC             [ reduce using rule 73 (term -> fact MULT fact .) ]
  ! MULT            [ reduce using rule 72 (term -> fact .) ]
  ! DIV             [ reduce using rule 72 (term -> fact .) ]


state 194

    (74) term -> fact DIV fact .
    (72) term -> fact .
    (73) term -> fact . MULT fact
    (74) term -> fact . DIV fact

  ! reduce/reduce conflict for MAYORQUE resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for EQUALS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for ID resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for CTEINT resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for AND resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for OR resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MULT resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for DIV resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MAS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for MENOS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for CORDER resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for COMA resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for PARDER resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 72 (term -> fact .)
  ! reduce/reduce conflict for PYC resolved using rule 72 (term -> fact .)
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MAYORQUE        reduce using rule 72 (term -> fact .)
    MENORQUE        reduce using rule 72 (term -> fact .)
    EQUALS          reduce using rule 72 (term -> fact .)
    DIFERENTE       reduce using rule 72 (term -> fact .)
    ID              reduce using rule 72 (term -> fact .)
    CTEINT          reduce using rule 72 (term -> fact .)
    CTEFLOAT        reduce using rule 72 (term -> fact .)
    AND             reduce using rule 72 (term -> fact .)
    OR              reduce using rule 72 (term -> fact .)
    MAS             reduce using rule 72 (term -> fact .)
    MENOS           reduce using rule 72 (term -> fact .)
    CORDER          reduce using rule 72 (term -> fact .)
    COMA            reduce using rule 72 (term -> fact .)
    PARDER          reduce using rule 72 (term -> fact .)
    DOSPUNTOS       reduce using rule 72 (term -> fact .)
    PYC             reduce using rule 72 (term -> fact .)
    MULT            shift and go to state 153
    DIV             shift and go to state 154

  ! MAYORQUE        [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! MENORQUE        [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! EQUALS          [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! DIFERENTE       [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! ID              [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! CTEINT          [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! CTEFLOAT        [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! AND             [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! OR              [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! MULT            [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! DIV             [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! MAS             [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! MENOS           [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! CORDER          [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! COMA            [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! PARDER          [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! DOSPUNTOS       [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! PYC             [ reduce using rule 74 (term -> fact DIV fact .) ]
  ! MULT            [ reduce using rule 72 (term -> fact .) ]
  ! DIV             [ reduce using rule 72 (term -> fact .) ]


state 195

    (80) hyper_exp -> super_exp AND super_exp .
    (79) hyper_exp -> super_exp .
    (80) hyper_exp -> super_exp . AND super_exp
    (81) hyper_exp -> super_exp . OR super_exp

  ! reduce/reduce conflict for MAYORQUE resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for EQUALS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for ID resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEINT resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for AND resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for OR resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MULT resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIV resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MAS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENOS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CORDER resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for COMA resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PARDER resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PYC resolved using rule 79 (hyper_exp -> super_exp .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAYORQUE        reduce using rule 79 (hyper_exp -> super_exp .)
    MENORQUE        reduce using rule 79 (hyper_exp -> super_exp .)
    EQUALS          reduce using rule 79 (hyper_exp -> super_exp .)
    DIFERENTE       reduce using rule 79 (hyper_exp -> super_exp .)
    ID              reduce using rule 79 (hyper_exp -> super_exp .)
    CTEINT          reduce using rule 79 (hyper_exp -> super_exp .)
    CTEFLOAT        reduce using rule 79 (hyper_exp -> super_exp .)
    MULT            reduce using rule 79 (hyper_exp -> super_exp .)
    DIV             reduce using rule 79 (hyper_exp -> super_exp .)
    MAS             reduce using rule 79 (hyper_exp -> super_exp .)
    MENOS           reduce using rule 79 (hyper_exp -> super_exp .)
    CORDER          reduce using rule 79 (hyper_exp -> super_exp .)
    COMA            reduce using rule 79 (hyper_exp -> super_exp .)
    PARDER          reduce using rule 79 (hyper_exp -> super_exp .)
    DOSPUNTOS       reduce using rule 79 (hyper_exp -> super_exp .)
    PYC             reduce using rule 79 (hyper_exp -> super_exp .)
    AND             shift and go to state 155
    OR              shift and go to state 156

  ! MAYORQUE        [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! MENORQUE        [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! EQUALS          [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! DIFERENTE       [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! ID              [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! CTEINT          [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! CTEFLOAT        [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! AND             [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! OR              [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! MULT            [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! DIV             [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! MAS             [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! MENOS           [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! CORDER          [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! COMA            [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! PARDER          [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! DOSPUNTOS       [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! PYC             [ reduce using rule 80 (hyper_exp -> super_exp AND super_exp .) ]
  ! AND             [ reduce using rule 79 (hyper_exp -> super_exp .) ]
  ! OR              [ reduce using rule 79 (hyper_exp -> super_exp .) ]


state 196

    (81) hyper_exp -> super_exp OR super_exp .
    (79) hyper_exp -> super_exp .
    (80) hyper_exp -> super_exp . AND super_exp
    (81) hyper_exp -> super_exp . OR super_exp

  ! reduce/reduce conflict for MAYORQUE resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for EQUALS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for ID resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEINT resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for AND resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for OR resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MULT resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIV resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MAS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENOS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CORDER resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for COMA resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PARDER resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 79 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PYC resolved using rule 79 (hyper_exp -> super_exp .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAYORQUE        reduce using rule 79 (hyper_exp -> super_exp .)
    MENORQUE        reduce using rule 79 (hyper_exp -> super_exp .)
    EQUALS          reduce using rule 79 (hyper_exp -> super_exp .)
    DIFERENTE       reduce using rule 79 (hyper_exp -> super_exp .)
    ID              reduce using rule 79 (hyper_exp -> super_exp .)
    CTEINT          reduce using rule 79 (hyper_exp -> super_exp .)
    CTEFLOAT        reduce using rule 79 (hyper_exp -> super_exp .)
    MULT            reduce using rule 79 (hyper_exp -> super_exp .)
    DIV             reduce using rule 79 (hyper_exp -> super_exp .)
    MAS             reduce using rule 79 (hyper_exp -> super_exp .)
    MENOS           reduce using rule 79 (hyper_exp -> super_exp .)
    CORDER          reduce using rule 79 (hyper_exp -> super_exp .)
    COMA            reduce using rule 79 (hyper_exp -> super_exp .)
    PARDER          reduce using rule 79 (hyper_exp -> super_exp .)
    DOSPUNTOS       reduce using rule 79 (hyper_exp -> super_exp .)
    PYC             reduce using rule 79 (hyper_exp -> super_exp .)
    AND             shift and go to state 155
    OR              shift and go to state 156

  ! MAYORQUE        [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! MENORQUE        [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! EQUALS          [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! DIFERENTE       [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! ID              [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! CTEINT          [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! CTEFLOAT        [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! AND             [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! OR              [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! MULT            [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! DIV             [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! MAS             [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! MENOS           [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! CORDER          [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! COMA            [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! PARDER          [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! DOSPUNTOS       [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! PYC             [ reduce using rule 81 (hyper_exp -> super_exp OR super_exp .) ]
  ! AND             [ reduce using rule 79 (hyper_exp -> super_exp .) ]
  ! OR              [ reduce using rule 79 (hyper_exp -> super_exp .) ]


state 197

    (49) asignaux -> CORIZQ expresion COMA expresion . CORDER
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    CORDER          shift and go to state 206
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! CORDER          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 198

    (51) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)


state 199

    (55) nextexp -> COMA escaux .

    PARDER          reduce using rule 55 (nextexp -> COMA escaux .)


state 200

    (64) condicion -> if PARIZQ expresion PARDER bloque .
    (65) condicion -> if PARIZQ expresion PARDER bloque . else bloque

    ID              reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    write           reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    if              reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    while           reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    for             reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    read            reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    else            shift and go to state 207


state 201

    (66) whileloop -> while PARIZQ expresion PARDER bloque .

    ID              reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    write           reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    if              reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    while           reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    for             reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    read            reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)


state 202

    (67) forloop -> for PARIZQ expresion DOSPUNTOS expresion . PARDER bloque
    (82) super_exp -> expresion .
    (83) super_exp -> expresion . MAYORQUE expresion
    (84) super_exp -> expresion . MENORQUE expresion
    (85) super_exp -> expresion . EQUALS expresion
    (86) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PARDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          shift and go to state 208
    MULT            reduce using rule 82 (super_exp -> expresion .)
    DIV             reduce using rule 82 (super_exp -> expresion .)
    MAS             reduce using rule 82 (super_exp -> expresion .)
    MENOS           reduce using rule 82 (super_exp -> expresion .)
    AND             reduce using rule 82 (super_exp -> expresion .)
    OR              reduce using rule 82 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 145
    MENORQUE        shift and go to state 146
    EQUALS          shift and go to state 147
    DIFERENTE       shift and go to state 148

  ! PARDER          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 82 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 82 (super_exp -> expresion .) ]


state 203

    (68) lectura -> read PARIZQ ID PARDER PYC .

    ID              reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    write           reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    if              reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    while           reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    for             reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    read            reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    LLAVEDER        reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)


state 204

    (87) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 209


state 205

    (62) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 62 (nextparametro -> COMA llamaux .)


state 206

    (49) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 49 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 207

    (65) condicion -> if PARIZQ expresion PARDER bloque else . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 210

state 208

    (67) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 211

state 209

    (87) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    ID              reduce using rule 87 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEINT          reduce using rule 87 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 87 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    COMA            reduce using rule 87 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 87 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 87 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 210

    (65) condicion -> if PARIZQ expresion PARDER bloque else bloque .

    ID              reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    write           reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    if              reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    while           reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    for             reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    read            reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    LLAVEDER        reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)


state 211

    (67) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .

    ID              reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    write           reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    if              reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    while           reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    for             reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    read            reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    LLAVEDER        reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 7 resolved as shift
WARNING: shift/reduce conflict for var in state 10 resolved as shift
WARNING: shift/reduce conflict for LLAVEIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for var in state 65 resolved as shift
WARNING: shift/reduce conflict for var in state 74 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 118 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for ID in state 118 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 118 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 118 resolved as shift
WARNING: shift/reduce conflict for MAS in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 121 resolved as shift
WARNING: shift/reduce conflict for MULT in state 122 resolved as shift
WARNING: shift/reduce conflict for DIV in state 122 resolved as shift
WARNING: shift/reduce conflict for AND in state 126 resolved as shift
WARNING: shift/reduce conflict for OR in state 126 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 127 resolved as shift
WARNING: shift/reduce conflict for COMA in state 127 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 127 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 127 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 127 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 127 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 130 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 130 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 130 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 130 resolved as shift
WARNING: shift/reduce conflict for COMA in state 130 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 133 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 133 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 133 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 133 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 134 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 134 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 134 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 134 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 135 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 135 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 135 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 135 resolved as shift
WARNING: shift/reduce conflict for PYC in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 141 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 141 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 141 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 143 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 143 resolved as shift
WARNING: shift/reduce conflict for COMA in state 143 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 185 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 185 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 185 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 185 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 186 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 186 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 186 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 186 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 187 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 187 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 187 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 187 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 188 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 188 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 188 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 188 resolved as shift
WARNING: shift/reduce conflict for MAS in state 191 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 191 resolved as shift
WARNING: shift/reduce conflict for MAS in state 192 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 192 resolved as shift
WARNING: shift/reduce conflict for MULT in state 193 resolved as shift
WARNING: shift/reduce conflict for DIV in state 193 resolved as shift
WARNING: shift/reduce conflict for MULT in state 194 resolved as shift
WARNING: shift/reduce conflict for DIV in state 194 resolved as shift
WARNING: shift/reduce conflict for AND in state 195 resolved as shift
WARNING: shift/reduce conflict for OR in state 195 resolved as shift
WARNING: shift/reduce conflict for AND in state 196 resolved as shift
WARNING: shift/reduce conflict for OR in state 196 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 197 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 197 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 197 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 197 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 197 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 202 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 202 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 202 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 202 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 202 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 11
WARNING: reduce/reduce conflict in state 130 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (empty -> <empty>) in state 130
WARNING: reduce/reduce conflict in state 143 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (empty -> <empty>) in state 143
WARNING: reduce/reduce conflict in state 185 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion MAYORQUE expresion) in state 185
WARNING: reduce/reduce conflict in state 186 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion MENORQUE expresion) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion EQUALS expresion) in state 187
WARNING: reduce/reduce conflict in state 188 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion DIFERENTE expresion) in state 188
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresion -> term)
WARNING: rejected rule (expresion -> term MAS term) in state 191
WARNING: reduce/reduce conflict in state 192 resolved using rule (expresion -> term)
WARNING: rejected rule (expresion -> term MENOS term) in state 192
WARNING: reduce/reduce conflict in state 193 resolved using rule (term -> fact)
WARNING: rejected rule (term -> fact MULT fact) in state 193
WARNING: reduce/reduce conflict in state 194 resolved using rule (term -> fact)
WARNING: rejected rule (term -> fact DIV fact) in state 194
WARNING: reduce/reduce conflict in state 195 resolved using rule (hyper_exp -> super_exp)
WARNING: rejected rule (hyper_exp -> super_exp AND super_exp) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (hyper_exp -> super_exp)
WARNING: rejected rule (hyper_exp -> super_exp OR super_exp) in state 196
WARNING: Rule (super_exp -> expresion MAYORQUE expresion) is never reduced
WARNING: Rule (super_exp -> expresion MENORQUE expresion) is never reduced
WARNING: Rule (super_exp -> expresion EQUALS expresion) is never reduced
WARNING: Rule (super_exp -> expresion DIFERENTE expresion) is never reduced
WARNING: Rule (expresion -> term MAS term) is never reduced
WARNING: Rule (expresion -> term MENOS term) is never reduced
WARNING: Rule (term -> fact MULT fact) is never reduced
WARNING: Rule (term -> fact DIV fact) is never reduced
WARNING: Rule (hyper_exp -> super_exp AND super_exp) is never reduced
WARNING: Rule (hyper_exp -> super_exp OR super_exp) is never reduced
