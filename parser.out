Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
Rule 2     cuadEnd -> <empty>
Rule 3     programa -> program auxprograma ID PYC empty mainfunction end PYC
Rule 4     auxprograma -> <empty>
Rule 5     varsaux -> vars varsaux
Rule 6     varsaux -> empty
Rule 7     paux2 -> function paux2
Rule 8     paux2 -> empty
Rule 9     vars -> var type vaux PYC
Rule 10    vars -> empty
Rule 11    vaux -> ID agregaVar nextvar
Rule 12    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 13    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 14    nextvar -> COMA vaux
Rule 15    nextvar -> empty
Rule 16    agregaVar -> <empty>
Rule 17    guardarTipoVar -> <empty>
Rule 18    guardarTipoFunc -> <empty>
Rule 19    mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque
Rule 20    mainfunction -> func main agregaFunc PARIZQ PARDER bloque
Rule 21    agregaFunc -> <empty>
Rule 22    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 23    bloque -> LLAVEIZQ empty LLAVEDER
Rule 24    bloqueaux -> estatuto bloqueaux
Rule 25    bloqueaux -> estatuto
Rule 26    type -> int guardarTipoVar
Rule 27    type -> float guardarTipoVar
Rule 28    type -> string guardarTipoVar
Rule 29    type -> bool guardarTipoVar
Rule 30    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
Rule 31    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
Rule 32    ftype -> int guardarTipoFunc
Rule 33    ftype -> float guardarTipoFunc
Rule 34    ftype -> string guardarTipoFunc
Rule 35    ftype -> bool guardarTipoFunc
Rule 36    ftype -> void guardarTipoFunc
Rule 37    funcaux -> type ID agregaVar masParam
Rule 38    funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam
Rule 39    funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
Rule 40    masParam -> funcaux
Rule 41    masParam -> empty
Rule 42    estatuto -> asignacion
Rule 43    estatuto -> escritura
Rule 44    estatuto -> llamada
Rule 45    estatuto -> condicion
Rule 46    estatuto -> whileloop
Rule 47    estatuto -> forloop
Rule 48    estatuto -> lectura
Rule 49    asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
Rule 50    asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC
Rule 51    asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC
Rule 52    checkID -> <empty>
Rule 53    asignaux -> CORIZQ expresion CORDER
Rule 54    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 55    asignaux -> empty
Rule 56    escritura -> write PARIZQ escaux PARDER PYC
Rule 57    escaux -> expresion cuadEsc nextexp
Rule 58    escaux -> CTESTRING cuadEsc nextexp
Rule 59    escaux -> llamada_esp nextexp
Rule 60    cuadEsc -> <empty>
Rule 61    nextexp -> COMA escaux
Rule 62    nextexp -> empty
Rule 63    llamada -> ID PARIZQ expresion llamaux PARDER
Rule 64    llamada -> ID PARIZQ llamada_esp llamaux PARDER
Rule 65    llamada -> ID PARIZQ PARDER
Rule 66    llamaux -> expresion nextparametro
Rule 67    llamaux -> llamada_esp nextparametro
Rule 68    nextparametro -> COMA llamaux
Rule 69    nextparametro -> empty
Rule 70    condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
Rule 71    condicionAux -> else cuadGoto bloque
Rule 72    condicionAux -> empty
Rule 73    whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
Rule 74    migaja -> <empty>
Rule 75    cuadFinWhile -> <empty>
Rule 76    forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
Rule 77    lectura -> read PARIZQ ID checkID PARDER PYC
Rule 78    expresion -> andExpresion
Rule 79    expresion -> andExpresion OR pushOper andExpresion
Rule 80    andExpresion -> relopExpresion
Rule 81    andExpresion -> relopExpresion AND pushOper relopExpresion
Rule 82    relopExpresion -> aritExpresion cuadArit
Rule 83    relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit
Rule 84    relopAux -> MAYORQUE pushOper
Rule 85    relopAux -> MENORQUE pushOper
Rule 86    relopAux -> MAYORIGUAL pushOper
Rule 87    relopAux -> MENORIGUAL pushOper
Rule 88    relopAux -> EQUALS pushOper
Rule 89    relopAux -> DIFERENTE pushOper
Rule 90    aritExpresion -> term cuadTerm
Rule 91    aritExpresion -> term cuadTerm aritAux term cuadTerm
Rule 92    aritAux -> MAS pushOper
Rule 93    aritAux -> MENOS pushOper
Rule 94    term -> factor
Rule 95    term -> factor cuadFactor termAux factor cuadFactor
Rule 96    termAux -> MULT pushOper
Rule 97    termAux -> DIV pushOper
Rule 98    factor -> PARIZQ expresion PARDER
Rule 99    factor -> CTEINT pushOT
Rule 100   factor -> CTEFLOAT pushOT
Rule 101   factor -> true pushOT
Rule 102   factor -> false pushOT
Rule 103   factor -> ID checkID pushOT
Rule 104   factor -> llamada_esp pushOT
Rule 105   llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 106   especiales -> length
Rule 107   especiales -> max
Rule 108   especiales -> min
Rule 109   especiales -> avg
Rule 110   especiales -> median
Rule 111   especiales -> mode
Rule 112   especiales -> variance
Rule 113   especiales -> stdev
Rule 114   pushOper -> <empty>
Rule 115   pushOT -> <empty>
Rule 116   cuadTerm -> <empty>
Rule 117   cuadFactor -> <empty>
Rule 118   cuadAsignacion -> <empty>
Rule 119   cuadArit -> <empty>
Rule 120   cuadGotof -> <empty>
Rule 121   cuadFinIf -> <empty>
Rule 122   cuadGoto -> <empty>
Rule 123   empty -> <empty>

Terminals, with rules where they appear

AND                  : 81
ASIGNA               : 49 50 51
COMA                 : 13 14 39 54 61 68
CORDER               : 12 13 38 39 53 54
CORIZQ               : 12 13 38 39 53 54
CTEBOOL              : 
CTEFLOAT             : 100
CTEINT               : 12 13 13 38 39 39 99
CTESTRING            : 51 58
DIFERENTE            : 89
DIV                  : 97
DOSPUNTOS            : 76
EQUALS               : 88
ID                   : 1 3 11 12 13 30 31 37 38 39 49 50 51 63 64 65 77 103 105
LLAVEDER             : 22 23
LLAVEIZQ             : 22 23
MAS                  : 92
MAYORIGUAL           : 86
MAYORQUE             : 84
MENORIGUAL           : 87
MENORQUE             : 85
MENOS                : 93
MULT                 : 96
OR                   : 79
PARDER               : 19 20 30 31 56 63 64 65 70 73 76 77 98 105
PARIZQ               : 19 20 30 31 56 63 64 65 70 73 76 77 98 105
PUNTO                : 105
PYC                  : 1 1 3 3 9 49 50 51 56 77
avg                  : 109
bool                 : 29 35
else                 : 71
end                  : 1 3
error                : 
false                : 102
float                : 27 33
for                  : 76
func                 : 19 20 30 31
if                   : 70
int                  : 26 32
length               : 106
main                 : 19 20
max                  : 107
median               : 110
min                  : 108
mode                 : 111
program              : 1 3
read                 : 77
stdev                : 113
string               : 28 34
true                 : 101
var                  : 9
variance             : 112
void                 : 36
while                : 73
write                : 56

Nonterminals, with rules where they appear

agregaFunc           : 19 20 30 31
agregaVar            : 11 12 13 37 38 39
andExpresion         : 78 79 79
aritAux              : 91
aritExpresion        : 82 83 83
asignacion           : 42
asignaux             : 49 50 51
auxprograma          : 1 3
bloque               : 19 20 30 31 70 71 73 76
bloqueaux            : 22 24
checkID              : 49 50 51 77 103
condicion            : 45
condicionAux         : 70
cuadArit             : 82 83 83
cuadAsignacion       : 49
cuadEnd              : 1
cuadEsc              : 57 58
cuadFactor           : 95 95
cuadFinIf            : 70
cuadFinWhile         : 73
cuadGoto             : 71
cuadGotof            : 70 73
cuadTerm             : 90 91 91
empty                : 3 6 8 10 15 23 31 41 55 62 69 72
escaux               : 56 61
escritura            : 43
especiales           : 105
estatuto             : 24 25
expresion            : 49 53 54 54 57 63 66 70 73 76 76 98
factor               : 94 95 95
forloop              : 47
ftype                : 30 31
funcaux              : 30 40
function             : 7
guardarTipoFunc      : 32 33 34 35 36
guardarTipoVar       : 26 27 28 29
lectura              : 48
llamada              : 44
llamada_esp          : 50 59 64 67 104
llamaux              : 63 64 68
mainfunction         : 1 3
masParam             : 37 38 39
migaja               : 73
nextexp              : 57 58 59
nextparametro        : 66 67
nextvar              : 11 12 13
paux2                : 1 7
programa             : 0
pushOT               : 99 100 101 102 103 104
pushOper             : 79 81 84 85 86 87 88 89 92 93 96 97
relopAux             : 83
relopExpresion       : 80 81 81
term                 : 90 91 91
termAux              : 95
type                 : 9 37 38 39
vars                 : 5
varsaux              : 1 5 19 30 31
vaux                 : 9 14
whileloop            : 46

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (3) programa -> . program auxprograma ID PYC empty mainfunction end PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (3) programa -> program . auxprograma ID PYC empty mainfunction end PYC
    (4) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 3

  ! ID              [ reduce using rule 4 (auxprograma -> .) ]

    auxprograma                    shift and go to state 4

state 3

    (1) programa -> program ID . auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (4) auxprograma -> .

    PYC             reduce using rule 4 (auxprograma -> .)

    auxprograma                    shift and go to state 5

state 4

    (3) programa -> program auxprograma . ID PYC empty mainfunction end PYC

    ID              shift and go to state 6


state 5

    (1) programa -> program ID auxprograma . PYC varsaux paux2 mainfunction end cuadEnd PYC

    PYC             shift and go to state 7


state 6

    (3) programa -> program auxprograma ID . PYC empty mainfunction end PYC

    PYC             shift and go to state 8


state 7

    (1) programa -> program ID auxprograma PYC . varsaux paux2 mainfunction end cuadEnd PYC
    (5) varsaux -> . vars varsaux
    (6) varsaux -> . empty
    (9) vars -> . var type vaux PYC
    (10) vars -> . empty
    (123) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 123 (empty -> .)
    float           reduce using rule 123 (empty -> .)
    string          reduce using rule 123 (empty -> .)
    bool            reduce using rule 123 (empty -> .)
    void            reduce using rule 123 (empty -> .)
    func            reduce using rule 123 (empty -> .)

  ! var             [ reduce using rule 123 (empty -> .) ]

    varsaux                        shift and go to state 9
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 8

    (3) programa -> program auxprograma ID PYC . empty mainfunction end PYC
    (123) empty -> .

    func            reduce using rule 123 (empty -> .)

    empty                          shift and go to state 13

state 9

    (1) programa -> program ID auxprograma PYC varsaux . paux2 mainfunction end cuadEnd PYC
    (7) paux2 -> . function paux2
    (8) paux2 -> . empty
    (30) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (31) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (123) empty -> .
    (32) ftype -> . int guardarTipoFunc
    (33) ftype -> . float guardarTipoFunc
    (34) ftype -> . string guardarTipoFunc
    (35) ftype -> . bool guardarTipoFunc
    (36) ftype -> . void guardarTipoFunc

    func            reduce using rule 123 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    paux2                          shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 10

    (5) varsaux -> vars . varsaux
    (5) varsaux -> . vars varsaux
    (6) varsaux -> . empty
    (9) vars -> . var type vaux PYC
    (10) vars -> . empty
    (123) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 123 (empty -> .)
    float           reduce using rule 123 (empty -> .)
    string          reduce using rule 123 (empty -> .)
    bool            reduce using rule 123 (empty -> .)
    void            reduce using rule 123 (empty -> .)
    func            reduce using rule 123 (empty -> .)
    LLAVEIZQ        reduce using rule 123 (empty -> .)

  ! var             [ reduce using rule 123 (empty -> .) ]

    vars                           shift and go to state 10
    varsaux                        shift and go to state 23
    empty                          shift and go to state 11

state 11

    (6) varsaux -> empty .
    (10) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 6 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 6 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 6 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 6 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 6 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 6 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 6 (varsaux -> empty .)
    int             reduce using rule 6 (varsaux -> empty .)
    float           reduce using rule 6 (varsaux -> empty .)
    string          reduce using rule 6 (varsaux -> empty .)
    bool            reduce using rule 6 (varsaux -> empty .)
    void            reduce using rule 6 (varsaux -> empty .)
    func            reduce using rule 6 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 6 (varsaux -> empty .)
    var             reduce using rule 10 (vars -> empty .)

  ! int             [ reduce using rule 10 (vars -> empty .) ]
  ! float           [ reduce using rule 10 (vars -> empty .) ]
  ! string          [ reduce using rule 10 (vars -> empty .) ]
  ! bool            [ reduce using rule 10 (vars -> empty .) ]
  ! void            [ reduce using rule 10 (vars -> empty .) ]
  ! func            [ reduce using rule 10 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 10 (vars -> empty .) ]


state 12

    (9) vars -> var . type vaux PYC
    (26) type -> . int guardarTipoVar
    (27) type -> . float guardarTipoVar
    (28) type -> . string guardarTipoVar
    (29) type -> . bool guardarTipoVar

    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 24

state 13

    (3) programa -> program auxprograma ID PYC empty . mainfunction end PYC
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (20) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 29

state 14

    (1) programa -> program ID auxprograma PYC varsaux paux2 . mainfunction end cuadEnd PYC
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (20) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 31

state 15

    (7) paux2 -> function . paux2
    (7) paux2 -> . function paux2
    (8) paux2 -> . empty
    (30) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (31) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (123) empty -> .
    (32) ftype -> . int guardarTipoFunc
    (33) ftype -> . float guardarTipoFunc
    (34) ftype -> . string guardarTipoFunc
    (35) ftype -> . bool guardarTipoFunc
    (36) ftype -> . void guardarTipoFunc

    func            reduce using rule 123 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    function                       shift and go to state 15
    paux2                          shift and go to state 32
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 16

    (8) paux2 -> empty .

    func            reduce using rule 8 (paux2 -> empty .)


state 17

    (30) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (31) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux bloque

    func            shift and go to state 33


state 18

    (32) ftype -> int . guardarTipoFunc
    (18) guardarTipoFunc -> .

    func            reduce using rule 18 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 34

state 19

    (33) ftype -> float . guardarTipoFunc
    (18) guardarTipoFunc -> .

    func            reduce using rule 18 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (34) ftype -> string . guardarTipoFunc
    (18) guardarTipoFunc -> .

    func            reduce using rule 18 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (35) ftype -> bool . guardarTipoFunc
    (18) guardarTipoFunc -> .

    func            reduce using rule 18 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (36) ftype -> void . guardarTipoFunc
    (18) guardarTipoFunc -> .

    func            reduce using rule 18 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (5) varsaux -> vars varsaux .

    int             reduce using rule 5 (varsaux -> vars varsaux .)
    float           reduce using rule 5 (varsaux -> vars varsaux .)
    string          reduce using rule 5 (varsaux -> vars varsaux .)
    bool            reduce using rule 5 (varsaux -> vars varsaux .)
    void            reduce using rule 5 (varsaux -> vars varsaux .)
    func            reduce using rule 5 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 5 (varsaux -> vars varsaux .)


state 24

    (9) vars -> var type . vaux PYC
    (11) vaux -> . ID agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 39

state 25

    (26) type -> int . guardarTipoVar
    (17) guardarTipoVar -> .

    ID              reduce using rule 17 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 41

state 26

    (27) type -> float . guardarTipoVar
    (17) guardarTipoVar -> .

    ID              reduce using rule 17 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (28) type -> string . guardarTipoVar
    (17) guardarTipoVar -> .

    ID              reduce using rule 17 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (29) type -> bool . guardarTipoVar
    (17) guardarTipoVar -> .

    ID              reduce using rule 17 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (3) programa -> program auxprograma ID PYC empty mainfunction . end PYC

    end             shift and go to state 45


state 30

    (19) mainfunction -> func . main agregaFunc PARIZQ PARDER varsaux bloque
    (20) mainfunction -> func . main agregaFunc PARIZQ PARDER bloque

    main            shift and go to state 46


state 31

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction . end cuadEnd PYC

    end             shift and go to state 47


state 32

    (7) paux2 -> function paux2 .

    func            reduce using rule 7 (paux2 -> function paux2 .)


state 33

    (30) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (31) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux bloque

    ID              shift and go to state 48


state 34

    (32) ftype -> int guardarTipoFunc .

    func            reduce using rule 32 (ftype -> int guardarTipoFunc .)


state 35

    (33) ftype -> float guardarTipoFunc .

    func            reduce using rule 33 (ftype -> float guardarTipoFunc .)


state 36

    (34) ftype -> string guardarTipoFunc .

    func            reduce using rule 34 (ftype -> string guardarTipoFunc .)


state 37

    (35) ftype -> bool guardarTipoFunc .

    func            reduce using rule 35 (ftype -> bool guardarTipoFunc .)


state 38

    (36) ftype -> void guardarTipoFunc .

    func            reduce using rule 36 (ftype -> void guardarTipoFunc .)


state 39

    (9) vars -> var type vaux . PYC

    PYC             shift and go to state 49


state 40

    (11) vaux -> ID . agregaVar nextvar
    (12) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (13) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (16) agregaVar -> .

    CORIZQ          shift and go to state 51
    COMA            reduce using rule 16 (agregaVar -> .)
    PYC             reduce using rule 16 (agregaVar -> .)

    agregaVar                      shift and go to state 50

state 41

    (26) type -> int guardarTipoVar .

    ID              reduce using rule 26 (type -> int guardarTipoVar .)


state 42

    (27) type -> float guardarTipoVar .

    ID              reduce using rule 27 (type -> float guardarTipoVar .)


state 43

    (28) type -> string guardarTipoVar .

    ID              reduce using rule 28 (type -> string guardarTipoVar .)


state 44

    (29) type -> bool guardarTipoVar .

    ID              reduce using rule 29 (type -> bool guardarTipoVar .)


state 45

    (3) programa -> program auxprograma ID PYC empty mainfunction end . PYC

    PYC             shift and go to state 52


state 46

    (19) mainfunction -> func main . agregaFunc PARIZQ PARDER varsaux bloque
    (20) mainfunction -> func main . agregaFunc PARIZQ PARDER bloque
    (21) agregaFunc -> .

    PARIZQ          reduce using rule 21 (agregaFunc -> .)

    agregaFunc                     shift and go to state 53

state 47

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end . cuadEnd PYC
    (2) cuadEnd -> .

    PYC             reduce using rule 2 (cuadEnd -> .)

    cuadEnd                        shift and go to state 54

state 48

    (30) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (31) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux bloque
    (21) agregaFunc -> .

    PARIZQ          reduce using rule 21 (agregaFunc -> .)

    agregaFunc                     shift and go to state 55

state 49

    (9) vars -> var type vaux PYC .

    var             reduce using rule 9 (vars -> var type vaux PYC .)
    int             reduce using rule 9 (vars -> var type vaux PYC .)
    float           reduce using rule 9 (vars -> var type vaux PYC .)
    string          reduce using rule 9 (vars -> var type vaux PYC .)
    bool            reduce using rule 9 (vars -> var type vaux PYC .)
    void            reduce using rule 9 (vars -> var type vaux PYC .)
    func            reduce using rule 9 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 9 (vars -> var type vaux PYC .)


state 50

    (11) vaux -> ID agregaVar . nextvar
    (14) nextvar -> . COMA vaux
    (15) nextvar -> . empty
    (123) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 123 (empty -> .)

    nextvar                        shift and go to state 56
    empty                          shift and go to state 58

state 51

    (12) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (13) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 59


state 52

    (3) programa -> program auxprograma ID PYC empty mainfunction end PYC .

    $end            reduce using rule 3 (programa -> program auxprograma ID PYC empty mainfunction end PYC .)


state 53

    (19) mainfunction -> func main agregaFunc . PARIZQ PARDER varsaux bloque
    (20) mainfunction -> func main agregaFunc . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 60


state 54

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd . PYC

    PYC             shift and go to state 61


state 55

    (30) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux bloque
    (31) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux bloque

    PARIZQ          shift and go to state 62


state 56

    (11) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 11 (vaux -> ID agregaVar nextvar .)


state 57

    (14) nextvar -> COMA . vaux
    (11) vaux -> . ID agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 63

state 58

    (15) nextvar -> empty .

    PYC             reduce using rule 15 (nextvar -> empty .)


state 59

    (12) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (13) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 64
    COMA            shift and go to state 65


state 60

    (19) mainfunction -> func main agregaFunc PARIZQ . PARDER varsaux bloque
    (20) mainfunction -> func main agregaFunc PARIZQ . PARDER bloque

    PARDER          shift and go to state 66


state 61

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .

    $end            reduce using rule 1 (programa -> program ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .)


state 62

    (30) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux bloque
    (31) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux bloque
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (123) empty -> .
    (26) type -> . int guardarTipoVar
    (27) type -> . float guardarTipoVar
    (28) type -> . string guardarTipoVar
    (29) type -> . bool guardarTipoVar

    PARDER          reduce using rule 123 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    funcaux                        shift and go to state 67
    empty                          shift and go to state 68
    type                           shift and go to state 69

state 63

    (14) nextvar -> COMA vaux .

    PYC             reduce using rule 14 (nextvar -> COMA vaux .)


state 64

    (12) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (16) agregaVar -> .

    COMA            reduce using rule 16 (agregaVar -> .)
    PYC             reduce using rule 16 (agregaVar -> .)

    agregaVar                      shift and go to state 70

state 65

    (13) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 71


state 66

    (19) mainfunction -> func main agregaFunc PARIZQ PARDER . varsaux bloque
    (20) mainfunction -> func main agregaFunc PARIZQ PARDER . bloque
    (5) varsaux -> . vars varsaux
    (6) varsaux -> . empty
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER
    (9) vars -> . var type vaux PYC
    (10) vars -> . empty
    (123) empty -> .

  ! shift/reduce conflict for LLAVEIZQ resolved as shift
  ! shift/reduce conflict for var resolved as shift
    LLAVEIZQ        shift and go to state 74
    var             shift and go to state 12

  ! LLAVEIZQ        [ reduce using rule 123 (empty -> .) ]
  ! var             [ reduce using rule 123 (empty -> .) ]

    varsaux                        shift and go to state 72
    bloque                         shift and go to state 73
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 67

    (30) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux bloque

    PARDER          shift and go to state 75


state 68

    (31) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux bloque

    PARDER          shift and go to state 76


state 69

    (37) funcaux -> type . ID agregaVar masParam
    (38) funcaux -> type . ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> type . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam

    ID              shift and go to state 77


state 70

    (12) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (14) nextvar -> . COMA vaux
    (15) nextvar -> . empty
    (123) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 123 (empty -> .)

    nextvar                        shift and go to state 78
    empty                          shift and go to state 58

state 71

    (13) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 79


state 72

    (19) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux . bloque
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 80

state 73

    (20) mainfunction -> func main agregaFunc PARIZQ PARDER bloque .

    end             reduce using rule 20 (mainfunction -> func main agregaFunc PARIZQ PARDER bloque .)


state 74

    (22) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (23) bloque -> LLAVEIZQ . empty LLAVEDER
    (24) bloqueaux -> . estatuto bloqueaux
    (25) bloqueaux -> . estatuto
    (123) empty -> .
    (42) estatuto -> . asignacion
    (43) estatuto -> . escritura
    (44) estatuto -> . llamada
    (45) estatuto -> . condicion
    (46) estatuto -> . whileloop
    (47) estatuto -> . forloop
    (48) estatuto -> . lectura
    (49) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (50) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (51) asignacion -> . ID checkID asignaux ASIGNA CTESTRING PYC
    (56) escritura -> . write PARIZQ escaux PARDER PYC
    (63) llamada -> . ID PARIZQ expresion llamaux PARDER
    (64) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (65) llamada -> . ID PARIZQ PARDER
    (70) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (73) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (76) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (77) lectura -> . read PARIZQ ID checkID PARDER PYC

    LLAVEDER        reduce using rule 123 (empty -> .)
    ID              shift and go to state 91
    write           shift and go to state 92
    if              shift and go to state 93
    while           shift and go to state 94
    for             shift and go to state 95
    read            shift and go to state 96

    bloqueaux                      shift and go to state 81
    empty                          shift and go to state 82
    estatuto                       shift and go to state 83
    asignacion                     shift and go to state 84
    escritura                      shift and go to state 85
    llamada                        shift and go to state 86
    condicion                      shift and go to state 87
    whileloop                      shift and go to state 88
    forloop                        shift and go to state 89
    lectura                        shift and go to state 90

state 75

    (30) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux bloque
    (5) varsaux -> . vars varsaux
    (6) varsaux -> . empty
    (9) vars -> . var type vaux PYC
    (10) vars -> . empty
    (123) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 123 (empty -> .)

  ! var             [ reduce using rule 123 (empty -> .) ]

    varsaux                        shift and go to state 97
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 76

    (31) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux bloque
    (5) varsaux -> . vars varsaux
    (6) varsaux -> . empty
    (9) vars -> . var type vaux PYC
    (10) vars -> . empty
    (123) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 123 (empty -> .)

  ! var             [ reduce using rule 123 (empty -> .) ]

    empty                          shift and go to state 11
    varsaux                        shift and go to state 98
    vars                           shift and go to state 10

state 77

    (37) funcaux -> type ID . agregaVar masParam
    (38) funcaux -> type ID . CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> type ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (16) agregaVar -> .

    CORIZQ          shift and go to state 100
    int             reduce using rule 16 (agregaVar -> .)
    float           reduce using rule 16 (agregaVar -> .)
    string          reduce using rule 16 (agregaVar -> .)
    bool            reduce using rule 16 (agregaVar -> .)
    PARDER          reduce using rule 16 (agregaVar -> .)

    agregaVar                      shift and go to state 99

state 78

    (12) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 79

    (13) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (16) agregaVar -> .

    COMA            reduce using rule 16 (agregaVar -> .)
    PYC             reduce using rule 16 (agregaVar -> .)

    agregaVar                      shift and go to state 101

state 80

    (19) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .

    end             reduce using rule 19 (mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .)


state 81

    (22) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 102


state 82

    (23) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 103


state 83

    (24) bloqueaux -> estatuto . bloqueaux
    (25) bloqueaux -> estatuto .
    (24) bloqueaux -> . estatuto bloqueaux
    (25) bloqueaux -> . estatuto
    (42) estatuto -> . asignacion
    (43) estatuto -> . escritura
    (44) estatuto -> . llamada
    (45) estatuto -> . condicion
    (46) estatuto -> . whileloop
    (47) estatuto -> . forloop
    (48) estatuto -> . lectura
    (49) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (50) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (51) asignacion -> . ID checkID asignaux ASIGNA CTESTRING PYC
    (56) escritura -> . write PARIZQ escaux PARDER PYC
    (63) llamada -> . ID PARIZQ expresion llamaux PARDER
    (64) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (65) llamada -> . ID PARIZQ PARDER
    (70) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (73) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (76) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (77) lectura -> . read PARIZQ ID checkID PARDER PYC

    LLAVEDER        reduce using rule 25 (bloqueaux -> estatuto .)
    ID              shift and go to state 91
    write           shift and go to state 92
    if              shift and go to state 93
    while           shift and go to state 94
    for             shift and go to state 95
    read            shift and go to state 96

    estatuto                       shift and go to state 83
    bloqueaux                      shift and go to state 104
    asignacion                     shift and go to state 84
    escritura                      shift and go to state 85
    llamada                        shift and go to state 86
    condicion                      shift and go to state 87
    whileloop                      shift and go to state 88
    forloop                        shift and go to state 89
    lectura                        shift and go to state 90

state 84

    (42) estatuto -> asignacion .

    ID              reduce using rule 42 (estatuto -> asignacion .)
    write           reduce using rule 42 (estatuto -> asignacion .)
    if              reduce using rule 42 (estatuto -> asignacion .)
    while           reduce using rule 42 (estatuto -> asignacion .)
    for             reduce using rule 42 (estatuto -> asignacion .)
    read            reduce using rule 42 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 42 (estatuto -> asignacion .)


state 85

    (43) estatuto -> escritura .

    ID              reduce using rule 43 (estatuto -> escritura .)
    write           reduce using rule 43 (estatuto -> escritura .)
    if              reduce using rule 43 (estatuto -> escritura .)
    while           reduce using rule 43 (estatuto -> escritura .)
    for             reduce using rule 43 (estatuto -> escritura .)
    read            reduce using rule 43 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 43 (estatuto -> escritura .)


state 86

    (44) estatuto -> llamada .

    ID              reduce using rule 44 (estatuto -> llamada .)
    write           reduce using rule 44 (estatuto -> llamada .)
    if              reduce using rule 44 (estatuto -> llamada .)
    while           reduce using rule 44 (estatuto -> llamada .)
    for             reduce using rule 44 (estatuto -> llamada .)
    read            reduce using rule 44 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 44 (estatuto -> llamada .)


state 87

    (45) estatuto -> condicion .

    ID              reduce using rule 45 (estatuto -> condicion .)
    write           reduce using rule 45 (estatuto -> condicion .)
    if              reduce using rule 45 (estatuto -> condicion .)
    while           reduce using rule 45 (estatuto -> condicion .)
    for             reduce using rule 45 (estatuto -> condicion .)
    read            reduce using rule 45 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 45 (estatuto -> condicion .)


state 88

    (46) estatuto -> whileloop .

    ID              reduce using rule 46 (estatuto -> whileloop .)
    write           reduce using rule 46 (estatuto -> whileloop .)
    if              reduce using rule 46 (estatuto -> whileloop .)
    while           reduce using rule 46 (estatuto -> whileloop .)
    for             reduce using rule 46 (estatuto -> whileloop .)
    read            reduce using rule 46 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 46 (estatuto -> whileloop .)


state 89

    (47) estatuto -> forloop .

    ID              reduce using rule 47 (estatuto -> forloop .)
    write           reduce using rule 47 (estatuto -> forloop .)
    if              reduce using rule 47 (estatuto -> forloop .)
    while           reduce using rule 47 (estatuto -> forloop .)
    for             reduce using rule 47 (estatuto -> forloop .)
    read            reduce using rule 47 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 47 (estatuto -> forloop .)


state 90

    (48) estatuto -> lectura .

    ID              reduce using rule 48 (estatuto -> lectura .)
    write           reduce using rule 48 (estatuto -> lectura .)
    if              reduce using rule 48 (estatuto -> lectura .)
    while           reduce using rule 48 (estatuto -> lectura .)
    for             reduce using rule 48 (estatuto -> lectura .)
    read            reduce using rule 48 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 48 (estatuto -> lectura .)


state 91

    (49) asignacion -> ID . checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (50) asignacion -> ID . checkID asignaux ASIGNA llamada_esp PYC
    (51) asignacion -> ID . checkID asignaux ASIGNA CTESTRING PYC
    (63) llamada -> ID . PARIZQ expresion llamaux PARDER
    (64) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (65) llamada -> ID . PARIZQ PARDER
    (52) checkID -> .

    PARIZQ          shift and go to state 106
    CORIZQ          reduce using rule 52 (checkID -> .)
    ASIGNA          reduce using rule 52 (checkID -> .)

    checkID                        shift and go to state 105

state 92

    (56) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 107


state 93

    (70) condicion -> if . PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf

    PARIZQ          shift and go to state 108


state 94

    (73) whileloop -> while . migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (74) migaja -> .

    PARIZQ          reduce using rule 74 (migaja -> .)

    migaja                         shift and go to state 109

state 95

    (76) forloop -> for . PARIZQ expresion DOSPUNTOS expresion PARDER bloque

    PARIZQ          shift and go to state 110


state 96

    (77) lectura -> read . PARIZQ ID checkID PARDER PYC

    PARIZQ          shift and go to state 111


state 97

    (30) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . bloque
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 112

state 98

    (31) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . bloque
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 113

state 99

    (37) funcaux -> type ID agregaVar . masParam
    (40) masParam -> . funcaux
    (41) masParam -> . empty
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (123) empty -> .
    (26) type -> . int guardarTipoVar
    (27) type -> . float guardarTipoVar
    (28) type -> . string guardarTipoVar
    (29) type -> . bool guardarTipoVar

    PARDER          reduce using rule 123 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 69
    masParam                       shift and go to state 114
    funcaux                        shift and go to state 115
    empty                          shift and go to state 116

state 100

    (38) funcaux -> type ID CORIZQ . CTEINT CORDER agregaVar masParam
    (39) funcaux -> type ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar masParam

    CTEINT          shift and go to state 117


state 101

    (13) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (14) nextvar -> . COMA vaux
    (15) nextvar -> . empty
    (123) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 123 (empty -> .)

    nextvar                        shift and go to state 118
    empty                          shift and go to state 58

state 102

    (22) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 22 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 103

    (23) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 23 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 104

    (24) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 24 (bloqueaux -> estatuto bloqueaux .)


state 105

    (49) asignacion -> ID checkID . asignaux ASIGNA expresion cuadAsignacion PYC
    (50) asignacion -> ID checkID . asignaux ASIGNA llamada_esp PYC
    (51) asignacion -> ID checkID . asignaux ASIGNA CTESTRING PYC
    (53) asignaux -> . CORIZQ expresion CORDER
    (54) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (55) asignaux -> . empty
    (123) empty -> .

    CORIZQ          shift and go to state 120
    ASIGNA          reduce using rule 123 (empty -> .)

    asignaux                       shift and go to state 119
    empty                          shift and go to state 121

state 106

    (63) llamada -> ID PARIZQ . expresion llamaux PARDER
    (64) llamada -> ID PARIZQ . llamada_esp llamaux PARDER
    (65) llamada -> ID PARIZQ . PARDER
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

    PARDER          shift and go to state 125
    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

    expresion                      shift and go to state 124
    llamada_esp                    shift and go to state 126
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 107

    (56) escritura -> write PARIZQ . escaux PARDER PYC
    (57) escaux -> . expresion cuadEsc nextexp
    (58) escaux -> . CTESTRING cuadEsc nextexp
    (59) escaux -> . llamada_esp nextexp
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

    CTESTRING       shift and go to state 138
    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

    escaux                         shift and go to state 136
    expresion                      shift and go to state 137
    llamada_esp                    shift and go to state 139
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 108

    (70) condicion -> if PARIZQ . expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 140
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 109

    (73) whileloop -> while migaja . PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile

    PARIZQ          shift and go to state 143


state 110

    (76) forloop -> for PARIZQ . expresion DOSPUNTOS expresion PARDER bloque
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 144
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 111

    (77) lectura -> read PARIZQ . ID checkID PARDER PYC

    ID              shift and go to state 145


state 112

    (30) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .

    int             reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    float           reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    string          reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    bool            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    void            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    func            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)


state 113

    (31) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .

    int             reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    float           reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    string          reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    bool            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    void            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    func            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)


state 114

    (37) funcaux -> type ID agregaVar masParam .

    PARDER          reduce using rule 37 (funcaux -> type ID agregaVar masParam .)


state 115

    (40) masParam -> funcaux .

    PARDER          reduce using rule 40 (masParam -> funcaux .)


state 116

    (41) masParam -> empty .

    PARDER          reduce using rule 41 (masParam -> empty .)


state 117

    (38) funcaux -> type ID CORIZQ CTEINT . CORDER agregaVar masParam
    (39) funcaux -> type ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar masParam

    CORDER          shift and go to state 146
    COMA            shift and go to state 147


state 118

    (13) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 13 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 119

    (49) asignacion -> ID checkID asignaux . ASIGNA expresion cuadAsignacion PYC
    (50) asignacion -> ID checkID asignaux . ASIGNA llamada_esp PYC
    (51) asignacion -> ID checkID asignaux . ASIGNA CTESTRING PYC

    ASIGNA          shift and go to state 148


state 120

    (53) asignaux -> CORIZQ . expresion CORDER
    (54) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 149
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 121

    (55) asignaux -> empty .

    ASIGNA          reduce using rule 55 (asignaux -> empty .)


state 122

    (105) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (103) factor -> ID . checkID pushOT
    (52) checkID -> .

    PUNTO           shift and go to state 150
    MULT            reduce using rule 52 (checkID -> .)
    DIV             reduce using rule 52 (checkID -> .)
    MAS             reduce using rule 52 (checkID -> .)
    MENOS           reduce using rule 52 (checkID -> .)
    MAYORQUE        reduce using rule 52 (checkID -> .)
    MENORQUE        reduce using rule 52 (checkID -> .)
    MAYORIGUAL      reduce using rule 52 (checkID -> .)
    MENORIGUAL      reduce using rule 52 (checkID -> .)
    EQUALS          reduce using rule 52 (checkID -> .)
    DIFERENTE       reduce using rule 52 (checkID -> .)
    AND             reduce using rule 52 (checkID -> .)
    OR              reduce using rule 52 (checkID -> .)
    ID              reduce using rule 52 (checkID -> .)
    PARIZQ          reduce using rule 52 (checkID -> .)
    CTEINT          reduce using rule 52 (checkID -> .)
    CTEFLOAT        reduce using rule 52 (checkID -> .)
    true            reduce using rule 52 (checkID -> .)
    false           reduce using rule 52 (checkID -> .)
    COMA            reduce using rule 52 (checkID -> .)
    PARDER          reduce using rule 52 (checkID -> .)
    PYC             reduce using rule 52 (checkID -> .)

    checkID                        shift and go to state 151

state 123

    (98) factor -> PARIZQ . expresion PARDER
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 152
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 124

    (63) llamada -> ID PARIZQ expresion . llamaux PARDER
    (66) llamaux -> . expresion nextparametro
    (67) llamaux -> . llamada_esp nextparametro
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

    expresion                      shift and go to state 153
    llamaux                        shift and go to state 154
    llamada_esp                    shift and go to state 155
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 125

    (65) llamada -> ID PARIZQ PARDER .

    ID              reduce using rule 65 (llamada -> ID PARIZQ PARDER .)
    write           reduce using rule 65 (llamada -> ID PARIZQ PARDER .)
    if              reduce using rule 65 (llamada -> ID PARIZQ PARDER .)
    while           reduce using rule 65 (llamada -> ID PARIZQ PARDER .)
    for             reduce using rule 65 (llamada -> ID PARIZQ PARDER .)
    read            reduce using rule 65 (llamada -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 65 (llamada -> ID PARIZQ PARDER .)


state 126

    (64) llamada -> ID PARIZQ llamada_esp . llamaux PARDER
    (104) factor -> llamada_esp . pushOT
    (66) llamaux -> . expresion nextparametro
    (67) llamaux -> . llamada_esp nextparametro
    (115) pushOT -> .
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for false resolved as shift
    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

  ! ID              [ reduce using rule 115 (pushOT -> .) ]
  ! PARIZQ          [ reduce using rule 115 (pushOT -> .) ]
  ! CTEINT          [ reduce using rule 115 (pushOT -> .) ]
  ! CTEFLOAT        [ reduce using rule 115 (pushOT -> .) ]
  ! true            [ reduce using rule 115 (pushOT -> .) ]
  ! false           [ reduce using rule 115 (pushOT -> .) ]

    llamada_esp                    shift and go to state 155
    llamaux                        shift and go to state 156
    pushOT                         shift and go to state 157
    expresion                      shift and go to state 153
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 127

    (78) expresion -> andExpresion .
    (79) expresion -> andExpresion . OR pushOper andExpresion

    ID              reduce using rule 78 (expresion -> andExpresion .)
    PARIZQ          reduce using rule 78 (expresion -> andExpresion .)
    CTEINT          reduce using rule 78 (expresion -> andExpresion .)
    CTEFLOAT        reduce using rule 78 (expresion -> andExpresion .)
    true            reduce using rule 78 (expresion -> andExpresion .)
    false           reduce using rule 78 (expresion -> andExpresion .)
    COMA            reduce using rule 78 (expresion -> andExpresion .)
    PARDER          reduce using rule 78 (expresion -> andExpresion .)
    DOSPUNTOS       reduce using rule 78 (expresion -> andExpresion .)
    CORDER          reduce using rule 78 (expresion -> andExpresion .)
    PYC             reduce using rule 78 (expresion -> andExpresion .)
    OR              shift and go to state 158


state 128

    (80) andExpresion -> relopExpresion .
    (81) andExpresion -> relopExpresion . AND pushOper relopExpresion

    OR              reduce using rule 80 (andExpresion -> relopExpresion .)
    ID              reduce using rule 80 (andExpresion -> relopExpresion .)
    PARIZQ          reduce using rule 80 (andExpresion -> relopExpresion .)
    CTEINT          reduce using rule 80 (andExpresion -> relopExpresion .)
    CTEFLOAT        reduce using rule 80 (andExpresion -> relopExpresion .)
    true            reduce using rule 80 (andExpresion -> relopExpresion .)
    false           reduce using rule 80 (andExpresion -> relopExpresion .)
    COMA            reduce using rule 80 (andExpresion -> relopExpresion .)
    PARDER          reduce using rule 80 (andExpresion -> relopExpresion .)
    DOSPUNTOS       reduce using rule 80 (andExpresion -> relopExpresion .)
    CORDER          reduce using rule 80 (andExpresion -> relopExpresion .)
    PYC             reduce using rule 80 (andExpresion -> relopExpresion .)
    AND             shift and go to state 159


state 129

    (82) relopExpresion -> aritExpresion . cuadArit
    (83) relopExpresion -> aritExpresion . cuadArit relopAux aritExpresion cuadArit
    (119) cuadArit -> .

    MAYORQUE        reduce using rule 119 (cuadArit -> .)
    MENORQUE        reduce using rule 119 (cuadArit -> .)
    MAYORIGUAL      reduce using rule 119 (cuadArit -> .)
    MENORIGUAL      reduce using rule 119 (cuadArit -> .)
    EQUALS          reduce using rule 119 (cuadArit -> .)
    DIFERENTE       reduce using rule 119 (cuadArit -> .)
    AND             reduce using rule 119 (cuadArit -> .)
    OR              reduce using rule 119 (cuadArit -> .)
    ID              reduce using rule 119 (cuadArit -> .)
    PARIZQ          reduce using rule 119 (cuadArit -> .)
    CTEINT          reduce using rule 119 (cuadArit -> .)
    CTEFLOAT        reduce using rule 119 (cuadArit -> .)
    true            reduce using rule 119 (cuadArit -> .)
    false           reduce using rule 119 (cuadArit -> .)
    COMA            reduce using rule 119 (cuadArit -> .)
    PARDER          reduce using rule 119 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 119 (cuadArit -> .)
    CORDER          reduce using rule 119 (cuadArit -> .)
    PYC             reduce using rule 119 (cuadArit -> .)

    cuadArit                       shift and go to state 160

state 130

    (90) aritExpresion -> term . cuadTerm
    (91) aritExpresion -> term . cuadTerm aritAux term cuadTerm
    (116) cuadTerm -> .

    MAS             reduce using rule 116 (cuadTerm -> .)
    MENOS           reduce using rule 116 (cuadTerm -> .)
    MAYORQUE        reduce using rule 116 (cuadTerm -> .)
    MENORQUE        reduce using rule 116 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 116 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 116 (cuadTerm -> .)
    EQUALS          reduce using rule 116 (cuadTerm -> .)
    DIFERENTE       reduce using rule 116 (cuadTerm -> .)
    AND             reduce using rule 116 (cuadTerm -> .)
    OR              reduce using rule 116 (cuadTerm -> .)
    ID              reduce using rule 116 (cuadTerm -> .)
    PARIZQ          reduce using rule 116 (cuadTerm -> .)
    CTEINT          reduce using rule 116 (cuadTerm -> .)
    CTEFLOAT        reduce using rule 116 (cuadTerm -> .)
    true            reduce using rule 116 (cuadTerm -> .)
    false           reduce using rule 116 (cuadTerm -> .)
    COMA            reduce using rule 116 (cuadTerm -> .)
    PARDER          reduce using rule 116 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 116 (cuadTerm -> .)
    CORDER          reduce using rule 116 (cuadTerm -> .)
    PYC             reduce using rule 116 (cuadTerm -> .)

    cuadTerm                       shift and go to state 161

state 131

    (94) term -> factor .
    (95) term -> factor . cuadFactor termAux factor cuadFactor
    (117) cuadFactor -> .

    MAS             reduce using rule 94 (term -> factor .)
    MENOS           reduce using rule 94 (term -> factor .)
    MAYORQUE        reduce using rule 94 (term -> factor .)
    MENORQUE        reduce using rule 94 (term -> factor .)
    MAYORIGUAL      reduce using rule 94 (term -> factor .)
    MENORIGUAL      reduce using rule 94 (term -> factor .)
    EQUALS          reduce using rule 94 (term -> factor .)
    DIFERENTE       reduce using rule 94 (term -> factor .)
    AND             reduce using rule 94 (term -> factor .)
    OR              reduce using rule 94 (term -> factor .)
    ID              reduce using rule 94 (term -> factor .)
    PARIZQ          reduce using rule 94 (term -> factor .)
    CTEINT          reduce using rule 94 (term -> factor .)
    CTEFLOAT        reduce using rule 94 (term -> factor .)
    true            reduce using rule 94 (term -> factor .)
    false           reduce using rule 94 (term -> factor .)
    COMA            reduce using rule 94 (term -> factor .)
    PARDER          reduce using rule 94 (term -> factor .)
    DOSPUNTOS       reduce using rule 94 (term -> factor .)
    CORDER          reduce using rule 94 (term -> factor .)
    PYC             reduce using rule 94 (term -> factor .)
    MULT            reduce using rule 117 (cuadFactor -> .)
    DIV             reduce using rule 117 (cuadFactor -> .)

    cuadFactor                     shift and go to state 162

state 132

    (99) factor -> CTEINT . pushOT
    (115) pushOT -> .

    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    ID              reduce using rule 115 (pushOT -> .)
    PARIZQ          reduce using rule 115 (pushOT -> .)
    CTEINT          reduce using rule 115 (pushOT -> .)
    CTEFLOAT        reduce using rule 115 (pushOT -> .)
    true            reduce using rule 115 (pushOT -> .)
    false           reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    DOSPUNTOS       reduce using rule 115 (pushOT -> .)
    CORDER          reduce using rule 115 (pushOT -> .)
    PYC             reduce using rule 115 (pushOT -> .)

    pushOT                         shift and go to state 163

state 133

    (100) factor -> CTEFLOAT . pushOT
    (115) pushOT -> .

    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    ID              reduce using rule 115 (pushOT -> .)
    PARIZQ          reduce using rule 115 (pushOT -> .)
    CTEINT          reduce using rule 115 (pushOT -> .)
    CTEFLOAT        reduce using rule 115 (pushOT -> .)
    true            reduce using rule 115 (pushOT -> .)
    false           reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    DOSPUNTOS       reduce using rule 115 (pushOT -> .)
    CORDER          reduce using rule 115 (pushOT -> .)
    PYC             reduce using rule 115 (pushOT -> .)

    pushOT                         shift and go to state 164

state 134

    (101) factor -> true . pushOT
    (115) pushOT -> .

    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    ID              reduce using rule 115 (pushOT -> .)
    PARIZQ          reduce using rule 115 (pushOT -> .)
    CTEINT          reduce using rule 115 (pushOT -> .)
    CTEFLOAT        reduce using rule 115 (pushOT -> .)
    true            reduce using rule 115 (pushOT -> .)
    false           reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    DOSPUNTOS       reduce using rule 115 (pushOT -> .)
    CORDER          reduce using rule 115 (pushOT -> .)
    PYC             reduce using rule 115 (pushOT -> .)

    pushOT                         shift and go to state 165

state 135

    (102) factor -> false . pushOT
    (115) pushOT -> .

    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    ID              reduce using rule 115 (pushOT -> .)
    PARIZQ          reduce using rule 115 (pushOT -> .)
    CTEINT          reduce using rule 115 (pushOT -> .)
    CTEFLOAT        reduce using rule 115 (pushOT -> .)
    true            reduce using rule 115 (pushOT -> .)
    false           reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    DOSPUNTOS       reduce using rule 115 (pushOT -> .)
    CORDER          reduce using rule 115 (pushOT -> .)
    PYC             reduce using rule 115 (pushOT -> .)

    pushOT                         shift and go to state 166

state 136

    (56) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 167


state 137

    (57) escaux -> expresion . cuadEsc nextexp
    (60) cuadEsc -> .

    COMA            reduce using rule 60 (cuadEsc -> .)
    PARDER          reduce using rule 60 (cuadEsc -> .)

    cuadEsc                        shift and go to state 168

state 138

    (58) escaux -> CTESTRING . cuadEsc nextexp
    (60) cuadEsc -> .

    COMA            reduce using rule 60 (cuadEsc -> .)
    PARDER          reduce using rule 60 (cuadEsc -> .)

    cuadEsc                        shift and go to state 169

state 139

    (59) escaux -> llamada_esp . nextexp
    (104) factor -> llamada_esp . pushOT
    (61) nextexp -> . COMA escaux
    (62) nextexp -> . empty
    (115) pushOT -> .
    (123) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 115 (pushOT -> .)
    COMA            shift and go to state 171
    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)

  ! COMA            [ reduce using rule 115 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 123 (empty -> .) ]

    nextexp                        shift and go to state 170
    pushOT                         shift and go to state 157
    empty                          shift and go to state 172

state 140

    (70) condicion -> if PARIZQ expresion . PARDER cuadGotof bloque condicionAux cuadFinIf

    PARDER          shift and go to state 173


state 141

    (103) factor -> ID . checkID pushOT
    (105) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (52) checkID -> .

    PUNTO           shift and go to state 150
    MULT            reduce using rule 52 (checkID -> .)
    DIV             reduce using rule 52 (checkID -> .)
    MAS             reduce using rule 52 (checkID -> .)
    MENOS           reduce using rule 52 (checkID -> .)
    MAYORQUE        reduce using rule 52 (checkID -> .)
    MENORQUE        reduce using rule 52 (checkID -> .)
    MAYORIGUAL      reduce using rule 52 (checkID -> .)
    MENORIGUAL      reduce using rule 52 (checkID -> .)
    EQUALS          reduce using rule 52 (checkID -> .)
    DIFERENTE       reduce using rule 52 (checkID -> .)
    AND             reduce using rule 52 (checkID -> .)
    OR              reduce using rule 52 (checkID -> .)
    PARDER          reduce using rule 52 (checkID -> .)
    DOSPUNTOS       reduce using rule 52 (checkID -> .)
    CORDER          reduce using rule 52 (checkID -> .)
    COMA            reduce using rule 52 (checkID -> .)
    ID              reduce using rule 52 (checkID -> .)
    PARIZQ          reduce using rule 52 (checkID -> .)
    CTEINT          reduce using rule 52 (checkID -> .)
    CTEFLOAT        reduce using rule 52 (checkID -> .)
    true            reduce using rule 52 (checkID -> .)
    false           reduce using rule 52 (checkID -> .)
    PYC             reduce using rule 52 (checkID -> .)

    checkID                        shift and go to state 151

state 142

    (104) factor -> llamada_esp . pushOT
    (115) pushOT -> .

    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    DOSPUNTOS       reduce using rule 115 (pushOT -> .)
    CORDER          reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    ID              reduce using rule 115 (pushOT -> .)
    PARIZQ          reduce using rule 115 (pushOT -> .)
    CTEINT          reduce using rule 115 (pushOT -> .)
    CTEFLOAT        reduce using rule 115 (pushOT -> .)
    true            reduce using rule 115 (pushOT -> .)
    false           reduce using rule 115 (pushOT -> .)
    PYC             reduce using rule 115 (pushOT -> .)

    pushOT                         shift and go to state 157

state 143

    (73) whileloop -> while migaja PARIZQ . expresion PARDER cuadGotof bloque cuadFinWhile
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 174
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 144

    (76) forloop -> for PARIZQ expresion . DOSPUNTOS expresion PARDER bloque

    DOSPUNTOS       shift and go to state 175


state 145

    (77) lectura -> read PARIZQ ID . checkID PARDER PYC
    (52) checkID -> .

    PARDER          reduce using rule 52 (checkID -> .)

    checkID                        shift and go to state 176

state 146

    (38) funcaux -> type ID CORIZQ CTEINT CORDER . agregaVar masParam
    (16) agregaVar -> .

    int             reduce using rule 16 (agregaVar -> .)
    float           reduce using rule 16 (agregaVar -> .)
    string          reduce using rule 16 (agregaVar -> .)
    bool            reduce using rule 16 (agregaVar -> .)
    PARDER          reduce using rule 16 (agregaVar -> .)

    agregaVar                      shift and go to state 177

state 147

    (39) funcaux -> type ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar masParam

    CTEINT          shift and go to state 178


state 148

    (49) asignacion -> ID checkID asignaux ASIGNA . expresion cuadAsignacion PYC
    (50) asignacion -> ID checkID asignaux ASIGNA . llamada_esp PYC
    (51) asignacion -> ID checkID asignaux ASIGNA . CTESTRING PYC
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

    CTESTRING       shift and go to state 181
    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

    expresion                      shift and go to state 179
    llamada_esp                    shift and go to state 180
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 149

    (53) asignaux -> CORIZQ expresion . CORDER
    (54) asignaux -> CORIZQ expresion . COMA expresion CORDER

    CORDER          shift and go to state 182
    COMA            shift and go to state 183


state 150

    (105) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (106) especiales -> . length
    (107) especiales -> . max
    (108) especiales -> . min
    (109) especiales -> . avg
    (110) especiales -> . median
    (111) especiales -> . mode
    (112) especiales -> . variance
    (113) especiales -> . stdev

    length          shift and go to state 185
    max             shift and go to state 186
    min             shift and go to state 187
    avg             shift and go to state 188
    median          shift and go to state 189
    mode            shift and go to state 190
    variance        shift and go to state 191
    stdev           shift and go to state 192

    especiales                     shift and go to state 184

state 151

    (103) factor -> ID checkID . pushOT
    (115) pushOT -> .

    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    ID              reduce using rule 115 (pushOT -> .)
    PARIZQ          reduce using rule 115 (pushOT -> .)
    CTEINT          reduce using rule 115 (pushOT -> .)
    CTEFLOAT        reduce using rule 115 (pushOT -> .)
    true            reduce using rule 115 (pushOT -> .)
    false           reduce using rule 115 (pushOT -> .)
    COMA            reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)
    DOSPUNTOS       reduce using rule 115 (pushOT -> .)
    CORDER          reduce using rule 115 (pushOT -> .)
    PYC             reduce using rule 115 (pushOT -> .)

    pushOT                         shift and go to state 193

state 152

    (98) factor -> PARIZQ expresion . PARDER

    PARDER          shift and go to state 194


state 153

    (66) llamaux -> expresion . nextparametro
    (68) nextparametro -> . COMA llamaux
    (69) nextparametro -> . empty
    (123) empty -> .

    COMA            shift and go to state 196
    PARDER          reduce using rule 123 (empty -> .)

    nextparametro                  shift and go to state 195
    empty                          shift and go to state 197

state 154

    (63) llamada -> ID PARIZQ expresion llamaux . PARDER

    PARDER          shift and go to state 198


state 155

    (67) llamaux -> llamada_esp . nextparametro
    (104) factor -> llamada_esp . pushOT
    (68) nextparametro -> . COMA llamaux
    (69) nextparametro -> . empty
    (115) pushOT -> .
    (123) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 115 (pushOT -> .)
    COMA            shift and go to state 196
    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)
    PARDER          reduce using rule 115 (pushOT -> .)

  ! COMA            [ reduce using rule 115 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 123 (empty -> .) ]

    nextparametro                  shift and go to state 199
    pushOT                         shift and go to state 157
    empty                          shift and go to state 197

state 156

    (64) llamada -> ID PARIZQ llamada_esp llamaux . PARDER

    PARDER          shift and go to state 200


state 157

    (104) factor -> llamada_esp pushOT .

    MULT            reduce using rule 104 (factor -> llamada_esp pushOT .)
    DIV             reduce using rule 104 (factor -> llamada_esp pushOT .)
    MAS             reduce using rule 104 (factor -> llamada_esp pushOT .)
    MENOS           reduce using rule 104 (factor -> llamada_esp pushOT .)
    MAYORQUE        reduce using rule 104 (factor -> llamada_esp pushOT .)
    MENORQUE        reduce using rule 104 (factor -> llamada_esp pushOT .)
    MAYORIGUAL      reduce using rule 104 (factor -> llamada_esp pushOT .)
    MENORIGUAL      reduce using rule 104 (factor -> llamada_esp pushOT .)
    EQUALS          reduce using rule 104 (factor -> llamada_esp pushOT .)
    DIFERENTE       reduce using rule 104 (factor -> llamada_esp pushOT .)
    AND             reduce using rule 104 (factor -> llamada_esp pushOT .)
    OR              reduce using rule 104 (factor -> llamada_esp pushOT .)
    ID              reduce using rule 104 (factor -> llamada_esp pushOT .)
    PARIZQ          reduce using rule 104 (factor -> llamada_esp pushOT .)
    CTEINT          reduce using rule 104 (factor -> llamada_esp pushOT .)
    CTEFLOAT        reduce using rule 104 (factor -> llamada_esp pushOT .)
    true            reduce using rule 104 (factor -> llamada_esp pushOT .)
    false           reduce using rule 104 (factor -> llamada_esp pushOT .)
    COMA            reduce using rule 104 (factor -> llamada_esp pushOT .)
    PARDER          reduce using rule 104 (factor -> llamada_esp pushOT .)
    DOSPUNTOS       reduce using rule 104 (factor -> llamada_esp pushOT .)
    CORDER          reduce using rule 104 (factor -> llamada_esp pushOT .)
    PYC             reduce using rule 104 (factor -> llamada_esp pushOT .)


state 158

    (79) expresion -> andExpresion OR . pushOper andExpresion
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 201

state 159

    (81) andExpresion -> relopExpresion AND . pushOper relopExpresion
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 202

state 160

    (82) relopExpresion -> aritExpresion cuadArit .
    (83) relopExpresion -> aritExpresion cuadArit . relopAux aritExpresion cuadArit
    (84) relopAux -> . MAYORQUE pushOper
    (85) relopAux -> . MENORQUE pushOper
    (86) relopAux -> . MAYORIGUAL pushOper
    (87) relopAux -> . MENORIGUAL pushOper
    (88) relopAux -> . EQUALS pushOper
    (89) relopAux -> . DIFERENTE pushOper

    AND             reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    OR              reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    ID              reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    PARIZQ          reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    CTEINT          reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    CTEFLOAT        reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    true            reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    false           reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    COMA            reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    PARDER          reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    CORDER          reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    PYC             reduce using rule 82 (relopExpresion -> aritExpresion cuadArit .)
    MAYORQUE        shift and go to state 204
    MENORQUE        shift and go to state 205
    MAYORIGUAL      shift and go to state 206
    MENORIGUAL      shift and go to state 207
    EQUALS          shift and go to state 208
    DIFERENTE       shift and go to state 209

    relopAux                       shift and go to state 203

state 161

    (90) aritExpresion -> term cuadTerm .
    (91) aritExpresion -> term cuadTerm . aritAux term cuadTerm
    (92) aritAux -> . MAS pushOper
    (93) aritAux -> . MENOS pushOper

    MAYORQUE        reduce using rule 90 (aritExpresion -> term cuadTerm .)
    MENORQUE        reduce using rule 90 (aritExpresion -> term cuadTerm .)
    MAYORIGUAL      reduce using rule 90 (aritExpresion -> term cuadTerm .)
    MENORIGUAL      reduce using rule 90 (aritExpresion -> term cuadTerm .)
    EQUALS          reduce using rule 90 (aritExpresion -> term cuadTerm .)
    DIFERENTE       reduce using rule 90 (aritExpresion -> term cuadTerm .)
    AND             reduce using rule 90 (aritExpresion -> term cuadTerm .)
    OR              reduce using rule 90 (aritExpresion -> term cuadTerm .)
    ID              reduce using rule 90 (aritExpresion -> term cuadTerm .)
    PARIZQ          reduce using rule 90 (aritExpresion -> term cuadTerm .)
    CTEINT          reduce using rule 90 (aritExpresion -> term cuadTerm .)
    CTEFLOAT        reduce using rule 90 (aritExpresion -> term cuadTerm .)
    true            reduce using rule 90 (aritExpresion -> term cuadTerm .)
    false           reduce using rule 90 (aritExpresion -> term cuadTerm .)
    COMA            reduce using rule 90 (aritExpresion -> term cuadTerm .)
    PARDER          reduce using rule 90 (aritExpresion -> term cuadTerm .)
    DOSPUNTOS       reduce using rule 90 (aritExpresion -> term cuadTerm .)
    CORDER          reduce using rule 90 (aritExpresion -> term cuadTerm .)
    PYC             reduce using rule 90 (aritExpresion -> term cuadTerm .)
    MAS             shift and go to state 211
    MENOS           shift and go to state 212

    aritAux                        shift and go to state 210

state 162

    (95) term -> factor cuadFactor . termAux factor cuadFactor
    (96) termAux -> . MULT pushOper
    (97) termAux -> . DIV pushOper

    MULT            shift and go to state 214
    DIV             shift and go to state 215

    termAux                        shift and go to state 213

state 163

    (99) factor -> CTEINT pushOT .

    MULT            reduce using rule 99 (factor -> CTEINT pushOT .)
    DIV             reduce using rule 99 (factor -> CTEINT pushOT .)
    MAS             reduce using rule 99 (factor -> CTEINT pushOT .)
    MENOS           reduce using rule 99 (factor -> CTEINT pushOT .)
    MAYORQUE        reduce using rule 99 (factor -> CTEINT pushOT .)
    MENORQUE        reduce using rule 99 (factor -> CTEINT pushOT .)
    MAYORIGUAL      reduce using rule 99 (factor -> CTEINT pushOT .)
    MENORIGUAL      reduce using rule 99 (factor -> CTEINT pushOT .)
    EQUALS          reduce using rule 99 (factor -> CTEINT pushOT .)
    DIFERENTE       reduce using rule 99 (factor -> CTEINT pushOT .)
    AND             reduce using rule 99 (factor -> CTEINT pushOT .)
    OR              reduce using rule 99 (factor -> CTEINT pushOT .)
    ID              reduce using rule 99 (factor -> CTEINT pushOT .)
    PARIZQ          reduce using rule 99 (factor -> CTEINT pushOT .)
    CTEINT          reduce using rule 99 (factor -> CTEINT pushOT .)
    CTEFLOAT        reduce using rule 99 (factor -> CTEINT pushOT .)
    true            reduce using rule 99 (factor -> CTEINT pushOT .)
    false           reduce using rule 99 (factor -> CTEINT pushOT .)
    COMA            reduce using rule 99 (factor -> CTEINT pushOT .)
    PARDER          reduce using rule 99 (factor -> CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 99 (factor -> CTEINT pushOT .)
    CORDER          reduce using rule 99 (factor -> CTEINT pushOT .)
    PYC             reduce using rule 99 (factor -> CTEINT pushOT .)


state 164

    (100) factor -> CTEFLOAT pushOT .

    MULT            reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    DIV             reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    MAS             reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    MENOS           reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    MAYORQUE        reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    MENORQUE        reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    MAYORIGUAL      reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    MENORIGUAL      reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    EQUALS          reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    DIFERENTE       reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    AND             reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    OR              reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    ID              reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    PARIZQ          reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    CTEINT          reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    CTEFLOAT        reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    true            reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    false           reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    COMA            reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    PARDER          reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    DOSPUNTOS       reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    CORDER          reduce using rule 100 (factor -> CTEFLOAT pushOT .)
    PYC             reduce using rule 100 (factor -> CTEFLOAT pushOT .)


state 165

    (101) factor -> true pushOT .

    MULT            reduce using rule 101 (factor -> true pushOT .)
    DIV             reduce using rule 101 (factor -> true pushOT .)
    MAS             reduce using rule 101 (factor -> true pushOT .)
    MENOS           reduce using rule 101 (factor -> true pushOT .)
    MAYORQUE        reduce using rule 101 (factor -> true pushOT .)
    MENORQUE        reduce using rule 101 (factor -> true pushOT .)
    MAYORIGUAL      reduce using rule 101 (factor -> true pushOT .)
    MENORIGUAL      reduce using rule 101 (factor -> true pushOT .)
    EQUALS          reduce using rule 101 (factor -> true pushOT .)
    DIFERENTE       reduce using rule 101 (factor -> true pushOT .)
    AND             reduce using rule 101 (factor -> true pushOT .)
    OR              reduce using rule 101 (factor -> true pushOT .)
    ID              reduce using rule 101 (factor -> true pushOT .)
    PARIZQ          reduce using rule 101 (factor -> true pushOT .)
    CTEINT          reduce using rule 101 (factor -> true pushOT .)
    CTEFLOAT        reduce using rule 101 (factor -> true pushOT .)
    true            reduce using rule 101 (factor -> true pushOT .)
    false           reduce using rule 101 (factor -> true pushOT .)
    COMA            reduce using rule 101 (factor -> true pushOT .)
    PARDER          reduce using rule 101 (factor -> true pushOT .)
    DOSPUNTOS       reduce using rule 101 (factor -> true pushOT .)
    CORDER          reduce using rule 101 (factor -> true pushOT .)
    PYC             reduce using rule 101 (factor -> true pushOT .)


state 166

    (102) factor -> false pushOT .

    MULT            reduce using rule 102 (factor -> false pushOT .)
    DIV             reduce using rule 102 (factor -> false pushOT .)
    MAS             reduce using rule 102 (factor -> false pushOT .)
    MENOS           reduce using rule 102 (factor -> false pushOT .)
    MAYORQUE        reduce using rule 102 (factor -> false pushOT .)
    MENORQUE        reduce using rule 102 (factor -> false pushOT .)
    MAYORIGUAL      reduce using rule 102 (factor -> false pushOT .)
    MENORIGUAL      reduce using rule 102 (factor -> false pushOT .)
    EQUALS          reduce using rule 102 (factor -> false pushOT .)
    DIFERENTE       reduce using rule 102 (factor -> false pushOT .)
    AND             reduce using rule 102 (factor -> false pushOT .)
    OR              reduce using rule 102 (factor -> false pushOT .)
    ID              reduce using rule 102 (factor -> false pushOT .)
    PARIZQ          reduce using rule 102 (factor -> false pushOT .)
    CTEINT          reduce using rule 102 (factor -> false pushOT .)
    CTEFLOAT        reduce using rule 102 (factor -> false pushOT .)
    true            reduce using rule 102 (factor -> false pushOT .)
    false           reduce using rule 102 (factor -> false pushOT .)
    COMA            reduce using rule 102 (factor -> false pushOT .)
    PARDER          reduce using rule 102 (factor -> false pushOT .)
    DOSPUNTOS       reduce using rule 102 (factor -> false pushOT .)
    CORDER          reduce using rule 102 (factor -> false pushOT .)
    PYC             reduce using rule 102 (factor -> false pushOT .)


state 167

    (56) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 216


state 168

    (57) escaux -> expresion cuadEsc . nextexp
    (61) nextexp -> . COMA escaux
    (62) nextexp -> . empty
    (123) empty -> .

    COMA            shift and go to state 171
    PARDER          reduce using rule 123 (empty -> .)

    nextexp                        shift and go to state 217
    empty                          shift and go to state 172

state 169

    (58) escaux -> CTESTRING cuadEsc . nextexp
    (61) nextexp -> . COMA escaux
    (62) nextexp -> . empty
    (123) empty -> .

    COMA            shift and go to state 171
    PARDER          reduce using rule 123 (empty -> .)

    nextexp                        shift and go to state 218
    empty                          shift and go to state 172

state 170

    (59) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 59 (escaux -> llamada_esp nextexp .)


state 171

    (61) nextexp -> COMA . escaux
    (57) escaux -> . expresion cuadEsc nextexp
    (58) escaux -> . CTESTRING cuadEsc nextexp
    (59) escaux -> . llamada_esp nextexp
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

    CTESTRING       shift and go to state 138
    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

    escaux                         shift and go to state 219
    expresion                      shift and go to state 137
    llamada_esp                    shift and go to state 139
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 172

    (62) nextexp -> empty .

    PARDER          reduce using rule 62 (nextexp -> empty .)


state 173

    (70) condicion -> if PARIZQ expresion PARDER . cuadGotof bloque condicionAux cuadFinIf
    (120) cuadGotof -> .

    LLAVEIZQ        reduce using rule 120 (cuadGotof -> .)

    cuadGotof                      shift and go to state 220

state 174

    (73) whileloop -> while migaja PARIZQ expresion . PARDER cuadGotof bloque cuadFinWhile

    PARDER          shift and go to state 221


state 175

    (76) forloop -> for PARIZQ expresion DOSPUNTOS . expresion PARDER bloque
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 222
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 176

    (77) lectura -> read PARIZQ ID checkID . PARDER PYC

    PARDER          shift and go to state 223


state 177

    (38) funcaux -> type ID CORIZQ CTEINT CORDER agregaVar . masParam
    (40) masParam -> . funcaux
    (41) masParam -> . empty
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (123) empty -> .
    (26) type -> . int guardarTipoVar
    (27) type -> . float guardarTipoVar
    (28) type -> . string guardarTipoVar
    (29) type -> . bool guardarTipoVar

    PARDER          reduce using rule 123 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 69
    masParam                       shift and go to state 224
    funcaux                        shift and go to state 115
    empty                          shift and go to state 116

state 178

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar masParam

    CORDER          shift and go to state 225


state 179

    (49) asignacion -> ID checkID asignaux ASIGNA expresion . cuadAsignacion PYC
    (118) cuadAsignacion -> .

    PYC             reduce using rule 118 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 226

state 180

    (50) asignacion -> ID checkID asignaux ASIGNA llamada_esp . PYC
    (104) factor -> llamada_esp . pushOT
    (115) pushOT -> .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 227
    MULT            reduce using rule 115 (pushOT -> .)
    DIV             reduce using rule 115 (pushOT -> .)
    MAS             reduce using rule 115 (pushOT -> .)
    MENOS           reduce using rule 115 (pushOT -> .)
    MAYORQUE        reduce using rule 115 (pushOT -> .)
    MENORQUE        reduce using rule 115 (pushOT -> .)
    MAYORIGUAL      reduce using rule 115 (pushOT -> .)
    MENORIGUAL      reduce using rule 115 (pushOT -> .)
    EQUALS          reduce using rule 115 (pushOT -> .)
    DIFERENTE       reduce using rule 115 (pushOT -> .)
    AND             reduce using rule 115 (pushOT -> .)
    OR              reduce using rule 115 (pushOT -> .)

  ! PYC             [ reduce using rule 115 (pushOT -> .) ]

    pushOT                         shift and go to state 157

state 181

    (51) asignacion -> ID checkID asignaux ASIGNA CTESTRING . PYC

    PYC             shift and go to state 228


state 182

    (53) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 53 (asignaux -> CORIZQ expresion CORDER .)


state 183

    (54) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    expresion                      shift and go to state 229
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 184

    (105) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 230


state 185

    (106) especiales -> length .

    PARIZQ          reduce using rule 106 (especiales -> length .)


state 186

    (107) especiales -> max .

    PARIZQ          reduce using rule 107 (especiales -> max .)


state 187

    (108) especiales -> min .

    PARIZQ          reduce using rule 108 (especiales -> min .)


state 188

    (109) especiales -> avg .

    PARIZQ          reduce using rule 109 (especiales -> avg .)


state 189

    (110) especiales -> median .

    PARIZQ          reduce using rule 110 (especiales -> median .)


state 190

    (111) especiales -> mode .

    PARIZQ          reduce using rule 111 (especiales -> mode .)


state 191

    (112) especiales -> variance .

    PARIZQ          reduce using rule 112 (especiales -> variance .)


state 192

    (113) especiales -> stdev .

    PARIZQ          reduce using rule 113 (especiales -> stdev .)


state 193

    (103) factor -> ID checkID pushOT .

    MULT            reduce using rule 103 (factor -> ID checkID pushOT .)
    DIV             reduce using rule 103 (factor -> ID checkID pushOT .)
    MAS             reduce using rule 103 (factor -> ID checkID pushOT .)
    MENOS           reduce using rule 103 (factor -> ID checkID pushOT .)
    MAYORQUE        reduce using rule 103 (factor -> ID checkID pushOT .)
    MENORQUE        reduce using rule 103 (factor -> ID checkID pushOT .)
    MAYORIGUAL      reduce using rule 103 (factor -> ID checkID pushOT .)
    MENORIGUAL      reduce using rule 103 (factor -> ID checkID pushOT .)
    EQUALS          reduce using rule 103 (factor -> ID checkID pushOT .)
    DIFERENTE       reduce using rule 103 (factor -> ID checkID pushOT .)
    AND             reduce using rule 103 (factor -> ID checkID pushOT .)
    OR              reduce using rule 103 (factor -> ID checkID pushOT .)
    ID              reduce using rule 103 (factor -> ID checkID pushOT .)
    PARIZQ          reduce using rule 103 (factor -> ID checkID pushOT .)
    CTEINT          reduce using rule 103 (factor -> ID checkID pushOT .)
    CTEFLOAT        reduce using rule 103 (factor -> ID checkID pushOT .)
    true            reduce using rule 103 (factor -> ID checkID pushOT .)
    false           reduce using rule 103 (factor -> ID checkID pushOT .)
    COMA            reduce using rule 103 (factor -> ID checkID pushOT .)
    PARDER          reduce using rule 103 (factor -> ID checkID pushOT .)
    DOSPUNTOS       reduce using rule 103 (factor -> ID checkID pushOT .)
    CORDER          reduce using rule 103 (factor -> ID checkID pushOT .)
    PYC             reduce using rule 103 (factor -> ID checkID pushOT .)


state 194

    (98) factor -> PARIZQ expresion PARDER .

    MULT            reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    EQUALS          reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    ID              reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    CTEINT          reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    CTEFLOAT        reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    true            reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    false           reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 98 (factor -> PARIZQ expresion PARDER .)
    PYC             reduce using rule 98 (factor -> PARIZQ expresion PARDER .)


state 195

    (66) llamaux -> expresion nextparametro .

    PARDER          reduce using rule 66 (llamaux -> expresion nextparametro .)


state 196

    (68) nextparametro -> COMA . llamaux
    (66) llamaux -> . expresion nextparametro
    (67) llamaux -> . llamada_esp nextparametro
    (78) expresion -> . andExpresion
    (79) expresion -> . andExpresion OR pushOper andExpresion
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT

    ID              shift and go to state 122
    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135

    llamaux                        shift and go to state 231
    expresion                      shift and go to state 153
    llamada_esp                    shift and go to state 155
    andExpresion                   shift and go to state 127
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131

state 197

    (69) nextparametro -> empty .

    PARDER          reduce using rule 69 (nextparametro -> empty .)


state 198

    (63) llamada -> ID PARIZQ expresion llamaux PARDER .

    ID              reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    write           reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    if              reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    while           reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    for             reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    read            reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    LLAVEDER        reduce using rule 63 (llamada -> ID PARIZQ expresion llamaux PARDER .)


state 199

    (67) llamaux -> llamada_esp nextparametro .

    PARDER          reduce using rule 67 (llamaux -> llamada_esp nextparametro .)


state 200

    (64) llamada -> ID PARIZQ llamada_esp llamaux PARDER .

    ID              reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    write           reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    if              reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    while           reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    for             reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    read            reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    LLAVEDER        reduce using rule 64 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)


state 201

    (79) expresion -> andExpresion OR pushOper . andExpresion
    (80) andExpresion -> . relopExpresion
    (81) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    andExpresion                   shift and go to state 232
    relopExpresion                 shift and go to state 128
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 202

    (81) andExpresion -> relopExpresion AND pushOper . relopExpresion
    (82) relopExpresion -> . aritExpresion cuadArit
    (83) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    relopExpresion                 shift and go to state 233
    aritExpresion                  shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 203

    (83) relopExpresion -> aritExpresion cuadArit relopAux . aritExpresion cuadArit
    (90) aritExpresion -> . term cuadTerm
    (91) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    aritExpresion                  shift and go to state 234
    term                           shift and go to state 130
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 204

    (84) relopAux -> MAYORQUE . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 235

state 205

    (85) relopAux -> MENORQUE . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 236

state 206

    (86) relopAux -> MAYORIGUAL . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 237

state 207

    (87) relopAux -> MENORIGUAL . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 238

state 208

    (88) relopAux -> EQUALS . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 239

state 209

    (89) relopAux -> DIFERENTE . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 240

state 210

    (91) aritExpresion -> term cuadTerm aritAux . term cuadTerm
    (94) term -> . factor
    (95) term -> . factor cuadFactor termAux factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    term                           shift and go to state 241
    factor                         shift and go to state 131
    llamada_esp                    shift and go to state 142

state 211

    (92) aritAux -> MAS . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 242

state 212

    (93) aritAux -> MENOS . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 243

state 213

    (95) term -> factor cuadFactor termAux . factor cuadFactor
    (98) factor -> . PARIZQ expresion PARDER
    (99) factor -> . CTEINT pushOT
    (100) factor -> . CTEFLOAT pushOT
    (101) factor -> . true pushOT
    (102) factor -> . false pushOT
    (103) factor -> . ID checkID pushOT
    (104) factor -> . llamada_esp pushOT
    (105) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 123
    CTEINT          shift and go to state 132
    CTEFLOAT        shift and go to state 133
    true            shift and go to state 134
    false           shift and go to state 135
    ID              shift and go to state 141

    factor                         shift and go to state 244
    llamada_esp                    shift and go to state 142

state 214

    (96) termAux -> MULT . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 245

state 215

    (97) termAux -> DIV . pushOper
    (114) pushOper -> .

    PARIZQ          reduce using rule 114 (pushOper -> .)
    CTEINT          reduce using rule 114 (pushOper -> .)
    CTEFLOAT        reduce using rule 114 (pushOper -> .)
    true            reduce using rule 114 (pushOper -> .)
    false           reduce using rule 114 (pushOper -> .)
    ID              reduce using rule 114 (pushOper -> .)

    pushOper                       shift and go to state 246

state 216

    (56) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 56 (escritura -> write PARIZQ escaux PARDER PYC .)


state 217

    (57) escaux -> expresion cuadEsc nextexp .

    PARDER          reduce using rule 57 (escaux -> expresion cuadEsc nextexp .)


state 218

    (58) escaux -> CTESTRING cuadEsc nextexp .

    PARDER          reduce using rule 58 (escaux -> CTESTRING cuadEsc nextexp .)


state 219

    (61) nextexp -> COMA escaux .

    PARDER          reduce using rule 61 (nextexp -> COMA escaux .)


state 220

    (70) condicion -> if PARIZQ expresion PARDER cuadGotof . bloque condicionAux cuadFinIf
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 247

state 221

    (73) whileloop -> while migaja PARIZQ expresion PARDER . cuadGotof bloque cuadFinWhile
    (120) cuadGotof -> .

    LLAVEIZQ        reduce using rule 120 (cuadGotof -> .)

    cuadGotof                      shift and go to state 248

state 222

    (76) forloop -> for PARIZQ expresion DOSPUNTOS expresion . PARDER bloque

    PARDER          shift and go to state 249


state 223

    (77) lectura -> read PARIZQ ID checkID PARDER . PYC

    PYC             shift and go to state 250


state 224

    (38) funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam .

    PARDER          reduce using rule 38 (funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam .)


state 225

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar masParam
    (16) agregaVar -> .

    int             reduce using rule 16 (agregaVar -> .)
    float           reduce using rule 16 (agregaVar -> .)
    string          reduce using rule 16 (agregaVar -> .)
    bool            reduce using rule 16 (agregaVar -> .)
    PARDER          reduce using rule 16 (agregaVar -> .)

    agregaVar                      shift and go to state 251

state 226

    (49) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion . PYC

    PYC             shift and go to state 252


state 227

    (50) asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)


state 228

    (51) asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .

    ID              reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    write           reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    if              reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    while           reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    for             reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    read            reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    LLAVEDER        reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)


state 229

    (54) asignaux -> CORIZQ expresion COMA expresion . CORDER

    CORDER          shift and go to state 253


state 230

    (105) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 254


state 231

    (68) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 68 (nextparametro -> COMA llamaux .)


state 232

    (79) expresion -> andExpresion OR pushOper andExpresion .

    ID              reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    PARIZQ          reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    CTEINT          reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    CTEFLOAT        reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    true            reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    false           reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    COMA            reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    PARDER          reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    DOSPUNTOS       reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    CORDER          reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)
    PYC             reduce using rule 79 (expresion -> andExpresion OR pushOper andExpresion .)


state 233

    (81) andExpresion -> relopExpresion AND pushOper relopExpresion .

    OR              reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    ID              reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARIZQ          reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CTEINT          reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CTEFLOAT        reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    true            reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    false           reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    COMA            reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARDER          reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    DOSPUNTOS       reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CORDER          reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PYC             reduce using rule 81 (andExpresion -> relopExpresion AND pushOper relopExpresion .)


state 234

    (83) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion . cuadArit
    (119) cuadArit -> .

    AND             reduce using rule 119 (cuadArit -> .)
    OR              reduce using rule 119 (cuadArit -> .)
    ID              reduce using rule 119 (cuadArit -> .)
    PARIZQ          reduce using rule 119 (cuadArit -> .)
    CTEINT          reduce using rule 119 (cuadArit -> .)
    CTEFLOAT        reduce using rule 119 (cuadArit -> .)
    true            reduce using rule 119 (cuadArit -> .)
    false           reduce using rule 119 (cuadArit -> .)
    COMA            reduce using rule 119 (cuadArit -> .)
    PARDER          reduce using rule 119 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 119 (cuadArit -> .)
    CORDER          reduce using rule 119 (cuadArit -> .)
    PYC             reduce using rule 119 (cuadArit -> .)

    cuadArit                       shift and go to state 255

state 235

    (84) relopAux -> MAYORQUE pushOper .

    PARIZQ          reduce using rule 84 (relopAux -> MAYORQUE pushOper .)
    CTEINT          reduce using rule 84 (relopAux -> MAYORQUE pushOper .)
    CTEFLOAT        reduce using rule 84 (relopAux -> MAYORQUE pushOper .)
    true            reduce using rule 84 (relopAux -> MAYORQUE pushOper .)
    false           reduce using rule 84 (relopAux -> MAYORQUE pushOper .)
    ID              reduce using rule 84 (relopAux -> MAYORQUE pushOper .)


state 236

    (85) relopAux -> MENORQUE pushOper .

    PARIZQ          reduce using rule 85 (relopAux -> MENORQUE pushOper .)
    CTEINT          reduce using rule 85 (relopAux -> MENORQUE pushOper .)
    CTEFLOAT        reduce using rule 85 (relopAux -> MENORQUE pushOper .)
    true            reduce using rule 85 (relopAux -> MENORQUE pushOper .)
    false           reduce using rule 85 (relopAux -> MENORQUE pushOper .)
    ID              reduce using rule 85 (relopAux -> MENORQUE pushOper .)


state 237

    (86) relopAux -> MAYORIGUAL pushOper .

    PARIZQ          reduce using rule 86 (relopAux -> MAYORIGUAL pushOper .)
    CTEINT          reduce using rule 86 (relopAux -> MAYORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 86 (relopAux -> MAYORIGUAL pushOper .)
    true            reduce using rule 86 (relopAux -> MAYORIGUAL pushOper .)
    false           reduce using rule 86 (relopAux -> MAYORIGUAL pushOper .)
    ID              reduce using rule 86 (relopAux -> MAYORIGUAL pushOper .)


state 238

    (87) relopAux -> MENORIGUAL pushOper .

    PARIZQ          reduce using rule 87 (relopAux -> MENORIGUAL pushOper .)
    CTEINT          reduce using rule 87 (relopAux -> MENORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 87 (relopAux -> MENORIGUAL pushOper .)
    true            reduce using rule 87 (relopAux -> MENORIGUAL pushOper .)
    false           reduce using rule 87 (relopAux -> MENORIGUAL pushOper .)
    ID              reduce using rule 87 (relopAux -> MENORIGUAL pushOper .)


state 239

    (88) relopAux -> EQUALS pushOper .

    PARIZQ          reduce using rule 88 (relopAux -> EQUALS pushOper .)
    CTEINT          reduce using rule 88 (relopAux -> EQUALS pushOper .)
    CTEFLOAT        reduce using rule 88 (relopAux -> EQUALS pushOper .)
    true            reduce using rule 88 (relopAux -> EQUALS pushOper .)
    false           reduce using rule 88 (relopAux -> EQUALS pushOper .)
    ID              reduce using rule 88 (relopAux -> EQUALS pushOper .)


state 240

    (89) relopAux -> DIFERENTE pushOper .

    PARIZQ          reduce using rule 89 (relopAux -> DIFERENTE pushOper .)
    CTEINT          reduce using rule 89 (relopAux -> DIFERENTE pushOper .)
    CTEFLOAT        reduce using rule 89 (relopAux -> DIFERENTE pushOper .)
    true            reduce using rule 89 (relopAux -> DIFERENTE pushOper .)
    false           reduce using rule 89 (relopAux -> DIFERENTE pushOper .)
    ID              reduce using rule 89 (relopAux -> DIFERENTE pushOper .)


state 241

    (91) aritExpresion -> term cuadTerm aritAux term . cuadTerm
    (116) cuadTerm -> .

    MAYORQUE        reduce using rule 116 (cuadTerm -> .)
    MENORQUE        reduce using rule 116 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 116 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 116 (cuadTerm -> .)
    EQUALS          reduce using rule 116 (cuadTerm -> .)
    DIFERENTE       reduce using rule 116 (cuadTerm -> .)
    AND             reduce using rule 116 (cuadTerm -> .)
    OR              reduce using rule 116 (cuadTerm -> .)
    ID              reduce using rule 116 (cuadTerm -> .)
    PARIZQ          reduce using rule 116 (cuadTerm -> .)
    CTEINT          reduce using rule 116 (cuadTerm -> .)
    CTEFLOAT        reduce using rule 116 (cuadTerm -> .)
    true            reduce using rule 116 (cuadTerm -> .)
    false           reduce using rule 116 (cuadTerm -> .)
    COMA            reduce using rule 116 (cuadTerm -> .)
    PARDER          reduce using rule 116 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 116 (cuadTerm -> .)
    CORDER          reduce using rule 116 (cuadTerm -> .)
    PYC             reduce using rule 116 (cuadTerm -> .)

    cuadTerm                       shift and go to state 256

state 242

    (92) aritAux -> MAS pushOper .

    PARIZQ          reduce using rule 92 (aritAux -> MAS pushOper .)
    CTEINT          reduce using rule 92 (aritAux -> MAS pushOper .)
    CTEFLOAT        reduce using rule 92 (aritAux -> MAS pushOper .)
    true            reduce using rule 92 (aritAux -> MAS pushOper .)
    false           reduce using rule 92 (aritAux -> MAS pushOper .)
    ID              reduce using rule 92 (aritAux -> MAS pushOper .)


state 243

    (93) aritAux -> MENOS pushOper .

    PARIZQ          reduce using rule 93 (aritAux -> MENOS pushOper .)
    CTEINT          reduce using rule 93 (aritAux -> MENOS pushOper .)
    CTEFLOAT        reduce using rule 93 (aritAux -> MENOS pushOper .)
    true            reduce using rule 93 (aritAux -> MENOS pushOper .)
    false           reduce using rule 93 (aritAux -> MENOS pushOper .)
    ID              reduce using rule 93 (aritAux -> MENOS pushOper .)


state 244

    (95) term -> factor cuadFactor termAux factor . cuadFactor
    (117) cuadFactor -> .

    MAS             reduce using rule 117 (cuadFactor -> .)
    MENOS           reduce using rule 117 (cuadFactor -> .)
    MAYORQUE        reduce using rule 117 (cuadFactor -> .)
    MENORQUE        reduce using rule 117 (cuadFactor -> .)
    MAYORIGUAL      reduce using rule 117 (cuadFactor -> .)
    MENORIGUAL      reduce using rule 117 (cuadFactor -> .)
    EQUALS          reduce using rule 117 (cuadFactor -> .)
    DIFERENTE       reduce using rule 117 (cuadFactor -> .)
    AND             reduce using rule 117 (cuadFactor -> .)
    OR              reduce using rule 117 (cuadFactor -> .)
    ID              reduce using rule 117 (cuadFactor -> .)
    PARIZQ          reduce using rule 117 (cuadFactor -> .)
    CTEINT          reduce using rule 117 (cuadFactor -> .)
    CTEFLOAT        reduce using rule 117 (cuadFactor -> .)
    true            reduce using rule 117 (cuadFactor -> .)
    false           reduce using rule 117 (cuadFactor -> .)
    COMA            reduce using rule 117 (cuadFactor -> .)
    PARDER          reduce using rule 117 (cuadFactor -> .)
    DOSPUNTOS       reduce using rule 117 (cuadFactor -> .)
    CORDER          reduce using rule 117 (cuadFactor -> .)
    PYC             reduce using rule 117 (cuadFactor -> .)

    cuadFactor                     shift and go to state 257

state 245

    (96) termAux -> MULT pushOper .

    PARIZQ          reduce using rule 96 (termAux -> MULT pushOper .)
    CTEINT          reduce using rule 96 (termAux -> MULT pushOper .)
    CTEFLOAT        reduce using rule 96 (termAux -> MULT pushOper .)
    true            reduce using rule 96 (termAux -> MULT pushOper .)
    false           reduce using rule 96 (termAux -> MULT pushOper .)
    ID              reduce using rule 96 (termAux -> MULT pushOper .)


state 246

    (97) termAux -> DIV pushOper .

    PARIZQ          reduce using rule 97 (termAux -> DIV pushOper .)
    CTEINT          reduce using rule 97 (termAux -> DIV pushOper .)
    CTEFLOAT        reduce using rule 97 (termAux -> DIV pushOper .)
    true            reduce using rule 97 (termAux -> DIV pushOper .)
    false           reduce using rule 97 (termAux -> DIV pushOper .)
    ID              reduce using rule 97 (termAux -> DIV pushOper .)


state 247

    (70) condicion -> if PARIZQ expresion PARDER cuadGotof bloque . condicionAux cuadFinIf
    (71) condicionAux -> . else cuadGoto bloque
    (72) condicionAux -> . empty
    (123) empty -> .

    else            shift and go to state 259
    ID              reduce using rule 123 (empty -> .)
    write           reduce using rule 123 (empty -> .)
    if              reduce using rule 123 (empty -> .)
    while           reduce using rule 123 (empty -> .)
    for             reduce using rule 123 (empty -> .)
    read            reduce using rule 123 (empty -> .)
    LLAVEDER        reduce using rule 123 (empty -> .)

    condicionAux                   shift and go to state 258
    empty                          shift and go to state 260

state 248

    (73) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof . bloque cuadFinWhile
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 261

state 249

    (76) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER . bloque
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 262

state 250

    (77) lectura -> read PARIZQ ID checkID PARDER PYC .

    ID              reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    write           reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    if              reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    while           reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    for             reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    read            reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    LLAVEDER        reduce using rule 77 (lectura -> read PARIZQ ID checkID PARDER PYC .)


state 251

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . masParam
    (40) masParam -> . funcaux
    (41) masParam -> . empty
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (123) empty -> .
    (26) type -> . int guardarTipoVar
    (27) type -> . float guardarTipoVar
    (28) type -> . string guardarTipoVar
    (29) type -> . bool guardarTipoVar

    PARDER          reduce using rule 123 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 69
    masParam                       shift and go to state 263
    funcaux                        shift and go to state 115
    empty                          shift and go to state 116

state 252

    (49) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .

    ID              reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    write           reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    if              reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    while           reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    for             reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    read            reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)


state 253

    (54) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 54 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 254

    (105) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    ID              reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARIZQ          reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEINT          reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    true            reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    false           reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MULT            reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIV             reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAS             reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENOS           reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORQUE        reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORQUE        reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    EQUALS          reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIFERENTE       reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    AND             reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    OR              reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    COMA            reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CORDER          reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 105 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 255

    (83) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .

    AND             reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    OR              reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    ID              reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARIZQ          reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CTEINT          reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CTEFLOAT        reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    true            reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    false           reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    COMA            reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARDER          reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CORDER          reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PYC             reduce using rule 83 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)


state 256

    (91) aritExpresion -> term cuadTerm aritAux term cuadTerm .

    MAYORQUE        reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORQUE        reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MAYORIGUAL      reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORIGUAL      reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    EQUALS          reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DIFERENTE       reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    AND             reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    OR              reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    ID              reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARIZQ          reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CTEINT          reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CTEFLOAT        reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    true            reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    false           reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    COMA            reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARDER          reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DOSPUNTOS       reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CORDER          reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PYC             reduce using rule 91 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)


state 257

    (95) term -> factor cuadFactor termAux factor cuadFactor .

    MAS             reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENOS           reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORQUE        reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORQUE        reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORIGUAL      reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORIGUAL      reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    EQUALS          reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    DIFERENTE       reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    AND             reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    OR              reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    ID              reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARIZQ          reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    CTEINT          reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    CTEFLOAT        reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    true            reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    false           reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    COMA            reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARDER          reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    DOSPUNTOS       reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    CORDER          reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)
    PYC             reduce using rule 95 (term -> factor cuadFactor termAux factor cuadFactor .)


state 258

    (70) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux . cuadFinIf
    (121) cuadFinIf -> .

    ID              reduce using rule 121 (cuadFinIf -> .)
    write           reduce using rule 121 (cuadFinIf -> .)
    if              reduce using rule 121 (cuadFinIf -> .)
    while           reduce using rule 121 (cuadFinIf -> .)
    for             reduce using rule 121 (cuadFinIf -> .)
    read            reduce using rule 121 (cuadFinIf -> .)
    LLAVEDER        reduce using rule 121 (cuadFinIf -> .)

    cuadFinIf                      shift and go to state 264

state 259

    (71) condicionAux -> else . cuadGoto bloque
    (122) cuadGoto -> .

    LLAVEIZQ        reduce using rule 122 (cuadGoto -> .)

    cuadGoto                       shift and go to state 265

state 260

    (72) condicionAux -> empty .

    ID              reduce using rule 72 (condicionAux -> empty .)
    write           reduce using rule 72 (condicionAux -> empty .)
    if              reduce using rule 72 (condicionAux -> empty .)
    while           reduce using rule 72 (condicionAux -> empty .)
    for             reduce using rule 72 (condicionAux -> empty .)
    read            reduce using rule 72 (condicionAux -> empty .)
    LLAVEDER        reduce using rule 72 (condicionAux -> empty .)


state 261

    (73) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque . cuadFinWhile
    (75) cuadFinWhile -> .

    ID              reduce using rule 75 (cuadFinWhile -> .)
    write           reduce using rule 75 (cuadFinWhile -> .)
    if              reduce using rule 75 (cuadFinWhile -> .)
    while           reduce using rule 75 (cuadFinWhile -> .)
    for             reduce using rule 75 (cuadFinWhile -> .)
    read            reduce using rule 75 (cuadFinWhile -> .)
    LLAVEDER        reduce using rule 75 (cuadFinWhile -> .)

    cuadFinWhile                   shift and go to state 266

state 262

    (76) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .

    ID              reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    write           reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    if              reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    while           reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    for             reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    read            reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    LLAVEDER        reduce using rule 76 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)


state 263

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam .

    PARDER          reduce using rule 39 (funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam .)


state 264

    (70) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .

    ID              reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    write           reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    if              reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    while           reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    for             reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    read            reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    LLAVEDER        reduce using rule 70 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)


state 265

    (71) condicionAux -> else cuadGoto . bloque
    (22) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (23) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 74

    bloque                         shift and go to state 267

state 266

    (73) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .

    ID              reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    write           reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    if              reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    while           reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    for             reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    read            reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    LLAVEDER        reduce using rule 73 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)


state 267

    (71) condicionAux -> else cuadGoto bloque .

    ID              reduce using rule 71 (condicionAux -> else cuadGoto bloque .)
    write           reduce using rule 71 (condicionAux -> else cuadGoto bloque .)
    if              reduce using rule 71 (condicionAux -> else cuadGoto bloque .)
    while           reduce using rule 71 (condicionAux -> else cuadGoto bloque .)
    for             reduce using rule 71 (condicionAux -> else cuadGoto bloque .)
    read            reduce using rule 71 (condicionAux -> else cuadGoto bloque .)
    LLAVEDER        reduce using rule 71 (condicionAux -> else cuadGoto bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 7 resolved as shift
WARNING: shift/reduce conflict for var in state 10 resolved as shift
WARNING: shift/reduce conflict for LLAVEIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for var in state 66 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for var in state 76 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 126 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 126 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 126 resolved as shift
WARNING: shift/reduce conflict for true in state 126 resolved as shift
WARNING: shift/reduce conflict for false in state 126 resolved as shift
WARNING: shift/reduce conflict for COMA in state 139 resolved as shift
WARNING: shift/reduce conflict for COMA in state 155 resolved as shift
WARNING: shift/reduce conflict for PYC in state 180 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 11
WARNING: reduce/reduce conflict in state 139 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 155 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 155
