Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC
Rule 2     programa -> program auxprograma ID PYC empty mainfunction end PYC
Rule 3     auxprograma -> <empty>
Rule 4     varsaux -> vars varsaux
Rule 5     varsaux -> empty
Rule 6     paux2 -> function paux2
Rule 7     paux2 -> empty
Rule 8     vars -> var type vaux PYC
Rule 9     vars -> empty
Rule 10    vaux -> ID agregaVar nextvar
Rule 11    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 12    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 13    nextvar -> COMA vaux
Rule 14    nextvar -> empty
Rule 15    agregaVar -> <empty>
Rule 16    guardarTipoVar -> <empty>
Rule 17    guardarTipoFunc -> <empty>
Rule 18    mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque
Rule 19    mainfunction -> func main agregaFunc PARIZQ PARDER bloque
Rule 20    agregaFunc -> <empty>
Rule 21    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 22    bloque -> LLAVEIZQ empty LLAVEDER
Rule 23    bloqueaux -> estatuto bloqueaux
Rule 24    bloqueaux -> estatuto
Rule 25    type -> int guardarTipoVar
Rule 26    type -> float guardarTipoVar
Rule 27    type -> string guardarTipoVar
Rule 28    type -> bool guardarTipoVar
Rule 29    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
Rule 30    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
Rule 31    ftype -> int guardarTipoFunc
Rule 32    ftype -> float guardarTipoFunc
Rule 33    ftype -> string guardarTipoFunc
Rule 34    ftype -> bool guardarTipoFunc
Rule 35    ftype -> void guardarTipoFunc
Rule 36    funcaux -> type ID agregaVar masParam
Rule 37    funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam
Rule 38    funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
Rule 39    masParam -> funcaux
Rule 40    masParam -> empty
Rule 41    estatuto -> asignacion
Rule 42    estatuto -> escritura
Rule 43    estatuto -> llamada
Rule 44    estatuto -> condicion
Rule 45    estatuto -> whileloop
Rule 46    estatuto -> forloop
Rule 47    estatuto -> lectura
Rule 48    asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
Rule 49    asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC
Rule 50    asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC
Rule 51    checkID -> <empty>
Rule 52    asignaux -> CORIZQ expresion CORDER
Rule 53    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 54    asignaux -> empty
Rule 55    escritura -> write PARIZQ escaux PARDER PYC
Rule 56    escaux -> expresion nextexp
Rule 57    escaux -> CTESTRING nextexp
Rule 58    escaux -> llamada_esp nextexp
Rule 59    nextexp -> COMA escaux
Rule 60    nextexp -> empty
Rule 61    llamada -> ID PARIZQ expresion llamaux PARDER
Rule 62    llamada -> ID PARIZQ llamada_esp llamaux PARDER
Rule 63    llamada -> ID PARIZQ PARDER
Rule 64    llamaux -> expresion nextparametro
Rule 65    llamaux -> llamada_esp nextparametro
Rule 66    nextparametro -> COMA llamaux
Rule 67    nextparametro -> empty
Rule 68    condicion -> if PARIZQ expresion PARDER bloque
Rule 69    condicion -> if PARIZQ expresion PARDER bloque else bloque
Rule 70    whileloop -> while PARIZQ expresion PARDER bloque
Rule 71    forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
Rule 72    lectura -> read PARIZQ ID checkID PARDER PYC
Rule 73    expresion -> andExpresion
Rule 74    expresion -> andExpresion OR pushOper andExpresion
Rule 75    andExpresion -> relopExpresion
Rule 76    andExpresion -> relopExpresion AND pushOper relopExpresion
Rule 77    relopExpresion -> aritExpresion
Rule 78    relopExpresion -> aritExpresion relopAux aritExpresion
Rule 79    relopAux -> MAYORQUE pushOper
Rule 80    relopAux -> MENORQUE pushOper
Rule 81    relopAux -> MAYORIGUAL pushOper
Rule 82    relopAux -> MENORIGUAL pushOper
Rule 83    relopAux -> EQUALS pushOper
Rule 84    relopAux -> DIFERENTE pushOper
Rule 85    aritExpresion -> term cuadTerm
Rule 86    aritExpresion -> term cuadTerm aritAux term cuadTerm
Rule 87    p1 -> <empty>
Rule 88    p2 -> <empty>
Rule 89    aritAux -> MAS pushOper
Rule 90    aritAux -> MENOS pushOper
Rule 91    term -> factor
Rule 92    term -> factor cuadFactor termAux factor cuadFactor
Rule 93    termAux -> MULT pushOper
Rule 94    termAux -> DIV pushOper
Rule 95    factor -> PARIZQ expresion PARDER
Rule 96    factor -> CTEINT pushOT
Rule 97    factor -> CTEFLOAT pushOT
Rule 98    factor -> true pushOT
Rule 99    factor -> false pushOT
Rule 100   factor -> ID checkID pushOT
Rule 101   factor -> llamada_esp pushOT
Rule 102   pushOper -> <empty>
Rule 103   pushOT -> <empty>
Rule 104   cuadTerm -> <empty>
Rule 105   cuadFactor -> <empty>
Rule 106   cuadAsignacion -> <empty>
Rule 107   llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 108   especiales -> length
Rule 109   especiales -> max
Rule 110   especiales -> min
Rule 111   especiales -> avg
Rule 112   especiales -> median
Rule 113   especiales -> mode
Rule 114   especiales -> variance
Rule 115   especiales -> stdev
Rule 116   empty -> <empty>

Terminals, with rules where they appear

AND                  : 76
ASIGNA               : 48 49 50
COMA                 : 12 13 38 53 59 66
CORDER               : 11 12 37 38 52 53
CORIZQ               : 11 12 37 38 52 53
CTEBOOL              : 
CTEFLOAT             : 97
CTEINT               : 11 12 12 37 38 38 96
CTESTRING            : 50 57
DIFERENTE            : 84
DIV                  : 94
DOSPUNTOS            : 71
EQUALS               : 83
ID                   : 1 2 10 11 12 29 30 36 37 38 48 49 50 61 62 63 72 100 107
LLAVEDER             : 21 22
LLAVEIZQ             : 21 22
MAS                  : 89
MAYORIGUAL           : 81
MAYORQUE             : 79
MENORIGUAL           : 82
MENORQUE             : 80
MENOS                : 90
MULT                 : 93
OR                   : 74
PARDER               : 18 19 29 30 55 61 62 63 68 69 70 71 72 95 107
PARIZQ               : 18 19 29 30 55 61 62 63 68 69 70 71 72 95 107
PUNTO                : 107
PYC                  : 1 1 2 2 8 48 49 50 55 72
avg                  : 111
bool                 : 28 34
else                 : 69
end                  : 1 2
error                : 
false                : 99
float                : 26 32
for                  : 71
func                 : 18 19 29 30
if                   : 68 69
int                  : 25 31
length               : 108
main                 : 18 19
max                  : 109
median               : 112
min                  : 110
mode                 : 113
program              : 1 2
read                 : 72
stdev                : 115
string               : 27 33
true                 : 98
var                  : 8
variance             : 114
void                 : 35
while                : 70
write                : 55

Nonterminals, with rules where they appear

agregaFunc           : 18 19 29 30
agregaVar            : 10 11 12 36 37 38
andExpresion         : 73 74 74
aritAux              : 86
aritExpresion        : 77 78 78
asignacion           : 41
asignaux             : 48 49 50
auxprograma          : 1 2
bloque               : 18 19 29 30 68 69 69 70 71
bloqueaux            : 21 23
checkID              : 48 49 50 72 100
condicion            : 44
cuadAsignacion       : 48
cuadFactor           : 92 92
cuadTerm             : 85 86 86
empty                : 2 5 7 9 14 22 30 40 54 60 67
escaux               : 55 59
escritura            : 42
especiales           : 107
estatuto             : 23 24
expresion            : 48 52 53 53 56 61 64 68 69 70 71 71 95
factor               : 91 92 92
forloop              : 46
ftype                : 29 30
funcaux              : 29 39
function             : 6
guardarTipoFunc      : 31 32 33 34 35
guardarTipoVar       : 25 26 27 28
lectura              : 47
llamada              : 43
llamada_esp          : 49 58 62 65 101
llamaux              : 61 62 66
mainfunction         : 1 2
masParam             : 36 37 38
nextexp              : 56 57 58
nextparametro        : 64 65
nextvar              : 10 11 12
p1                   : 
p2                   : 
paux2                : 1 6
programa             : 0
pushOT               : 96 97 98 99 100 101
pushOper             : 74 76 79 80 81 82 83 84 89 90 93 94
relopAux             : 78
relopExpresion       : 75 76 76
term                 : 85 86 86
termAux              : 92
type                 : 8 36 37 38
vars                 : 4
varsaux              : 1 4 18 29 30
vaux                 : 8 13
whileloop            : 45

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> . program auxprograma ID PYC empty mainfunction end PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> program . auxprograma ID PYC empty mainfunction end PYC
    (3) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 3

  ! ID              [ reduce using rule 3 (auxprograma -> .) ]

    auxprograma                    shift and go to state 4

state 3

    (1) programa -> program ID . auxprograma PYC varsaux paux2 mainfunction end PYC
    (3) auxprograma -> .

    PYC             reduce using rule 3 (auxprograma -> .)

    auxprograma                    shift and go to state 5

state 4

    (2) programa -> program auxprograma . ID PYC empty mainfunction end PYC

    ID              shift and go to state 6


state 5

    (1) programa -> program ID auxprograma . PYC varsaux paux2 mainfunction end PYC

    PYC             shift and go to state 7


state 6

    (2) programa -> program auxprograma ID . PYC empty mainfunction end PYC

    PYC             shift and go to state 8


state 7

    (1) programa -> program ID auxprograma PYC . varsaux paux2 mainfunction end PYC
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (116) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 116 (empty -> .)
    float           reduce using rule 116 (empty -> .)
    string          reduce using rule 116 (empty -> .)
    bool            reduce using rule 116 (empty -> .)
    void            reduce using rule 116 (empty -> .)
    func            reduce using rule 116 (empty -> .)

  ! var             [ reduce using rule 116 (empty -> .) ]

    varsaux                        shift and go to state 9
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 8

    (2) programa -> program auxprograma ID PYC . empty mainfunction end PYC
    (116) empty -> .

    func            reduce using rule 116 (empty -> .)

    empty                          shift and go to state 13

state 9

    (1) programa -> program ID auxprograma PYC varsaux . paux2 mainfunction end PYC
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (116) empty -> .
    (31) ftype -> . int guardarTipoFunc
    (32) ftype -> . float guardarTipoFunc
    (33) ftype -> . string guardarTipoFunc
    (34) ftype -> . bool guardarTipoFunc
    (35) ftype -> . void guardarTipoFunc

    func            reduce using rule 116 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    paux2                          shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 10

    (4) varsaux -> vars . varsaux
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (116) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 116 (empty -> .)
    float           reduce using rule 116 (empty -> .)
    string          reduce using rule 116 (empty -> .)
    bool            reduce using rule 116 (empty -> .)
    void            reduce using rule 116 (empty -> .)
    func            reduce using rule 116 (empty -> .)
    LLAVEIZQ        reduce using rule 116 (empty -> .)

  ! var             [ reduce using rule 116 (empty -> .) ]

    vars                           shift and go to state 10
    varsaux                        shift and go to state 23
    empty                          shift and go to state 11

state 11

    (5) varsaux -> empty .
    (9) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 5 (varsaux -> empty .)
    int             reduce using rule 5 (varsaux -> empty .)
    float           reduce using rule 5 (varsaux -> empty .)
    string          reduce using rule 5 (varsaux -> empty .)
    bool            reduce using rule 5 (varsaux -> empty .)
    void            reduce using rule 5 (varsaux -> empty .)
    func            reduce using rule 5 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 5 (varsaux -> empty .)
    var             reduce using rule 9 (vars -> empty .)

  ! int             [ reduce using rule 9 (vars -> empty .) ]
  ! float           [ reduce using rule 9 (vars -> empty .) ]
  ! string          [ reduce using rule 9 (vars -> empty .) ]
  ! bool            [ reduce using rule 9 (vars -> empty .) ]
  ! void            [ reduce using rule 9 (vars -> empty .) ]
  ! func            [ reduce using rule 9 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 9 (vars -> empty .) ]


state 12

    (8) vars -> var . type vaux PYC
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 24

state 13

    (2) programa -> program auxprograma ID PYC empty . mainfunction end PYC
    (18) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 29

state 14

    (1) programa -> program ID auxprograma PYC varsaux paux2 . mainfunction end PYC
    (18) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 31

state 15

    (6) paux2 -> function . paux2
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (116) empty -> .
    (31) ftype -> . int guardarTipoFunc
    (32) ftype -> . float guardarTipoFunc
    (33) ftype -> . string guardarTipoFunc
    (34) ftype -> . bool guardarTipoFunc
    (35) ftype -> . void guardarTipoFunc

    func            reduce using rule 116 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    function                       shift and go to state 15
    paux2                          shift and go to state 32
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 16

    (7) paux2 -> empty .

    func            reduce using rule 7 (paux2 -> empty .)


state 17

    (29) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux bloque

    func            shift and go to state 33


state 18

    (31) ftype -> int . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 34

state 19

    (32) ftype -> float . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (33) ftype -> string . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (34) ftype -> bool . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (35) ftype -> void . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (4) varsaux -> vars varsaux .

    int             reduce using rule 4 (varsaux -> vars varsaux .)
    float           reduce using rule 4 (varsaux -> vars varsaux .)
    string          reduce using rule 4 (varsaux -> vars varsaux .)
    bool            reduce using rule 4 (varsaux -> vars varsaux .)
    void            reduce using rule 4 (varsaux -> vars varsaux .)
    func            reduce using rule 4 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 4 (varsaux -> vars varsaux .)


state 24

    (8) vars -> var type . vaux PYC
    (10) vaux -> . ID agregaVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 39

state 25

    (25) type -> int . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 41

state 26

    (26) type -> float . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (27) type -> string . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (28) type -> bool . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (2) programa -> program auxprograma ID PYC empty mainfunction . end PYC

    end             shift and go to state 45


state 30

    (18) mainfunction -> func . main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func . main agregaFunc PARIZQ PARDER bloque

    main            shift and go to state 46


state 31

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction . end PYC

    end             shift and go to state 47


state 32

    (6) paux2 -> function paux2 .

    func            reduce using rule 6 (paux2 -> function paux2 .)


state 33

    (29) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux bloque

    ID              shift and go to state 48


state 34

    (31) ftype -> int guardarTipoFunc .

    func            reduce using rule 31 (ftype -> int guardarTipoFunc .)


state 35

    (32) ftype -> float guardarTipoFunc .

    func            reduce using rule 32 (ftype -> float guardarTipoFunc .)


state 36

    (33) ftype -> string guardarTipoFunc .

    func            reduce using rule 33 (ftype -> string guardarTipoFunc .)


state 37

    (34) ftype -> bool guardarTipoFunc .

    func            reduce using rule 34 (ftype -> bool guardarTipoFunc .)


state 38

    (35) ftype -> void guardarTipoFunc .

    func            reduce using rule 35 (ftype -> void guardarTipoFunc .)


state 39

    (8) vars -> var type vaux . PYC

    PYC             shift and go to state 49


state 40

    (10) vaux -> ID . agregaVar nextvar
    (11) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (15) agregaVar -> .

    CORIZQ          shift and go to state 51
    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 50

state 41

    (25) type -> int guardarTipoVar .

    ID              reduce using rule 25 (type -> int guardarTipoVar .)


state 42

    (26) type -> float guardarTipoVar .

    ID              reduce using rule 26 (type -> float guardarTipoVar .)


state 43

    (27) type -> string guardarTipoVar .

    ID              reduce using rule 27 (type -> string guardarTipoVar .)


state 44

    (28) type -> bool guardarTipoVar .

    ID              reduce using rule 28 (type -> bool guardarTipoVar .)


state 45

    (2) programa -> program auxprograma ID PYC empty mainfunction end . PYC

    PYC             shift and go to state 52


state 46

    (18) mainfunction -> func main . agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func main . agregaFunc PARIZQ PARDER bloque
    (20) agregaFunc -> .

    PARIZQ          reduce using rule 20 (agregaFunc -> .)

    agregaFunc                     shift and go to state 53

state 47

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end . PYC

    PYC             shift and go to state 54


state 48

    (29) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux bloque
    (20) agregaFunc -> .

    PARIZQ          reduce using rule 20 (agregaFunc -> .)

    agregaFunc                     shift and go to state 55

state 49

    (8) vars -> var type vaux PYC .

    var             reduce using rule 8 (vars -> var type vaux PYC .)
    int             reduce using rule 8 (vars -> var type vaux PYC .)
    float           reduce using rule 8 (vars -> var type vaux PYC .)
    string          reduce using rule 8 (vars -> var type vaux PYC .)
    bool            reduce using rule 8 (vars -> var type vaux PYC .)
    void            reduce using rule 8 (vars -> var type vaux PYC .)
    func            reduce using rule 8 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 8 (vars -> var type vaux PYC .)


state 50

    (10) vaux -> ID agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (116) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 116 (empty -> .)

    nextvar                        shift and go to state 56
    empty                          shift and go to state 58

state 51

    (11) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (12) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 59


state 52

    (2) programa -> program auxprograma ID PYC empty mainfunction end PYC .

    $end            reduce using rule 2 (programa -> program auxprograma ID PYC empty mainfunction end PYC .)


state 53

    (18) mainfunction -> func main agregaFunc . PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func main agregaFunc . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 60


state 54

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .

    $end            reduce using rule 1 (programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .)


state 55

    (29) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux bloque

    PARIZQ          shift and go to state 61


state 56

    (10) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 10 (vaux -> ID agregaVar nextvar .)


state 57

    (13) nextvar -> COMA . vaux
    (10) vaux -> . ID agregaVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 62

state 58

    (14) nextvar -> empty .

    PYC             reduce using rule 14 (nextvar -> empty .)


state 59

    (11) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (12) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 63
    COMA            shift and go to state 64


state 60

    (18) mainfunction -> func main agregaFunc PARIZQ . PARDER varsaux bloque
    (19) mainfunction -> func main agregaFunc PARIZQ . PARDER bloque

    PARDER          shift and go to state 65


state 61

    (29) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux bloque
    (36) funcaux -> . type ID agregaVar masParam
    (37) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (116) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 116 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    funcaux                        shift and go to state 66
    empty                          shift and go to state 67
    type                           shift and go to state 68

state 62

    (13) nextvar -> COMA vaux .

    PYC             reduce using rule 13 (nextvar -> COMA vaux .)


state 63

    (11) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 69

state 64

    (12) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 70


state 65

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER . varsaux bloque
    (19) mainfunction -> func main agregaFunc PARIZQ PARDER . bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (116) empty -> .

  ! shift/reduce conflict for LLAVEIZQ resolved as shift
  ! shift/reduce conflict for var resolved as shift
    LLAVEIZQ        shift and go to state 73
    var             shift and go to state 12

  ! LLAVEIZQ        [ reduce using rule 116 (empty -> .) ]
  ! var             [ reduce using rule 116 (empty -> .) ]

    varsaux                        shift and go to state 71
    bloque                         shift and go to state 72
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 66

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux bloque

    PARDER          shift and go to state 74


state 67

    (30) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux bloque

    PARDER          shift and go to state 75


state 68

    (36) funcaux -> type . ID agregaVar masParam
    (37) funcaux -> type . ID CORIZQ CTEINT CORDER agregaVar masParam
    (38) funcaux -> type . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam

    ID              shift and go to state 76


state 69

    (11) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (116) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 116 (empty -> .)

    nextvar                        shift and go to state 77
    empty                          shift and go to state 58

state 70

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 78


state 71

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 79

state 72

    (19) mainfunction -> func main agregaFunc PARIZQ PARDER bloque .

    end             reduce using rule 19 (mainfunction -> func main agregaFunc PARIZQ PARDER bloque .)


state 73

    (21) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (22) bloque -> LLAVEIZQ . empty LLAVEDER
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (116) empty -> .
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada
    (44) estatuto -> . condicion
    (45) estatuto -> . whileloop
    (46) estatuto -> . forloop
    (47) estatuto -> . lectura
    (48) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (49) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (50) asignacion -> . ID checkID asignaux ASIGNA CTESTRING PYC
    (55) escritura -> . write PARIZQ escaux PARDER PYC
    (61) llamada -> . ID PARIZQ expresion llamaux PARDER
    (62) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (63) llamada -> . ID PARIZQ PARDER
    (68) condicion -> . if PARIZQ expresion PARDER bloque
    (69) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (70) whileloop -> . while PARIZQ expresion PARDER bloque
    (71) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (72) lectura -> . read PARIZQ ID checkID PARDER PYC

    LLAVEDER        reduce using rule 116 (empty -> .)
    ID              shift and go to state 90
    write           shift and go to state 91
    if              shift and go to state 92
    while           shift and go to state 93
    for             shift and go to state 94
    read            shift and go to state 95

    bloqueaux                      shift and go to state 80
    empty                          shift and go to state 81
    estatuto                       shift and go to state 82
    asignacion                     shift and go to state 83
    escritura                      shift and go to state 84
    llamada                        shift and go to state 85
    condicion                      shift and go to state 86
    whileloop                      shift and go to state 87
    forloop                        shift and go to state 88
    lectura                        shift and go to state 89

state 74

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (116) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 116 (empty -> .)

  ! var             [ reduce using rule 116 (empty -> .) ]

    varsaux                        shift and go to state 96
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 75

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (116) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 116 (empty -> .)

  ! var             [ reduce using rule 116 (empty -> .) ]

    empty                          shift and go to state 11
    varsaux                        shift and go to state 97
    vars                           shift and go to state 10

state 76

    (36) funcaux -> type ID . agregaVar masParam
    (37) funcaux -> type ID . CORIZQ CTEINT CORDER agregaVar masParam
    (38) funcaux -> type ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (15) agregaVar -> .

    CORIZQ          shift and go to state 99
    int             reduce using rule 15 (agregaVar -> .)
    float           reduce using rule 15 (agregaVar -> .)
    string          reduce using rule 15 (agregaVar -> .)
    bool            reduce using rule 15 (agregaVar -> .)
    PARDER          reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 98

state 77

    (11) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 11 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 78

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 100

state 79

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .

    end             reduce using rule 18 (mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .)


state 80

    (21) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 101


state 81

    (22) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 102


state 82

    (23) bloqueaux -> estatuto . bloqueaux
    (24) bloqueaux -> estatuto .
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada
    (44) estatuto -> . condicion
    (45) estatuto -> . whileloop
    (46) estatuto -> . forloop
    (47) estatuto -> . lectura
    (48) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (49) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (50) asignacion -> . ID checkID asignaux ASIGNA CTESTRING PYC
    (55) escritura -> . write PARIZQ escaux PARDER PYC
    (61) llamada -> . ID PARIZQ expresion llamaux PARDER
    (62) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (63) llamada -> . ID PARIZQ PARDER
    (68) condicion -> . if PARIZQ expresion PARDER bloque
    (69) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (70) whileloop -> . while PARIZQ expresion PARDER bloque
    (71) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (72) lectura -> . read PARIZQ ID checkID PARDER PYC

    LLAVEDER        reduce using rule 24 (bloqueaux -> estatuto .)
    ID              shift and go to state 90
    write           shift and go to state 91
    if              shift and go to state 92
    while           shift and go to state 93
    for             shift and go to state 94
    read            shift and go to state 95

    estatuto                       shift and go to state 82
    bloqueaux                      shift and go to state 103
    asignacion                     shift and go to state 83
    escritura                      shift and go to state 84
    llamada                        shift and go to state 85
    condicion                      shift and go to state 86
    whileloop                      shift and go to state 87
    forloop                        shift and go to state 88
    lectura                        shift and go to state 89

state 83

    (41) estatuto -> asignacion .

    ID              reduce using rule 41 (estatuto -> asignacion .)
    write           reduce using rule 41 (estatuto -> asignacion .)
    if              reduce using rule 41 (estatuto -> asignacion .)
    while           reduce using rule 41 (estatuto -> asignacion .)
    for             reduce using rule 41 (estatuto -> asignacion .)
    read            reduce using rule 41 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 41 (estatuto -> asignacion .)


state 84

    (42) estatuto -> escritura .

    ID              reduce using rule 42 (estatuto -> escritura .)
    write           reduce using rule 42 (estatuto -> escritura .)
    if              reduce using rule 42 (estatuto -> escritura .)
    while           reduce using rule 42 (estatuto -> escritura .)
    for             reduce using rule 42 (estatuto -> escritura .)
    read            reduce using rule 42 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 42 (estatuto -> escritura .)


state 85

    (43) estatuto -> llamada .

    ID              reduce using rule 43 (estatuto -> llamada .)
    write           reduce using rule 43 (estatuto -> llamada .)
    if              reduce using rule 43 (estatuto -> llamada .)
    while           reduce using rule 43 (estatuto -> llamada .)
    for             reduce using rule 43 (estatuto -> llamada .)
    read            reduce using rule 43 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 43 (estatuto -> llamada .)


state 86

    (44) estatuto -> condicion .

    ID              reduce using rule 44 (estatuto -> condicion .)
    write           reduce using rule 44 (estatuto -> condicion .)
    if              reduce using rule 44 (estatuto -> condicion .)
    while           reduce using rule 44 (estatuto -> condicion .)
    for             reduce using rule 44 (estatuto -> condicion .)
    read            reduce using rule 44 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 44 (estatuto -> condicion .)


state 87

    (45) estatuto -> whileloop .

    ID              reduce using rule 45 (estatuto -> whileloop .)
    write           reduce using rule 45 (estatuto -> whileloop .)
    if              reduce using rule 45 (estatuto -> whileloop .)
    while           reduce using rule 45 (estatuto -> whileloop .)
    for             reduce using rule 45 (estatuto -> whileloop .)
    read            reduce using rule 45 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 45 (estatuto -> whileloop .)


state 88

    (46) estatuto -> forloop .

    ID              reduce using rule 46 (estatuto -> forloop .)
    write           reduce using rule 46 (estatuto -> forloop .)
    if              reduce using rule 46 (estatuto -> forloop .)
    while           reduce using rule 46 (estatuto -> forloop .)
    for             reduce using rule 46 (estatuto -> forloop .)
    read            reduce using rule 46 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 46 (estatuto -> forloop .)


state 89

    (47) estatuto -> lectura .

    ID              reduce using rule 47 (estatuto -> lectura .)
    write           reduce using rule 47 (estatuto -> lectura .)
    if              reduce using rule 47 (estatuto -> lectura .)
    while           reduce using rule 47 (estatuto -> lectura .)
    for             reduce using rule 47 (estatuto -> lectura .)
    read            reduce using rule 47 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 47 (estatuto -> lectura .)


state 90

    (48) asignacion -> ID . checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (49) asignacion -> ID . checkID asignaux ASIGNA llamada_esp PYC
    (50) asignacion -> ID . checkID asignaux ASIGNA CTESTRING PYC
    (61) llamada -> ID . PARIZQ expresion llamaux PARDER
    (62) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (63) llamada -> ID . PARIZQ PARDER
    (51) checkID -> .

    PARIZQ          shift and go to state 105
    CORIZQ          reduce using rule 51 (checkID -> .)
    ASIGNA          reduce using rule 51 (checkID -> .)

    checkID                        shift and go to state 104

state 91

    (55) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 106


state 92

    (68) condicion -> if . PARIZQ expresion PARDER bloque
    (69) condicion -> if . PARIZQ expresion PARDER bloque else bloque

    PARIZQ          shift and go to state 107


state 93

    (70) whileloop -> while . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 108


state 94

    (71) forloop -> for . PARIZQ expresion DOSPUNTOS expresion PARDER bloque

    PARIZQ          shift and go to state 109


state 95

    (72) lectura -> read . PARIZQ ID checkID PARDER PYC

    PARIZQ          shift and go to state 110


state 96

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 111

state 97

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 112

state 98

    (36) funcaux -> type ID agregaVar . masParam
    (39) masParam -> . funcaux
    (40) masParam -> . empty
    (36) funcaux -> . type ID agregaVar masParam
    (37) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (116) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 116 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 68
    masParam                       shift and go to state 113
    funcaux                        shift and go to state 114
    empty                          shift and go to state 115

state 99

    (37) funcaux -> type ID CORIZQ . CTEINT CORDER agregaVar masParam
    (38) funcaux -> type ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar masParam

    CTEINT          shift and go to state 116


state 100

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (116) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 116 (empty -> .)

    nextvar                        shift and go to state 117
    empty                          shift and go to state 58

state 101

    (21) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 102

    (22) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 103

    (23) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 23 (bloqueaux -> estatuto bloqueaux .)


state 104

    (48) asignacion -> ID checkID . asignaux ASIGNA expresion cuadAsignacion PYC
    (49) asignacion -> ID checkID . asignaux ASIGNA llamada_esp PYC
    (50) asignacion -> ID checkID . asignaux ASIGNA CTESTRING PYC
    (52) asignaux -> . CORIZQ expresion CORDER
    (53) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (54) asignaux -> . empty
    (116) empty -> .

    CORIZQ          shift and go to state 119
    ASIGNA          reduce using rule 116 (empty -> .)

    asignaux                       shift and go to state 118
    empty                          shift and go to state 120

state 105

    (61) llamada -> ID PARIZQ . expresion llamaux PARDER
    (62) llamada -> ID PARIZQ . llamada_esp llamaux PARDER
    (63) llamada -> ID PARIZQ . PARDER
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

    PARDER          shift and go to state 124
    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

    expresion                      shift and go to state 123
    llamada_esp                    shift and go to state 125
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 106

    (55) escritura -> write PARIZQ . escaux PARDER PYC
    (56) escaux -> . expresion nextexp
    (57) escaux -> . CTESTRING nextexp
    (58) escaux -> . llamada_esp nextexp
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

    CTESTRING       shift and go to state 137
    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

    escaux                         shift and go to state 135
    expresion                      shift and go to state 136
    llamada_esp                    shift and go to state 138
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 107

    (68) condicion -> if PARIZQ . expresion PARDER bloque
    (69) condicion -> if PARIZQ . expresion PARDER bloque else bloque
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 139
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 108

    (70) whileloop -> while PARIZQ . expresion PARDER bloque
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 142
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 109

    (71) forloop -> for PARIZQ . expresion DOSPUNTOS expresion PARDER bloque
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 143
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 110

    (72) lectura -> read PARIZQ . ID checkID PARDER PYC

    ID              shift and go to state 144


state 111

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .

    int             reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    float           reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    string          reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    bool            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    void            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    func            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)


state 112

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .

    int             reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    float           reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    string          reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    bool            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    void            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    func            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)


state 113

    (36) funcaux -> type ID agregaVar masParam .

    PARDER          reduce using rule 36 (funcaux -> type ID agregaVar masParam .)


state 114

    (39) masParam -> funcaux .

    PARDER          reduce using rule 39 (masParam -> funcaux .)


state 115

    (40) masParam -> empty .

    PARDER          reduce using rule 40 (masParam -> empty .)


state 116

    (37) funcaux -> type ID CORIZQ CTEINT . CORDER agregaVar masParam
    (38) funcaux -> type ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar masParam

    CORDER          shift and go to state 145
    COMA            shift and go to state 146


state 117

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 118

    (48) asignacion -> ID checkID asignaux . ASIGNA expresion cuadAsignacion PYC
    (49) asignacion -> ID checkID asignaux . ASIGNA llamada_esp PYC
    (50) asignacion -> ID checkID asignaux . ASIGNA CTESTRING PYC

    ASIGNA          shift and go to state 147


state 119

    (52) asignaux -> CORIZQ . expresion CORDER
    (53) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 148
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 120

    (54) asignaux -> empty .

    ASIGNA          reduce using rule 54 (asignaux -> empty .)


state 121

    (107) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (100) factor -> ID . checkID pushOT
    (51) checkID -> .

    PUNTO           shift and go to state 149
    MULT            reduce using rule 51 (checkID -> .)
    DIV             reduce using rule 51 (checkID -> .)
    MAS             reduce using rule 51 (checkID -> .)
    MENOS           reduce using rule 51 (checkID -> .)
    MAYORQUE        reduce using rule 51 (checkID -> .)
    MENORQUE        reduce using rule 51 (checkID -> .)
    MAYORIGUAL      reduce using rule 51 (checkID -> .)
    MENORIGUAL      reduce using rule 51 (checkID -> .)
    EQUALS          reduce using rule 51 (checkID -> .)
    DIFERENTE       reduce using rule 51 (checkID -> .)
    AND             reduce using rule 51 (checkID -> .)
    OR              reduce using rule 51 (checkID -> .)
    ID              reduce using rule 51 (checkID -> .)
    PARIZQ          reduce using rule 51 (checkID -> .)
    CTEINT          reduce using rule 51 (checkID -> .)
    CTEFLOAT        reduce using rule 51 (checkID -> .)
    true            reduce using rule 51 (checkID -> .)
    false           reduce using rule 51 (checkID -> .)
    COMA            reduce using rule 51 (checkID -> .)
    PARDER          reduce using rule 51 (checkID -> .)
    PYC             reduce using rule 51 (checkID -> .)

    checkID                        shift and go to state 150

state 122

    (95) factor -> PARIZQ . expresion PARDER
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 151
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 123

    (61) llamada -> ID PARIZQ expresion . llamaux PARDER
    (64) llamaux -> . expresion nextparametro
    (65) llamaux -> . llamada_esp nextparametro
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

    expresion                      shift and go to state 152
    llamaux                        shift and go to state 153
    llamada_esp                    shift and go to state 154
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 124

    (63) llamada -> ID PARIZQ PARDER .

    ID              reduce using rule 63 (llamada -> ID PARIZQ PARDER .)
    write           reduce using rule 63 (llamada -> ID PARIZQ PARDER .)
    if              reduce using rule 63 (llamada -> ID PARIZQ PARDER .)
    while           reduce using rule 63 (llamada -> ID PARIZQ PARDER .)
    for             reduce using rule 63 (llamada -> ID PARIZQ PARDER .)
    read            reduce using rule 63 (llamada -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 63 (llamada -> ID PARIZQ PARDER .)


state 125

    (62) llamada -> ID PARIZQ llamada_esp . llamaux PARDER
    (101) factor -> llamada_esp . pushOT
    (64) llamaux -> . expresion nextparametro
    (65) llamaux -> . llamada_esp nextparametro
    (103) pushOT -> .
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for false resolved as shift
    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

  ! ID              [ reduce using rule 103 (pushOT -> .) ]
  ! PARIZQ          [ reduce using rule 103 (pushOT -> .) ]
  ! CTEINT          [ reduce using rule 103 (pushOT -> .) ]
  ! CTEFLOAT        [ reduce using rule 103 (pushOT -> .) ]
  ! true            [ reduce using rule 103 (pushOT -> .) ]
  ! false           [ reduce using rule 103 (pushOT -> .) ]

    llamada_esp                    shift and go to state 154
    llamaux                        shift and go to state 155
    pushOT                         shift and go to state 156
    expresion                      shift and go to state 152
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 126

    (73) expresion -> andExpresion .
    (74) expresion -> andExpresion . OR pushOper andExpresion

    ID              reduce using rule 73 (expresion -> andExpresion .)
    PARIZQ          reduce using rule 73 (expresion -> andExpresion .)
    CTEINT          reduce using rule 73 (expresion -> andExpresion .)
    CTEFLOAT        reduce using rule 73 (expresion -> andExpresion .)
    true            reduce using rule 73 (expresion -> andExpresion .)
    false           reduce using rule 73 (expresion -> andExpresion .)
    COMA            reduce using rule 73 (expresion -> andExpresion .)
    PARDER          reduce using rule 73 (expresion -> andExpresion .)
    DOSPUNTOS       reduce using rule 73 (expresion -> andExpresion .)
    CORDER          reduce using rule 73 (expresion -> andExpresion .)
    PYC             reduce using rule 73 (expresion -> andExpresion .)
    OR              shift and go to state 157


state 127

    (75) andExpresion -> relopExpresion .
    (76) andExpresion -> relopExpresion . AND pushOper relopExpresion

    OR              reduce using rule 75 (andExpresion -> relopExpresion .)
    ID              reduce using rule 75 (andExpresion -> relopExpresion .)
    PARIZQ          reduce using rule 75 (andExpresion -> relopExpresion .)
    CTEINT          reduce using rule 75 (andExpresion -> relopExpresion .)
    CTEFLOAT        reduce using rule 75 (andExpresion -> relopExpresion .)
    true            reduce using rule 75 (andExpresion -> relopExpresion .)
    false           reduce using rule 75 (andExpresion -> relopExpresion .)
    COMA            reduce using rule 75 (andExpresion -> relopExpresion .)
    PARDER          reduce using rule 75 (andExpresion -> relopExpresion .)
    DOSPUNTOS       reduce using rule 75 (andExpresion -> relopExpresion .)
    CORDER          reduce using rule 75 (andExpresion -> relopExpresion .)
    PYC             reduce using rule 75 (andExpresion -> relopExpresion .)
    AND             shift and go to state 158


state 128

    (77) relopExpresion -> aritExpresion .
    (78) relopExpresion -> aritExpresion . relopAux aritExpresion
    (79) relopAux -> . MAYORQUE pushOper
    (80) relopAux -> . MENORQUE pushOper
    (81) relopAux -> . MAYORIGUAL pushOper
    (82) relopAux -> . MENORIGUAL pushOper
    (83) relopAux -> . EQUALS pushOper
    (84) relopAux -> . DIFERENTE pushOper

    AND             reduce using rule 77 (relopExpresion -> aritExpresion .)
    OR              reduce using rule 77 (relopExpresion -> aritExpresion .)
    ID              reduce using rule 77 (relopExpresion -> aritExpresion .)
    PARIZQ          reduce using rule 77 (relopExpresion -> aritExpresion .)
    CTEINT          reduce using rule 77 (relopExpresion -> aritExpresion .)
    CTEFLOAT        reduce using rule 77 (relopExpresion -> aritExpresion .)
    true            reduce using rule 77 (relopExpresion -> aritExpresion .)
    false           reduce using rule 77 (relopExpresion -> aritExpresion .)
    COMA            reduce using rule 77 (relopExpresion -> aritExpresion .)
    PARDER          reduce using rule 77 (relopExpresion -> aritExpresion .)
    DOSPUNTOS       reduce using rule 77 (relopExpresion -> aritExpresion .)
    CORDER          reduce using rule 77 (relopExpresion -> aritExpresion .)
    PYC             reduce using rule 77 (relopExpresion -> aritExpresion .)
    MAYORQUE        shift and go to state 160
    MENORQUE        shift and go to state 161
    MAYORIGUAL      shift and go to state 162
    MENORIGUAL      shift and go to state 163
    EQUALS          shift and go to state 164
    DIFERENTE       shift and go to state 165

    relopAux                       shift and go to state 159

state 129

    (85) aritExpresion -> term . cuadTerm
    (86) aritExpresion -> term . cuadTerm aritAux term cuadTerm
    (104) cuadTerm -> .

    MAS             reduce using rule 104 (cuadTerm -> .)
    MENOS           reduce using rule 104 (cuadTerm -> .)
    MAYORQUE        reduce using rule 104 (cuadTerm -> .)
    MENORQUE        reduce using rule 104 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 104 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 104 (cuadTerm -> .)
    EQUALS          reduce using rule 104 (cuadTerm -> .)
    DIFERENTE       reduce using rule 104 (cuadTerm -> .)
    AND             reduce using rule 104 (cuadTerm -> .)
    OR              reduce using rule 104 (cuadTerm -> .)
    ID              reduce using rule 104 (cuadTerm -> .)
    PARIZQ          reduce using rule 104 (cuadTerm -> .)
    CTEINT          reduce using rule 104 (cuadTerm -> .)
    CTEFLOAT        reduce using rule 104 (cuadTerm -> .)
    true            reduce using rule 104 (cuadTerm -> .)
    false           reduce using rule 104 (cuadTerm -> .)
    COMA            reduce using rule 104 (cuadTerm -> .)
    PARDER          reduce using rule 104 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 104 (cuadTerm -> .)
    CORDER          reduce using rule 104 (cuadTerm -> .)
    PYC             reduce using rule 104 (cuadTerm -> .)

    cuadTerm                       shift and go to state 166

state 130

    (91) term -> factor .
    (92) term -> factor . cuadFactor termAux factor cuadFactor
    (105) cuadFactor -> .

    MAS             reduce using rule 91 (term -> factor .)
    MENOS           reduce using rule 91 (term -> factor .)
    MAYORQUE        reduce using rule 91 (term -> factor .)
    MENORQUE        reduce using rule 91 (term -> factor .)
    MAYORIGUAL      reduce using rule 91 (term -> factor .)
    MENORIGUAL      reduce using rule 91 (term -> factor .)
    EQUALS          reduce using rule 91 (term -> factor .)
    DIFERENTE       reduce using rule 91 (term -> factor .)
    AND             reduce using rule 91 (term -> factor .)
    OR              reduce using rule 91 (term -> factor .)
    ID              reduce using rule 91 (term -> factor .)
    PARIZQ          reduce using rule 91 (term -> factor .)
    CTEINT          reduce using rule 91 (term -> factor .)
    CTEFLOAT        reduce using rule 91 (term -> factor .)
    true            reduce using rule 91 (term -> factor .)
    false           reduce using rule 91 (term -> factor .)
    COMA            reduce using rule 91 (term -> factor .)
    PARDER          reduce using rule 91 (term -> factor .)
    DOSPUNTOS       reduce using rule 91 (term -> factor .)
    CORDER          reduce using rule 91 (term -> factor .)
    PYC             reduce using rule 91 (term -> factor .)
    MULT            reduce using rule 105 (cuadFactor -> .)
    DIV             reduce using rule 105 (cuadFactor -> .)

    cuadFactor                     shift and go to state 167

state 131

    (96) factor -> CTEINT . pushOT
    (103) pushOT -> .

    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    ID              reduce using rule 103 (pushOT -> .)
    PARIZQ          reduce using rule 103 (pushOT -> .)
    CTEINT          reduce using rule 103 (pushOT -> .)
    CTEFLOAT        reduce using rule 103 (pushOT -> .)
    true            reduce using rule 103 (pushOT -> .)
    false           reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    DOSPUNTOS       reduce using rule 103 (pushOT -> .)
    CORDER          reduce using rule 103 (pushOT -> .)
    PYC             reduce using rule 103 (pushOT -> .)

    pushOT                         shift and go to state 168

state 132

    (97) factor -> CTEFLOAT . pushOT
    (103) pushOT -> .

    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    ID              reduce using rule 103 (pushOT -> .)
    PARIZQ          reduce using rule 103 (pushOT -> .)
    CTEINT          reduce using rule 103 (pushOT -> .)
    CTEFLOAT        reduce using rule 103 (pushOT -> .)
    true            reduce using rule 103 (pushOT -> .)
    false           reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    DOSPUNTOS       reduce using rule 103 (pushOT -> .)
    CORDER          reduce using rule 103 (pushOT -> .)
    PYC             reduce using rule 103 (pushOT -> .)

    pushOT                         shift and go to state 169

state 133

    (98) factor -> true . pushOT
    (103) pushOT -> .

    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    ID              reduce using rule 103 (pushOT -> .)
    PARIZQ          reduce using rule 103 (pushOT -> .)
    CTEINT          reduce using rule 103 (pushOT -> .)
    CTEFLOAT        reduce using rule 103 (pushOT -> .)
    true            reduce using rule 103 (pushOT -> .)
    false           reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    DOSPUNTOS       reduce using rule 103 (pushOT -> .)
    CORDER          reduce using rule 103 (pushOT -> .)
    PYC             reduce using rule 103 (pushOT -> .)

    pushOT                         shift and go to state 170

state 134

    (99) factor -> false . pushOT
    (103) pushOT -> .

    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    ID              reduce using rule 103 (pushOT -> .)
    PARIZQ          reduce using rule 103 (pushOT -> .)
    CTEINT          reduce using rule 103 (pushOT -> .)
    CTEFLOAT        reduce using rule 103 (pushOT -> .)
    true            reduce using rule 103 (pushOT -> .)
    false           reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    DOSPUNTOS       reduce using rule 103 (pushOT -> .)
    CORDER          reduce using rule 103 (pushOT -> .)
    PYC             reduce using rule 103 (pushOT -> .)

    pushOT                         shift and go to state 171

state 135

    (55) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 172


state 136

    (56) escaux -> expresion . nextexp
    (59) nextexp -> . COMA escaux
    (60) nextexp -> . empty
    (116) empty -> .

    COMA            shift and go to state 174
    PARDER          reduce using rule 116 (empty -> .)

    nextexp                        shift and go to state 173
    empty                          shift and go to state 175

state 137

    (57) escaux -> CTESTRING . nextexp
    (59) nextexp -> . COMA escaux
    (60) nextexp -> . empty
    (116) empty -> .

    COMA            shift and go to state 174
    PARDER          reduce using rule 116 (empty -> .)

    nextexp                        shift and go to state 176
    empty                          shift and go to state 175

state 138

    (58) escaux -> llamada_esp . nextexp
    (101) factor -> llamada_esp . pushOT
    (59) nextexp -> . COMA escaux
    (60) nextexp -> . empty
    (103) pushOT -> .
    (116) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 103 (pushOT -> .)
    COMA            shift and go to state 174
    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)

  ! COMA            [ reduce using rule 103 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 116 (empty -> .) ]

    nextexp                        shift and go to state 177
    pushOT                         shift and go to state 156
    empty                          shift and go to state 175

state 139

    (68) condicion -> if PARIZQ expresion . PARDER bloque
    (69) condicion -> if PARIZQ expresion . PARDER bloque else bloque

    PARDER          shift and go to state 178


state 140

    (100) factor -> ID . checkID pushOT
    (107) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (51) checkID -> .

    PUNTO           shift and go to state 149
    MULT            reduce using rule 51 (checkID -> .)
    DIV             reduce using rule 51 (checkID -> .)
    MAS             reduce using rule 51 (checkID -> .)
    MENOS           reduce using rule 51 (checkID -> .)
    MAYORQUE        reduce using rule 51 (checkID -> .)
    MENORQUE        reduce using rule 51 (checkID -> .)
    MAYORIGUAL      reduce using rule 51 (checkID -> .)
    MENORIGUAL      reduce using rule 51 (checkID -> .)
    EQUALS          reduce using rule 51 (checkID -> .)
    DIFERENTE       reduce using rule 51 (checkID -> .)
    AND             reduce using rule 51 (checkID -> .)
    OR              reduce using rule 51 (checkID -> .)
    PARDER          reduce using rule 51 (checkID -> .)
    DOSPUNTOS       reduce using rule 51 (checkID -> .)
    CORDER          reduce using rule 51 (checkID -> .)
    COMA            reduce using rule 51 (checkID -> .)
    ID              reduce using rule 51 (checkID -> .)
    PARIZQ          reduce using rule 51 (checkID -> .)
    CTEINT          reduce using rule 51 (checkID -> .)
    CTEFLOAT        reduce using rule 51 (checkID -> .)
    true            reduce using rule 51 (checkID -> .)
    false           reduce using rule 51 (checkID -> .)
    PYC             reduce using rule 51 (checkID -> .)

    checkID                        shift and go to state 150

state 141

    (101) factor -> llamada_esp . pushOT
    (103) pushOT -> .

    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    DOSPUNTOS       reduce using rule 103 (pushOT -> .)
    CORDER          reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    ID              reduce using rule 103 (pushOT -> .)
    PARIZQ          reduce using rule 103 (pushOT -> .)
    CTEINT          reduce using rule 103 (pushOT -> .)
    CTEFLOAT        reduce using rule 103 (pushOT -> .)
    true            reduce using rule 103 (pushOT -> .)
    false           reduce using rule 103 (pushOT -> .)
    PYC             reduce using rule 103 (pushOT -> .)

    pushOT                         shift and go to state 156

state 142

    (70) whileloop -> while PARIZQ expresion . PARDER bloque

    PARDER          shift and go to state 179


state 143

    (71) forloop -> for PARIZQ expresion . DOSPUNTOS expresion PARDER bloque

    DOSPUNTOS       shift and go to state 180


state 144

    (72) lectura -> read PARIZQ ID . checkID PARDER PYC
    (51) checkID -> .

    PARDER          reduce using rule 51 (checkID -> .)

    checkID                        shift and go to state 181

state 145

    (37) funcaux -> type ID CORIZQ CTEINT CORDER . agregaVar masParam
    (15) agregaVar -> .

    int             reduce using rule 15 (agregaVar -> .)
    float           reduce using rule 15 (agregaVar -> .)
    string          reduce using rule 15 (agregaVar -> .)
    bool            reduce using rule 15 (agregaVar -> .)
    PARDER          reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 182

state 146

    (38) funcaux -> type ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar masParam

    CTEINT          shift and go to state 183


state 147

    (48) asignacion -> ID checkID asignaux ASIGNA . expresion cuadAsignacion PYC
    (49) asignacion -> ID checkID asignaux ASIGNA . llamada_esp PYC
    (50) asignacion -> ID checkID asignaux ASIGNA . CTESTRING PYC
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

    CTESTRING       shift and go to state 186
    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

    expresion                      shift and go to state 184
    llamada_esp                    shift and go to state 185
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 148

    (52) asignaux -> CORIZQ expresion . CORDER
    (53) asignaux -> CORIZQ expresion . COMA expresion CORDER

    CORDER          shift and go to state 187
    COMA            shift and go to state 188


state 149

    (107) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (108) especiales -> . length
    (109) especiales -> . max
    (110) especiales -> . min
    (111) especiales -> . avg
    (112) especiales -> . median
    (113) especiales -> . mode
    (114) especiales -> . variance
    (115) especiales -> . stdev

    length          shift and go to state 190
    max             shift and go to state 191
    min             shift and go to state 192
    avg             shift and go to state 193
    median          shift and go to state 194
    mode            shift and go to state 195
    variance        shift and go to state 196
    stdev           shift and go to state 197

    especiales                     shift and go to state 189

state 150

    (100) factor -> ID checkID . pushOT
    (103) pushOT -> .

    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    ID              reduce using rule 103 (pushOT -> .)
    PARIZQ          reduce using rule 103 (pushOT -> .)
    CTEINT          reduce using rule 103 (pushOT -> .)
    CTEFLOAT        reduce using rule 103 (pushOT -> .)
    true            reduce using rule 103 (pushOT -> .)
    false           reduce using rule 103 (pushOT -> .)
    COMA            reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)
    DOSPUNTOS       reduce using rule 103 (pushOT -> .)
    CORDER          reduce using rule 103 (pushOT -> .)
    PYC             reduce using rule 103 (pushOT -> .)

    pushOT                         shift and go to state 198

state 151

    (95) factor -> PARIZQ expresion . PARDER

    PARDER          shift and go to state 199


state 152

    (64) llamaux -> expresion . nextparametro
    (66) nextparametro -> . COMA llamaux
    (67) nextparametro -> . empty
    (116) empty -> .

    COMA            shift and go to state 201
    PARDER          reduce using rule 116 (empty -> .)

    nextparametro                  shift and go to state 200
    empty                          shift and go to state 202

state 153

    (61) llamada -> ID PARIZQ expresion llamaux . PARDER

    PARDER          shift and go to state 203


state 154

    (65) llamaux -> llamada_esp . nextparametro
    (101) factor -> llamada_esp . pushOT
    (66) nextparametro -> . COMA llamaux
    (67) nextparametro -> . empty
    (103) pushOT -> .
    (116) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 103 (pushOT -> .)
    COMA            shift and go to state 201
    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)
    PARDER          reduce using rule 103 (pushOT -> .)

  ! COMA            [ reduce using rule 103 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 116 (empty -> .) ]

    nextparametro                  shift and go to state 204
    pushOT                         shift and go to state 156
    empty                          shift and go to state 202

state 155

    (62) llamada -> ID PARIZQ llamada_esp llamaux . PARDER

    PARDER          shift and go to state 205


state 156

    (101) factor -> llamada_esp pushOT .

    MULT            reduce using rule 101 (factor -> llamada_esp pushOT .)
    DIV             reduce using rule 101 (factor -> llamada_esp pushOT .)
    MAS             reduce using rule 101 (factor -> llamada_esp pushOT .)
    MENOS           reduce using rule 101 (factor -> llamada_esp pushOT .)
    MAYORQUE        reduce using rule 101 (factor -> llamada_esp pushOT .)
    MENORQUE        reduce using rule 101 (factor -> llamada_esp pushOT .)
    MAYORIGUAL      reduce using rule 101 (factor -> llamada_esp pushOT .)
    MENORIGUAL      reduce using rule 101 (factor -> llamada_esp pushOT .)
    EQUALS          reduce using rule 101 (factor -> llamada_esp pushOT .)
    DIFERENTE       reduce using rule 101 (factor -> llamada_esp pushOT .)
    AND             reduce using rule 101 (factor -> llamada_esp pushOT .)
    OR              reduce using rule 101 (factor -> llamada_esp pushOT .)
    ID              reduce using rule 101 (factor -> llamada_esp pushOT .)
    PARIZQ          reduce using rule 101 (factor -> llamada_esp pushOT .)
    CTEINT          reduce using rule 101 (factor -> llamada_esp pushOT .)
    CTEFLOAT        reduce using rule 101 (factor -> llamada_esp pushOT .)
    true            reduce using rule 101 (factor -> llamada_esp pushOT .)
    false           reduce using rule 101 (factor -> llamada_esp pushOT .)
    COMA            reduce using rule 101 (factor -> llamada_esp pushOT .)
    PARDER          reduce using rule 101 (factor -> llamada_esp pushOT .)
    DOSPUNTOS       reduce using rule 101 (factor -> llamada_esp pushOT .)
    CORDER          reduce using rule 101 (factor -> llamada_esp pushOT .)
    PYC             reduce using rule 101 (factor -> llamada_esp pushOT .)


state 157

    (74) expresion -> andExpresion OR . pushOper andExpresion
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 206

state 158

    (76) andExpresion -> relopExpresion AND . pushOper relopExpresion
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 207

state 159

    (78) relopExpresion -> aritExpresion relopAux . aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    aritExpresion                  shift and go to state 208
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 160

    (79) relopAux -> MAYORQUE . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 209

state 161

    (80) relopAux -> MENORQUE . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 210

state 162

    (81) relopAux -> MAYORIGUAL . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 211

state 163

    (82) relopAux -> MENORIGUAL . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 212

state 164

    (83) relopAux -> EQUALS . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 213

state 165

    (84) relopAux -> DIFERENTE . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 214

state 166

    (85) aritExpresion -> term cuadTerm .
    (86) aritExpresion -> term cuadTerm . aritAux term cuadTerm
    (89) aritAux -> . MAS pushOper
    (90) aritAux -> . MENOS pushOper

    MAYORQUE        reduce using rule 85 (aritExpresion -> term cuadTerm .)
    MENORQUE        reduce using rule 85 (aritExpresion -> term cuadTerm .)
    MAYORIGUAL      reduce using rule 85 (aritExpresion -> term cuadTerm .)
    MENORIGUAL      reduce using rule 85 (aritExpresion -> term cuadTerm .)
    EQUALS          reduce using rule 85 (aritExpresion -> term cuadTerm .)
    DIFERENTE       reduce using rule 85 (aritExpresion -> term cuadTerm .)
    AND             reduce using rule 85 (aritExpresion -> term cuadTerm .)
    OR              reduce using rule 85 (aritExpresion -> term cuadTerm .)
    ID              reduce using rule 85 (aritExpresion -> term cuadTerm .)
    PARIZQ          reduce using rule 85 (aritExpresion -> term cuadTerm .)
    CTEINT          reduce using rule 85 (aritExpresion -> term cuadTerm .)
    CTEFLOAT        reduce using rule 85 (aritExpresion -> term cuadTerm .)
    true            reduce using rule 85 (aritExpresion -> term cuadTerm .)
    false           reduce using rule 85 (aritExpresion -> term cuadTerm .)
    COMA            reduce using rule 85 (aritExpresion -> term cuadTerm .)
    PARDER          reduce using rule 85 (aritExpresion -> term cuadTerm .)
    DOSPUNTOS       reduce using rule 85 (aritExpresion -> term cuadTerm .)
    CORDER          reduce using rule 85 (aritExpresion -> term cuadTerm .)
    PYC             reduce using rule 85 (aritExpresion -> term cuadTerm .)
    MAS             shift and go to state 216
    MENOS           shift and go to state 217

    aritAux                        shift and go to state 215

state 167

    (92) term -> factor cuadFactor . termAux factor cuadFactor
    (93) termAux -> . MULT pushOper
    (94) termAux -> . DIV pushOper

    MULT            shift and go to state 219
    DIV             shift and go to state 220

    termAux                        shift and go to state 218

state 168

    (96) factor -> CTEINT pushOT .

    MULT            reduce using rule 96 (factor -> CTEINT pushOT .)
    DIV             reduce using rule 96 (factor -> CTEINT pushOT .)
    MAS             reduce using rule 96 (factor -> CTEINT pushOT .)
    MENOS           reduce using rule 96 (factor -> CTEINT pushOT .)
    MAYORQUE        reduce using rule 96 (factor -> CTEINT pushOT .)
    MENORQUE        reduce using rule 96 (factor -> CTEINT pushOT .)
    MAYORIGUAL      reduce using rule 96 (factor -> CTEINT pushOT .)
    MENORIGUAL      reduce using rule 96 (factor -> CTEINT pushOT .)
    EQUALS          reduce using rule 96 (factor -> CTEINT pushOT .)
    DIFERENTE       reduce using rule 96 (factor -> CTEINT pushOT .)
    AND             reduce using rule 96 (factor -> CTEINT pushOT .)
    OR              reduce using rule 96 (factor -> CTEINT pushOT .)
    ID              reduce using rule 96 (factor -> CTEINT pushOT .)
    PARIZQ          reduce using rule 96 (factor -> CTEINT pushOT .)
    CTEINT          reduce using rule 96 (factor -> CTEINT pushOT .)
    CTEFLOAT        reduce using rule 96 (factor -> CTEINT pushOT .)
    true            reduce using rule 96 (factor -> CTEINT pushOT .)
    false           reduce using rule 96 (factor -> CTEINT pushOT .)
    COMA            reduce using rule 96 (factor -> CTEINT pushOT .)
    PARDER          reduce using rule 96 (factor -> CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 96 (factor -> CTEINT pushOT .)
    CORDER          reduce using rule 96 (factor -> CTEINT pushOT .)
    PYC             reduce using rule 96 (factor -> CTEINT pushOT .)


state 169

    (97) factor -> CTEFLOAT pushOT .

    MULT            reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    DIV             reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    MAS             reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    MENOS           reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    MAYORQUE        reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    MENORQUE        reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    MAYORIGUAL      reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    MENORIGUAL      reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    EQUALS          reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    DIFERENTE       reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    AND             reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    OR              reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    ID              reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    PARIZQ          reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    CTEINT          reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    CTEFLOAT        reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    true            reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    false           reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    COMA            reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    PARDER          reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    DOSPUNTOS       reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    CORDER          reduce using rule 97 (factor -> CTEFLOAT pushOT .)
    PYC             reduce using rule 97 (factor -> CTEFLOAT pushOT .)


state 170

    (98) factor -> true pushOT .

    MULT            reduce using rule 98 (factor -> true pushOT .)
    DIV             reduce using rule 98 (factor -> true pushOT .)
    MAS             reduce using rule 98 (factor -> true pushOT .)
    MENOS           reduce using rule 98 (factor -> true pushOT .)
    MAYORQUE        reduce using rule 98 (factor -> true pushOT .)
    MENORQUE        reduce using rule 98 (factor -> true pushOT .)
    MAYORIGUAL      reduce using rule 98 (factor -> true pushOT .)
    MENORIGUAL      reduce using rule 98 (factor -> true pushOT .)
    EQUALS          reduce using rule 98 (factor -> true pushOT .)
    DIFERENTE       reduce using rule 98 (factor -> true pushOT .)
    AND             reduce using rule 98 (factor -> true pushOT .)
    OR              reduce using rule 98 (factor -> true pushOT .)
    ID              reduce using rule 98 (factor -> true pushOT .)
    PARIZQ          reduce using rule 98 (factor -> true pushOT .)
    CTEINT          reduce using rule 98 (factor -> true pushOT .)
    CTEFLOAT        reduce using rule 98 (factor -> true pushOT .)
    true            reduce using rule 98 (factor -> true pushOT .)
    false           reduce using rule 98 (factor -> true pushOT .)
    COMA            reduce using rule 98 (factor -> true pushOT .)
    PARDER          reduce using rule 98 (factor -> true pushOT .)
    DOSPUNTOS       reduce using rule 98 (factor -> true pushOT .)
    CORDER          reduce using rule 98 (factor -> true pushOT .)
    PYC             reduce using rule 98 (factor -> true pushOT .)


state 171

    (99) factor -> false pushOT .

    MULT            reduce using rule 99 (factor -> false pushOT .)
    DIV             reduce using rule 99 (factor -> false pushOT .)
    MAS             reduce using rule 99 (factor -> false pushOT .)
    MENOS           reduce using rule 99 (factor -> false pushOT .)
    MAYORQUE        reduce using rule 99 (factor -> false pushOT .)
    MENORQUE        reduce using rule 99 (factor -> false pushOT .)
    MAYORIGUAL      reduce using rule 99 (factor -> false pushOT .)
    MENORIGUAL      reduce using rule 99 (factor -> false pushOT .)
    EQUALS          reduce using rule 99 (factor -> false pushOT .)
    DIFERENTE       reduce using rule 99 (factor -> false pushOT .)
    AND             reduce using rule 99 (factor -> false pushOT .)
    OR              reduce using rule 99 (factor -> false pushOT .)
    ID              reduce using rule 99 (factor -> false pushOT .)
    PARIZQ          reduce using rule 99 (factor -> false pushOT .)
    CTEINT          reduce using rule 99 (factor -> false pushOT .)
    CTEFLOAT        reduce using rule 99 (factor -> false pushOT .)
    true            reduce using rule 99 (factor -> false pushOT .)
    false           reduce using rule 99 (factor -> false pushOT .)
    COMA            reduce using rule 99 (factor -> false pushOT .)
    PARDER          reduce using rule 99 (factor -> false pushOT .)
    DOSPUNTOS       reduce using rule 99 (factor -> false pushOT .)
    CORDER          reduce using rule 99 (factor -> false pushOT .)
    PYC             reduce using rule 99 (factor -> false pushOT .)


state 172

    (55) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 221


state 173

    (56) escaux -> expresion nextexp .

    PARDER          reduce using rule 56 (escaux -> expresion nextexp .)


state 174

    (59) nextexp -> COMA . escaux
    (56) escaux -> . expresion nextexp
    (57) escaux -> . CTESTRING nextexp
    (58) escaux -> . llamada_esp nextexp
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

    CTESTRING       shift and go to state 137
    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

    escaux                         shift and go to state 222
    expresion                      shift and go to state 136
    llamada_esp                    shift and go to state 138
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 175

    (60) nextexp -> empty .

    PARDER          reduce using rule 60 (nextexp -> empty .)


state 176

    (57) escaux -> CTESTRING nextexp .

    PARDER          reduce using rule 57 (escaux -> CTESTRING nextexp .)


state 177

    (58) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 58 (escaux -> llamada_esp nextexp .)


state 178

    (68) condicion -> if PARIZQ expresion PARDER . bloque
    (69) condicion -> if PARIZQ expresion PARDER . bloque else bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 223

state 179

    (70) whileloop -> while PARIZQ expresion PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 224

state 180

    (71) forloop -> for PARIZQ expresion DOSPUNTOS . expresion PARDER bloque
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 225
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 181

    (72) lectura -> read PARIZQ ID checkID . PARDER PYC

    PARDER          shift and go to state 226


state 182

    (37) funcaux -> type ID CORIZQ CTEINT CORDER agregaVar . masParam
    (39) masParam -> . funcaux
    (40) masParam -> . empty
    (36) funcaux -> . type ID agregaVar masParam
    (37) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (116) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 116 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 68
    masParam                       shift and go to state 227
    funcaux                        shift and go to state 114
    empty                          shift and go to state 115

state 183

    (38) funcaux -> type ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar masParam

    CORDER          shift and go to state 228


state 184

    (48) asignacion -> ID checkID asignaux ASIGNA expresion . cuadAsignacion PYC
    (106) cuadAsignacion -> .

    PYC             reduce using rule 106 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 229

state 185

    (49) asignacion -> ID checkID asignaux ASIGNA llamada_esp . PYC
    (101) factor -> llamada_esp . pushOT
    (103) pushOT -> .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 230
    MULT            reduce using rule 103 (pushOT -> .)
    DIV             reduce using rule 103 (pushOT -> .)
    MAS             reduce using rule 103 (pushOT -> .)
    MENOS           reduce using rule 103 (pushOT -> .)
    MAYORQUE        reduce using rule 103 (pushOT -> .)
    MENORQUE        reduce using rule 103 (pushOT -> .)
    MAYORIGUAL      reduce using rule 103 (pushOT -> .)
    MENORIGUAL      reduce using rule 103 (pushOT -> .)
    EQUALS          reduce using rule 103 (pushOT -> .)
    DIFERENTE       reduce using rule 103 (pushOT -> .)
    AND             reduce using rule 103 (pushOT -> .)
    OR              reduce using rule 103 (pushOT -> .)

  ! PYC             [ reduce using rule 103 (pushOT -> .) ]

    pushOT                         shift and go to state 156

state 186

    (50) asignacion -> ID checkID asignaux ASIGNA CTESTRING . PYC

    PYC             shift and go to state 231


state 187

    (52) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 52 (asignaux -> CORIZQ expresion CORDER .)


state 188

    (53) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    expresion                      shift and go to state 232
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 189

    (107) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 233


state 190

    (108) especiales -> length .

    PARIZQ          reduce using rule 108 (especiales -> length .)


state 191

    (109) especiales -> max .

    PARIZQ          reduce using rule 109 (especiales -> max .)


state 192

    (110) especiales -> min .

    PARIZQ          reduce using rule 110 (especiales -> min .)


state 193

    (111) especiales -> avg .

    PARIZQ          reduce using rule 111 (especiales -> avg .)


state 194

    (112) especiales -> median .

    PARIZQ          reduce using rule 112 (especiales -> median .)


state 195

    (113) especiales -> mode .

    PARIZQ          reduce using rule 113 (especiales -> mode .)


state 196

    (114) especiales -> variance .

    PARIZQ          reduce using rule 114 (especiales -> variance .)


state 197

    (115) especiales -> stdev .

    PARIZQ          reduce using rule 115 (especiales -> stdev .)


state 198

    (100) factor -> ID checkID pushOT .

    MULT            reduce using rule 100 (factor -> ID checkID pushOT .)
    DIV             reduce using rule 100 (factor -> ID checkID pushOT .)
    MAS             reduce using rule 100 (factor -> ID checkID pushOT .)
    MENOS           reduce using rule 100 (factor -> ID checkID pushOT .)
    MAYORQUE        reduce using rule 100 (factor -> ID checkID pushOT .)
    MENORQUE        reduce using rule 100 (factor -> ID checkID pushOT .)
    MAYORIGUAL      reduce using rule 100 (factor -> ID checkID pushOT .)
    MENORIGUAL      reduce using rule 100 (factor -> ID checkID pushOT .)
    EQUALS          reduce using rule 100 (factor -> ID checkID pushOT .)
    DIFERENTE       reduce using rule 100 (factor -> ID checkID pushOT .)
    AND             reduce using rule 100 (factor -> ID checkID pushOT .)
    OR              reduce using rule 100 (factor -> ID checkID pushOT .)
    ID              reduce using rule 100 (factor -> ID checkID pushOT .)
    PARIZQ          reduce using rule 100 (factor -> ID checkID pushOT .)
    CTEINT          reduce using rule 100 (factor -> ID checkID pushOT .)
    CTEFLOAT        reduce using rule 100 (factor -> ID checkID pushOT .)
    true            reduce using rule 100 (factor -> ID checkID pushOT .)
    false           reduce using rule 100 (factor -> ID checkID pushOT .)
    COMA            reduce using rule 100 (factor -> ID checkID pushOT .)
    PARDER          reduce using rule 100 (factor -> ID checkID pushOT .)
    DOSPUNTOS       reduce using rule 100 (factor -> ID checkID pushOT .)
    CORDER          reduce using rule 100 (factor -> ID checkID pushOT .)
    PYC             reduce using rule 100 (factor -> ID checkID pushOT .)


state 199

    (95) factor -> PARIZQ expresion PARDER .

    MULT            reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    EQUALS          reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    ID              reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    CTEINT          reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    CTEFLOAT        reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    true            reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    false           reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 95 (factor -> PARIZQ expresion PARDER .)
    PYC             reduce using rule 95 (factor -> PARIZQ expresion PARDER .)


state 200

    (64) llamaux -> expresion nextparametro .

    PARDER          reduce using rule 64 (llamaux -> expresion nextparametro .)


state 201

    (66) nextparametro -> COMA . llamaux
    (64) llamaux -> . expresion nextparametro
    (65) llamaux -> . llamada_esp nextparametro
    (73) expresion -> . andExpresion
    (74) expresion -> . andExpresion OR pushOper andExpresion
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT

    ID              shift and go to state 121
    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134

    llamaux                        shift and go to state 234
    expresion                      shift and go to state 152
    llamada_esp                    shift and go to state 154
    andExpresion                   shift and go to state 126
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130

state 202

    (67) nextparametro -> empty .

    PARDER          reduce using rule 67 (nextparametro -> empty .)


state 203

    (61) llamada -> ID PARIZQ expresion llamaux PARDER .

    ID              reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    write           reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    if              reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    while           reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    for             reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    read            reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    LLAVEDER        reduce using rule 61 (llamada -> ID PARIZQ expresion llamaux PARDER .)


state 204

    (65) llamaux -> llamada_esp nextparametro .

    PARDER          reduce using rule 65 (llamaux -> llamada_esp nextparametro .)


state 205

    (62) llamada -> ID PARIZQ llamada_esp llamaux PARDER .

    ID              reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    write           reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    if              reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    while           reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    for             reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    read            reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    LLAVEDER        reduce using rule 62 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)


state 206

    (74) expresion -> andExpresion OR pushOper . andExpresion
    (75) andExpresion -> . relopExpresion
    (76) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    andExpresion                   shift and go to state 235
    relopExpresion                 shift and go to state 127
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 207

    (76) andExpresion -> relopExpresion AND pushOper . relopExpresion
    (77) relopExpresion -> . aritExpresion
    (78) relopExpresion -> . aritExpresion relopAux aritExpresion
    (85) aritExpresion -> . term cuadTerm
    (86) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    relopExpresion                 shift and go to state 236
    aritExpresion                  shift and go to state 128
    term                           shift and go to state 129
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 208

    (78) relopExpresion -> aritExpresion relopAux aritExpresion .

    AND             reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    OR              reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    ID              reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    PARIZQ          reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    CTEINT          reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    CTEFLOAT        reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    true            reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    false           reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    COMA            reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    PARDER          reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    DOSPUNTOS       reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    CORDER          reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)
    PYC             reduce using rule 78 (relopExpresion -> aritExpresion relopAux aritExpresion .)


state 209

    (79) relopAux -> MAYORQUE pushOper .

    PARIZQ          reduce using rule 79 (relopAux -> MAYORQUE pushOper .)
    CTEINT          reduce using rule 79 (relopAux -> MAYORQUE pushOper .)
    CTEFLOAT        reduce using rule 79 (relopAux -> MAYORQUE pushOper .)
    true            reduce using rule 79 (relopAux -> MAYORQUE pushOper .)
    false           reduce using rule 79 (relopAux -> MAYORQUE pushOper .)
    ID              reduce using rule 79 (relopAux -> MAYORQUE pushOper .)


state 210

    (80) relopAux -> MENORQUE pushOper .

    PARIZQ          reduce using rule 80 (relopAux -> MENORQUE pushOper .)
    CTEINT          reduce using rule 80 (relopAux -> MENORQUE pushOper .)
    CTEFLOAT        reduce using rule 80 (relopAux -> MENORQUE pushOper .)
    true            reduce using rule 80 (relopAux -> MENORQUE pushOper .)
    false           reduce using rule 80 (relopAux -> MENORQUE pushOper .)
    ID              reduce using rule 80 (relopAux -> MENORQUE pushOper .)


state 211

    (81) relopAux -> MAYORIGUAL pushOper .

    PARIZQ          reduce using rule 81 (relopAux -> MAYORIGUAL pushOper .)
    CTEINT          reduce using rule 81 (relopAux -> MAYORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 81 (relopAux -> MAYORIGUAL pushOper .)
    true            reduce using rule 81 (relopAux -> MAYORIGUAL pushOper .)
    false           reduce using rule 81 (relopAux -> MAYORIGUAL pushOper .)
    ID              reduce using rule 81 (relopAux -> MAYORIGUAL pushOper .)


state 212

    (82) relopAux -> MENORIGUAL pushOper .

    PARIZQ          reduce using rule 82 (relopAux -> MENORIGUAL pushOper .)
    CTEINT          reduce using rule 82 (relopAux -> MENORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 82 (relopAux -> MENORIGUAL pushOper .)
    true            reduce using rule 82 (relopAux -> MENORIGUAL pushOper .)
    false           reduce using rule 82 (relopAux -> MENORIGUAL pushOper .)
    ID              reduce using rule 82 (relopAux -> MENORIGUAL pushOper .)


state 213

    (83) relopAux -> EQUALS pushOper .

    PARIZQ          reduce using rule 83 (relopAux -> EQUALS pushOper .)
    CTEINT          reduce using rule 83 (relopAux -> EQUALS pushOper .)
    CTEFLOAT        reduce using rule 83 (relopAux -> EQUALS pushOper .)
    true            reduce using rule 83 (relopAux -> EQUALS pushOper .)
    false           reduce using rule 83 (relopAux -> EQUALS pushOper .)
    ID              reduce using rule 83 (relopAux -> EQUALS pushOper .)


state 214

    (84) relopAux -> DIFERENTE pushOper .

    PARIZQ          reduce using rule 84 (relopAux -> DIFERENTE pushOper .)
    CTEINT          reduce using rule 84 (relopAux -> DIFERENTE pushOper .)
    CTEFLOAT        reduce using rule 84 (relopAux -> DIFERENTE pushOper .)
    true            reduce using rule 84 (relopAux -> DIFERENTE pushOper .)
    false           reduce using rule 84 (relopAux -> DIFERENTE pushOper .)
    ID              reduce using rule 84 (relopAux -> DIFERENTE pushOper .)


state 215

    (86) aritExpresion -> term cuadTerm aritAux . term cuadTerm
    (91) term -> . factor
    (92) term -> . factor cuadFactor termAux factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    term                           shift and go to state 237
    factor                         shift and go to state 130
    llamada_esp                    shift and go to state 141

state 216

    (89) aritAux -> MAS . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 238

state 217

    (90) aritAux -> MENOS . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 239

state 218

    (92) term -> factor cuadFactor termAux . factor cuadFactor
    (95) factor -> . PARIZQ expresion PARDER
    (96) factor -> . CTEINT pushOT
    (97) factor -> . CTEFLOAT pushOT
    (98) factor -> . true pushOT
    (99) factor -> . false pushOT
    (100) factor -> . ID checkID pushOT
    (101) factor -> . llamada_esp pushOT
    (107) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 122
    CTEINT          shift and go to state 131
    CTEFLOAT        shift and go to state 132
    true            shift and go to state 133
    false           shift and go to state 134
    ID              shift and go to state 140

    factor                         shift and go to state 240
    llamada_esp                    shift and go to state 141

state 219

    (93) termAux -> MULT . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 241

state 220

    (94) termAux -> DIV . pushOper
    (102) pushOper -> .

    PARIZQ          reduce using rule 102 (pushOper -> .)
    CTEINT          reduce using rule 102 (pushOper -> .)
    CTEFLOAT        reduce using rule 102 (pushOper -> .)
    true            reduce using rule 102 (pushOper -> .)
    false           reduce using rule 102 (pushOper -> .)
    ID              reduce using rule 102 (pushOper -> .)

    pushOper                       shift and go to state 242

state 221

    (55) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 55 (escritura -> write PARIZQ escaux PARDER PYC .)


state 222

    (59) nextexp -> COMA escaux .

    PARDER          reduce using rule 59 (nextexp -> COMA escaux .)


state 223

    (68) condicion -> if PARIZQ expresion PARDER bloque .
    (69) condicion -> if PARIZQ expresion PARDER bloque . else bloque

    ID              reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    write           reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    if              reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    while           reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    for             reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    read            reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 68 (condicion -> if PARIZQ expresion PARDER bloque .)
    else            shift and go to state 243


state 224

    (70) whileloop -> while PARIZQ expresion PARDER bloque .

    ID              reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)
    write           reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)
    if              reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)
    while           reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)
    for             reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)
    read            reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 70 (whileloop -> while PARIZQ expresion PARDER bloque .)


state 225

    (71) forloop -> for PARIZQ expresion DOSPUNTOS expresion . PARDER bloque

    PARDER          shift and go to state 244


state 226

    (72) lectura -> read PARIZQ ID checkID PARDER . PYC

    PYC             shift and go to state 245


state 227

    (37) funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam .

    PARDER          reduce using rule 37 (funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam .)


state 228

    (38) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar masParam
    (15) agregaVar -> .

    int             reduce using rule 15 (agregaVar -> .)
    float           reduce using rule 15 (agregaVar -> .)
    string          reduce using rule 15 (agregaVar -> .)
    bool            reduce using rule 15 (agregaVar -> .)
    PARDER          reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 246

state 229

    (48) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion . PYC

    PYC             shift and go to state 247


state 230

    (49) asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 49 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)


state 231

    (50) asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .

    ID              reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    write           reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    if              reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    while           reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    for             reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    read            reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)
    LLAVEDER        reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA CTESTRING PYC .)


state 232

    (53) asignaux -> CORIZQ expresion COMA expresion . CORDER

    CORDER          shift and go to state 248


state 233

    (107) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 249


state 234

    (66) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 66 (nextparametro -> COMA llamaux .)


state 235

    (74) expresion -> andExpresion OR pushOper andExpresion .

    ID              reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    PARIZQ          reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    CTEINT          reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    CTEFLOAT        reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    true            reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    false           reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    COMA            reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    PARDER          reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    DOSPUNTOS       reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    CORDER          reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)
    PYC             reduce using rule 74 (expresion -> andExpresion OR pushOper andExpresion .)


state 236

    (76) andExpresion -> relopExpresion AND pushOper relopExpresion .

    OR              reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    ID              reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARIZQ          reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CTEINT          reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CTEFLOAT        reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    true            reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    false           reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    COMA            reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARDER          reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    DOSPUNTOS       reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CORDER          reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PYC             reduce using rule 76 (andExpresion -> relopExpresion AND pushOper relopExpresion .)


state 237

    (86) aritExpresion -> term cuadTerm aritAux term . cuadTerm
    (104) cuadTerm -> .

    MAYORQUE        reduce using rule 104 (cuadTerm -> .)
    MENORQUE        reduce using rule 104 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 104 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 104 (cuadTerm -> .)
    EQUALS          reduce using rule 104 (cuadTerm -> .)
    DIFERENTE       reduce using rule 104 (cuadTerm -> .)
    AND             reduce using rule 104 (cuadTerm -> .)
    OR              reduce using rule 104 (cuadTerm -> .)
    ID              reduce using rule 104 (cuadTerm -> .)
    PARIZQ          reduce using rule 104 (cuadTerm -> .)
    CTEINT          reduce using rule 104 (cuadTerm -> .)
    CTEFLOAT        reduce using rule 104 (cuadTerm -> .)
    true            reduce using rule 104 (cuadTerm -> .)
    false           reduce using rule 104 (cuadTerm -> .)
    COMA            reduce using rule 104 (cuadTerm -> .)
    PARDER          reduce using rule 104 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 104 (cuadTerm -> .)
    CORDER          reduce using rule 104 (cuadTerm -> .)
    PYC             reduce using rule 104 (cuadTerm -> .)

    cuadTerm                       shift and go to state 250

state 238

    (89) aritAux -> MAS pushOper .

    PARIZQ          reduce using rule 89 (aritAux -> MAS pushOper .)
    CTEINT          reduce using rule 89 (aritAux -> MAS pushOper .)
    CTEFLOAT        reduce using rule 89 (aritAux -> MAS pushOper .)
    true            reduce using rule 89 (aritAux -> MAS pushOper .)
    false           reduce using rule 89 (aritAux -> MAS pushOper .)
    ID              reduce using rule 89 (aritAux -> MAS pushOper .)


state 239

    (90) aritAux -> MENOS pushOper .

    PARIZQ          reduce using rule 90 (aritAux -> MENOS pushOper .)
    CTEINT          reduce using rule 90 (aritAux -> MENOS pushOper .)
    CTEFLOAT        reduce using rule 90 (aritAux -> MENOS pushOper .)
    true            reduce using rule 90 (aritAux -> MENOS pushOper .)
    false           reduce using rule 90 (aritAux -> MENOS pushOper .)
    ID              reduce using rule 90 (aritAux -> MENOS pushOper .)


state 240

    (92) term -> factor cuadFactor termAux factor . cuadFactor
    (105) cuadFactor -> .

    MAS             reduce using rule 105 (cuadFactor -> .)
    MENOS           reduce using rule 105 (cuadFactor -> .)
    MAYORQUE        reduce using rule 105 (cuadFactor -> .)
    MENORQUE        reduce using rule 105 (cuadFactor -> .)
    MAYORIGUAL      reduce using rule 105 (cuadFactor -> .)
    MENORIGUAL      reduce using rule 105 (cuadFactor -> .)
    EQUALS          reduce using rule 105 (cuadFactor -> .)
    DIFERENTE       reduce using rule 105 (cuadFactor -> .)
    AND             reduce using rule 105 (cuadFactor -> .)
    OR              reduce using rule 105 (cuadFactor -> .)
    ID              reduce using rule 105 (cuadFactor -> .)
    PARIZQ          reduce using rule 105 (cuadFactor -> .)
    CTEINT          reduce using rule 105 (cuadFactor -> .)
    CTEFLOAT        reduce using rule 105 (cuadFactor -> .)
    true            reduce using rule 105 (cuadFactor -> .)
    false           reduce using rule 105 (cuadFactor -> .)
    COMA            reduce using rule 105 (cuadFactor -> .)
    PARDER          reduce using rule 105 (cuadFactor -> .)
    DOSPUNTOS       reduce using rule 105 (cuadFactor -> .)
    CORDER          reduce using rule 105 (cuadFactor -> .)
    PYC             reduce using rule 105 (cuadFactor -> .)

    cuadFactor                     shift and go to state 251

state 241

    (93) termAux -> MULT pushOper .

    PARIZQ          reduce using rule 93 (termAux -> MULT pushOper .)
    CTEINT          reduce using rule 93 (termAux -> MULT pushOper .)
    CTEFLOAT        reduce using rule 93 (termAux -> MULT pushOper .)
    true            reduce using rule 93 (termAux -> MULT pushOper .)
    false           reduce using rule 93 (termAux -> MULT pushOper .)
    ID              reduce using rule 93 (termAux -> MULT pushOper .)


state 242

    (94) termAux -> DIV pushOper .

    PARIZQ          reduce using rule 94 (termAux -> DIV pushOper .)
    CTEINT          reduce using rule 94 (termAux -> DIV pushOper .)
    CTEFLOAT        reduce using rule 94 (termAux -> DIV pushOper .)
    true            reduce using rule 94 (termAux -> DIV pushOper .)
    false           reduce using rule 94 (termAux -> DIV pushOper .)
    ID              reduce using rule 94 (termAux -> DIV pushOper .)


state 243

    (69) condicion -> if PARIZQ expresion PARDER bloque else . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 252

state 244

    (71) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 253

state 245

    (72) lectura -> read PARIZQ ID checkID PARDER PYC .

    ID              reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    write           reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    if              reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    while           reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    for             reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    read            reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    LLAVEDER        reduce using rule 72 (lectura -> read PARIZQ ID checkID PARDER PYC .)


state 246

    (38) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . masParam
    (39) masParam -> . funcaux
    (40) masParam -> . empty
    (36) funcaux -> . type ID agregaVar masParam
    (37) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (116) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 116 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 68
    masParam                       shift and go to state 254
    funcaux                        shift and go to state 114
    empty                          shift and go to state 115

state 247

    (48) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .

    ID              reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    write           reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    if              reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    while           reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    for             reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    read            reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 48 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)


state 248

    (53) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 53 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 249

    (107) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    ID              reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARIZQ          reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEINT          reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    true            reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    false           reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MULT            reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIV             reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAS             reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENOS           reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORQUE        reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORQUE        reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    EQUALS          reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIFERENTE       reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    AND             reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    OR              reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    COMA            reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CORDER          reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 107 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 250

    (86) aritExpresion -> term cuadTerm aritAux term cuadTerm .

    MAYORQUE        reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORQUE        reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MAYORIGUAL      reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORIGUAL      reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    EQUALS          reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DIFERENTE       reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    AND             reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    OR              reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    ID              reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARIZQ          reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CTEINT          reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CTEFLOAT        reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    true            reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    false           reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    COMA            reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARDER          reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DOSPUNTOS       reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CORDER          reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PYC             reduce using rule 86 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)


state 251

    (92) term -> factor cuadFactor termAux factor cuadFactor .

    MAS             reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENOS           reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORQUE        reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORQUE        reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORIGUAL      reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORIGUAL      reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    EQUALS          reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    DIFERENTE       reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    AND             reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    OR              reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    ID              reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARIZQ          reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    CTEINT          reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    CTEFLOAT        reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    true            reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    false           reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    COMA            reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARDER          reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    DOSPUNTOS       reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    CORDER          reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)
    PYC             reduce using rule 92 (term -> factor cuadFactor termAux factor cuadFactor .)


state 252

    (69) condicion -> if PARIZQ expresion PARDER bloque else bloque .

    ID              reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    write           reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    if              reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    while           reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    for             reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    read            reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    LLAVEDER        reduce using rule 69 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)


state 253

    (71) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .

    ID              reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    write           reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    if              reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    while           reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    for             reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    read            reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    LLAVEDER        reduce using rule 71 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)


state 254

    (38) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam .

    PARDER          reduce using rule 38 (funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 7 resolved as shift
WARNING: shift/reduce conflict for var in state 10 resolved as shift
WARNING: shift/reduce conflict for LLAVEIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for var in state 65 resolved as shift
WARNING: shift/reduce conflict for var in state 74 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 125 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 125 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 125 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 125 resolved as shift
WARNING: shift/reduce conflict for true in state 125 resolved as shift
WARNING: shift/reduce conflict for false in state 125 resolved as shift
WARNING: shift/reduce conflict for COMA in state 138 resolved as shift
WARNING: shift/reduce conflict for COMA in state 154 resolved as shift
WARNING: shift/reduce conflict for PYC in state 185 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 11
WARNING: reduce/reduce conflict in state 138 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 154 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 154
