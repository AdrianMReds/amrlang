Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
Rule 2     programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
Rule 3     cuadGotoMain -> <empty>
Rule 4     cuadEnd -> <empty>
Rule 5     auxprograma -> <empty>
Rule 6     varsaux -> vars varsaux
Rule 7     varsaux -> empty
Rule 8     paux2 -> function paux2
Rule 9     paux2 -> empty
Rule 10    vars -> var type vaux PYC
Rule 11    vars -> empty
Rule 12    vaux -> ID agregaVar nextvar
Rule 13    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 14    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 15    nextvar -> COMA vaux
Rule 16    nextvar -> empty
Rule 17    agregaVar -> <empty>
Rule 18    guardarTipoVar -> <empty>
Rule 19    guardarTipoFunc -> <empty>
Rule 20    mainfunction -> func main agregaFunc PARIZQ PARDER bloque
Rule 21    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 22    bloque -> LLAVEIZQ empty LLAVEDER
Rule 23    bloqueaux -> estatuto bloqueaux
Rule 24    bloqueaux -> estatuto
Rule 25    type -> int guardarTipoVar
Rule 26    type -> float guardarTipoVar
Rule 27    type -> string guardarTipoVar
Rule 28    type -> bool guardarTipoVar
Rule 29    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
Rule 30    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
Rule 31    agregaFunc -> <empty>
Rule 32    ftype -> int guardarTipoFunc
Rule 33    ftype -> float guardarTipoFunc
Rule 34    ftype -> string guardarTipoFunc
Rule 35    ftype -> bool guardarTipoFunc
Rule 36    ftype -> void guardarTipoFunc
Rule 37    funcaux -> type ID agregaVar masParam
Rule 38    funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam
Rule 39    funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
Rule 40    masParam -> funcaux
Rule 41    masParam -> empty
Rule 42    estatuto -> asignacion
Rule 43    estatuto -> escritura
Rule 44    estatuto -> llamada
Rule 45    estatuto -> condicion
Rule 46    estatuto -> whileloop
Rule 47    estatuto -> forloop
Rule 48    estatuto -> lectura
Rule 49    estatuto -> estReturn
Rule 50    asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
Rule 51    asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC
Rule 52    asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
Rule 53    checkID -> <empty>
Rule 54    cuadAsignacion -> <empty>
Rule 55    asignaux -> CORIZQ expresion CORDER
Rule 56    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 57    asignaux -> empty
Rule 58    escritura -> write PARIZQ escaux PARDER PYC
Rule 59    escaux -> expresion cuadEsc nextexp
Rule 60    escaux -> CTESTRING cuadEsc nextexp
Rule 61    escaux -> llamada_esp nextexp
Rule 62    escaux -> llamada nextexp
Rule 63    cuadEsc -> <empty>
Rule 64    nextexp -> COMA escaux
Rule 65    nextexp -> empty
Rule 66    llamada -> ID PARIZQ expresion llamaux PARDER
Rule 67    llamada -> ID PARIZQ llamada_esp llamaux PARDER
Rule 68    llamada -> ID PARIZQ PARDER
Rule 69    llamaux -> expresion nextparametro
Rule 70    llamaux -> llamada_esp nextparametro
Rule 71    nextparametro -> COMA llamaux
Rule 72    nextparametro -> empty
Rule 73    condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
Rule 74    condicionAux -> else cuadGoto bloque
Rule 75    condicionAux -> empty
Rule 76    whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
Rule 77    migaja -> <empty>
Rule 78    cuadFinWhile -> <empty>
Rule 79    forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
Rule 80    checkExpFor -> <empty>
Rule 81    gotoFor -> <empty>
Rule 82    returnFor -> <empty>
Rule 83    lectura -> read PARIZQ ID checkID PARDER PYC
Rule 84    estReturn -> return PARIZQ retAux PARDER PYC
Rule 85    retAux -> expresion
Rule 86    retAux -> CTESTRING
Rule 87    retAux -> true
Rule 88    retAux -> false
Rule 89    retAux -> llamada
Rule 90    expresion -> andExpresion
Rule 91    expresion -> andExpresion OR pushOper andExpresion
Rule 92    andExpresion -> relopExpresion
Rule 93    andExpresion -> relopExpresion AND pushOper relopExpresion
Rule 94    relopExpresion -> aritExpresion cuadArit
Rule 95    relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit
Rule 96    relopAux -> MAYORQUE pushOper
Rule 97    relopAux -> MENORQUE pushOper
Rule 98    relopAux -> MAYORIGUAL pushOper
Rule 99    relopAux -> MENORIGUAL pushOper
Rule 100   relopAux -> EQUALS pushOper
Rule 101   relopAux -> DIFERENTE pushOper
Rule 102   aritExpresion -> term cuadTerm
Rule 103   aritExpresion -> term cuadTerm aritAux term cuadTerm
Rule 104   aritAux -> MAS pushOper
Rule 105   aritAux -> MENOS pushOper
Rule 106   term -> factor
Rule 107   term -> factor cuadFactor termAux factor cuadFactor
Rule 108   termAux -> MULT pushOper
Rule 109   termAux -> DIV pushOper
Rule 110   factor -> PARIZQ expresion PARDER
Rule 111   factor -> CTEINT pushOT
Rule 112   factor -> CTEFLOAT pushOT
Rule 113   factor -> true pushOT
Rule 114   factor -> false pushOT
Rule 115   factor -> ID checkID pushOT
Rule 116   factor -> llamada_esp pushOT
Rule 117   factor -> llamada pushOT
Rule 118   llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 119   especiales -> length
Rule 120   especiales -> max
Rule 121   especiales -> min
Rule 122   especiales -> avg
Rule 123   especiales -> median
Rule 124   especiales -> mode
Rule 125   especiales -> variance
Rule 126   especiales -> stdev
Rule 127   pushOper -> <empty>
Rule 128   pushOT -> <empty>
Rule 129   cuadTerm -> <empty>
Rule 130   cuadFactor -> <empty>
Rule 131   cuadArit -> <empty>
Rule 132   cuadGotof -> <empty>
Rule 133   cuadFinIf -> <empty>
Rule 134   cuadGoto -> <empty>
Rule 135   empty -> <empty>

Terminals, with rules where they appear

AND                  : 93
ASIGNA               : 50 51 52
COMA                 : 14 15 39 56 64 71
CORDER               : 13 14 38 39 55 56
CORIZQ               : 13 14 38 39 55 56
CTEBOOL              : 
CTEFLOAT             : 112
CTEINT               : 13 14 14 38 39 39 111
CTESTRING            : 52 60 86
DIFERENTE            : 101
DIV                  : 109
DOSPUNTOS            : 79
EQUALS               : 100
ID                   : 1 2 12 13 14 29 30 37 38 39 50 51 52 66 67 68 83 115 118
LLAVEDER             : 21 22
LLAVEIZQ             : 21 22
MAS                  : 104
MAYORIGUAL           : 98
MAYORQUE             : 96
MENORIGUAL           : 99
MENORQUE             : 97
MENOS                : 105
MULT                 : 108
OR                   : 91
PARDER               : 20 29 30 58 66 67 68 73 76 79 83 84 110 118
PARIZQ               : 20 29 30 58 66 67 68 73 76 79 83 84 110 118
PUNTO                : 118
PYC                  : 1 1 2 2 10 50 51 52 58 83 84
avg                  : 122
bool                 : 28 35
else                 : 74
end                  : 1 2
error                : 
false                : 88 114
float                : 26 33
for                  : 79
func                 : 20 29 30
if                   : 73
int                  : 25 32
length               : 119
main                 : 20
max                  : 120
median               : 123
min                  : 121
mode                 : 124
program              : 1 2
read                 : 83
return               : 84
stdev                : 126
string               : 27 34
true                 : 87 113
var                  : 10
variance             : 125
void                 : 36
while                : 76
write                : 58

Nonterminals, with rules where they appear

agregaFunc           : 20 29 30
agregaVar            : 12 13 14 37 38 39
andExpresion         : 90 91 91
aritAux              : 103
aritExpresion        : 94 95 95
asignacion           : 42
asignaux             : 50 51 52
auxprograma          : 1 2
bloque               : 20 29 30 73 74 76 79
bloqueaux            : 21 23
checkExpFor          : 79 79
checkID              : 50 51 52 83 115
condicion            : 45
condicionAux         : 73
cuadArit             : 94 95 95
cuadAsignacion       : 50 52
cuadEnd              : 1 2
cuadEsc              : 59 60
cuadFactor           : 107 107
cuadFinIf            : 73
cuadFinWhile         : 76
cuadGoto             : 74
cuadGotoMain         : 1 2
cuadGotof            : 73 76
cuadTerm             : 102 103 103
empty                : 2 7 9 11 16 22 30 41 57 65 72 75
escaux               : 58 64
escritura            : 43
especiales           : 118
estReturn            : 49
estatuto             : 23 24
expresion            : 50 55 56 56 59 66 69 73 76 79 79 85 110
factor               : 106 107 107
forloop              : 47
ftype                : 29 30
funcaux              : 29 40
function             : 8
gotoFor              : 79
guardarTipoFunc      : 32 33 34 35 36
guardarTipoVar       : 25 26 27 28
lectura              : 48
llamada              : 44 62 89 117
llamada_esp          : 51 61 67 70 116
llamaux              : 66 67 71
mainfunction         : 1 2
masParam             : 37 38 39
migaja               : 76
nextexp              : 59 60 61 62
nextparametro        : 69 70
nextvar              : 12 13 14
paux2                : 1 8
programa             : 0
pushOT               : 111 112 113 114 115 116 117
pushOper             : 91 93 96 97 98 99 100 101 104 105 108 109
relopAux             : 95
relopExpresion       : 92 93 93
retAux               : 84
returnFor            : 79
term                 : 102 103 103
termAux              : 107
type                 : 10 37 38 39
vars                 : 6
varsaux              : 1 6 29 30
vaux                 : 10 15
whileloop            : 46

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> . program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program . cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (3) cuadGotoMain -> .

    ID              reduce using rule 3 (cuadGotoMain -> .)

    cuadGotoMain                   shift and go to state 3

state 3

    (1) programa -> program cuadGotoMain . ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program cuadGotoMain . auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (5) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4

  ! ID              [ reduce using rule 5 (auxprograma -> .) ]

    auxprograma                    shift and go to state 5

state 4

    (1) programa -> program cuadGotoMain ID . auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (5) auxprograma -> .

    PYC             reduce using rule 5 (auxprograma -> .)

    auxprograma                    shift and go to state 6

state 5

    (2) programa -> program cuadGotoMain auxprograma . ID PYC empty mainfunction end cuadEnd PYC

    ID              shift and go to state 7


state 6

    (1) programa -> program cuadGotoMain ID auxprograma . PYC varsaux paux2 mainfunction end cuadEnd PYC

    PYC             shift and go to state 8


state 7

    (2) programa -> program cuadGotoMain auxprograma ID . PYC empty mainfunction end cuadEnd PYC

    PYC             shift and go to state 9


state 8

    (1) programa -> program cuadGotoMain ID auxprograma PYC . varsaux paux2 mainfunction end cuadEnd PYC
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (135) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 135 (empty -> .)
    float           reduce using rule 135 (empty -> .)
    string          reduce using rule 135 (empty -> .)
    bool            reduce using rule 135 (empty -> .)
    void            reduce using rule 135 (empty -> .)
    func            reduce using rule 135 (empty -> .)

  ! var             [ reduce using rule 135 (empty -> .) ]

    varsaux                        shift and go to state 10
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 9

    (2) programa -> program cuadGotoMain auxprograma ID PYC . empty mainfunction end cuadEnd PYC
    (135) empty -> .

    func            reduce using rule 135 (empty -> .)

    empty                          shift and go to state 14

state 10

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux . paux2 mainfunction end cuadEnd PYC
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (135) empty -> .
    (32) ftype -> . int guardarTipoFunc
    (33) ftype -> . float guardarTipoFunc
    (34) ftype -> . string guardarTipoFunc
    (35) ftype -> . bool guardarTipoFunc
    (36) ftype -> . void guardarTipoFunc

    func            reduce using rule 135 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    paux2                          shift and go to state 15
    function                       shift and go to state 16
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 11

    (6) varsaux -> vars . varsaux
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (135) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 135 (empty -> .)
    float           reduce using rule 135 (empty -> .)
    string          reduce using rule 135 (empty -> .)
    bool            reduce using rule 135 (empty -> .)
    void            reduce using rule 135 (empty -> .)
    func            reduce using rule 135 (empty -> .)
    LLAVEIZQ        reduce using rule 135 (empty -> .)

  ! var             [ reduce using rule 135 (empty -> .) ]

    vars                           shift and go to state 11
    varsaux                        shift and go to state 24
    empty                          shift and go to state 12

state 12

    (7) varsaux -> empty .
    (11) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 7 (varsaux -> empty .)
    int             reduce using rule 7 (varsaux -> empty .)
    float           reduce using rule 7 (varsaux -> empty .)
    string          reduce using rule 7 (varsaux -> empty .)
    bool            reduce using rule 7 (varsaux -> empty .)
    void            reduce using rule 7 (varsaux -> empty .)
    func            reduce using rule 7 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 7 (varsaux -> empty .)
    var             reduce using rule 11 (vars -> empty .)

  ! int             [ reduce using rule 11 (vars -> empty .) ]
  ! float           [ reduce using rule 11 (vars -> empty .) ]
  ! string          [ reduce using rule 11 (vars -> empty .) ]
  ! bool            [ reduce using rule 11 (vars -> empty .) ]
  ! void            [ reduce using rule 11 (vars -> empty .) ]
  ! func            [ reduce using rule 11 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 11 (vars -> empty .) ]


state 13

    (10) vars -> var . type vaux PYC
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 25

state 14

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty . mainfunction end cuadEnd PYC
    (20) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 30

state 15

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 . mainfunction end cuadEnd PYC
    (20) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 32

state 16

    (8) paux2 -> function . paux2
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (135) empty -> .
    (32) ftype -> . int guardarTipoFunc
    (33) ftype -> . float guardarTipoFunc
    (34) ftype -> . string guardarTipoFunc
    (35) ftype -> . bool guardarTipoFunc
    (36) ftype -> . void guardarTipoFunc

    func            reduce using rule 135 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    function                       shift and go to state 16
    paux2                          shift and go to state 33
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 17

    (9) paux2 -> empty .

    func            reduce using rule 9 (paux2 -> empty .)


state 18

    (29) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux bloque

    func            shift and go to state 34


state 19

    (32) ftype -> int . guardarTipoFunc
    (19) guardarTipoFunc -> .

    func            reduce using rule 19 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (33) ftype -> float . guardarTipoFunc
    (19) guardarTipoFunc -> .

    func            reduce using rule 19 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (34) ftype -> string . guardarTipoFunc
    (19) guardarTipoFunc -> .

    func            reduce using rule 19 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (35) ftype -> bool . guardarTipoFunc
    (19) guardarTipoFunc -> .

    func            reduce using rule 19 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (36) ftype -> void . guardarTipoFunc
    (19) guardarTipoFunc -> .

    func            reduce using rule 19 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 39

state 24

    (6) varsaux -> vars varsaux .

    int             reduce using rule 6 (varsaux -> vars varsaux .)
    float           reduce using rule 6 (varsaux -> vars varsaux .)
    string          reduce using rule 6 (varsaux -> vars varsaux .)
    bool            reduce using rule 6 (varsaux -> vars varsaux .)
    void            reduce using rule 6 (varsaux -> vars varsaux .)
    func            reduce using rule 6 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 6 (varsaux -> vars varsaux .)


state 25

    (10) vars -> var type . vaux PYC
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 40

state 26

    (25) type -> int . guardarTipoVar
    (18) guardarTipoVar -> .

    ID              reduce using rule 18 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (26) type -> float . guardarTipoVar
    (18) guardarTipoVar -> .

    ID              reduce using rule 18 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (27) type -> string . guardarTipoVar
    (18) guardarTipoVar -> .

    ID              reduce using rule 18 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (28) type -> bool . guardarTipoVar
    (18) guardarTipoVar -> .

    ID              reduce using rule 18 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 45

state 30

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction . end cuadEnd PYC

    end             shift and go to state 46


state 31

    (20) mainfunction -> func . main agregaFunc PARIZQ PARDER bloque

    main            shift and go to state 47


state 32

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction . end cuadEnd PYC

    end             shift and go to state 48


state 33

    (8) paux2 -> function paux2 .

    func            reduce using rule 8 (paux2 -> function paux2 .)


state 34

    (29) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux bloque

    ID              shift and go to state 49


state 35

    (32) ftype -> int guardarTipoFunc .

    func            reduce using rule 32 (ftype -> int guardarTipoFunc .)


state 36

    (33) ftype -> float guardarTipoFunc .

    func            reduce using rule 33 (ftype -> float guardarTipoFunc .)


state 37

    (34) ftype -> string guardarTipoFunc .

    func            reduce using rule 34 (ftype -> string guardarTipoFunc .)


state 38

    (35) ftype -> bool guardarTipoFunc .

    func            reduce using rule 35 (ftype -> bool guardarTipoFunc .)


state 39

    (36) ftype -> void guardarTipoFunc .

    func            reduce using rule 36 (ftype -> void guardarTipoFunc .)


state 40

    (10) vars -> var type vaux . PYC

    PYC             shift and go to state 50


state 41

    (12) vaux -> ID . agregaVar nextvar
    (13) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (17) agregaVar -> .

    CORIZQ          shift and go to state 52
    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 51

state 42

    (25) type -> int guardarTipoVar .

    ID              reduce using rule 25 (type -> int guardarTipoVar .)


state 43

    (26) type -> float guardarTipoVar .

    ID              reduce using rule 26 (type -> float guardarTipoVar .)


state 44

    (27) type -> string guardarTipoVar .

    ID              reduce using rule 27 (type -> string guardarTipoVar .)


state 45

    (28) type -> bool guardarTipoVar .

    ID              reduce using rule 28 (type -> bool guardarTipoVar .)


state 46

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 53

state 47

    (20) mainfunction -> func main . agregaFunc PARIZQ PARDER bloque
    (31) agregaFunc -> .

    PARIZQ          reduce using rule 31 (agregaFunc -> .)

    agregaFunc                     shift and go to state 54

state 48

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 55

state 49

    (29) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux bloque
    (31) agregaFunc -> .

    PARIZQ          reduce using rule 31 (agregaFunc -> .)

    agregaFunc                     shift and go to state 56

state 50

    (10) vars -> var type vaux PYC .

    var             reduce using rule 10 (vars -> var type vaux PYC .)
    int             reduce using rule 10 (vars -> var type vaux PYC .)
    float           reduce using rule 10 (vars -> var type vaux PYC .)
    string          reduce using rule 10 (vars -> var type vaux PYC .)
    bool            reduce using rule 10 (vars -> var type vaux PYC .)
    void            reduce using rule 10 (vars -> var type vaux PYC .)
    func            reduce using rule 10 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 10 (vars -> var type vaux PYC .)


state 51

    (12) vaux -> ID agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (135) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 135 (empty -> .)

    nextvar                        shift and go to state 57
    empty                          shift and go to state 59

state 52

    (13) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 60


state 53

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd . PYC

    PYC             shift and go to state 61


state 54

    (20) mainfunction -> func main agregaFunc . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 62


state 55

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd . PYC

    PYC             shift and go to state 63


state 56

    (29) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux bloque

    PARIZQ          shift and go to state 64


state 57

    (12) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID agregaVar nextvar .)


state 58

    (15) nextvar -> COMA . vaux
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 65

state 59

    (16) nextvar -> empty .

    PYC             reduce using rule 16 (nextvar -> empty .)


state 60

    (13) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 66
    COMA            shift and go to state 67


state 61

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .

    $end            reduce using rule 2 (programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .)


state 62

    (20) mainfunction -> func main agregaFunc PARIZQ . PARDER bloque

    PARDER          shift and go to state 68


state 63

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .

    $end            reduce using rule 1 (programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .)


state 64

    (29) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux bloque
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (135) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 135 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 69
    empty                          shift and go to state 70
    type                           shift and go to state 71

state 65

    (15) nextvar -> COMA vaux .

    PYC             reduce using rule 15 (nextvar -> COMA vaux .)


state 66

    (13) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 72

state 67

    (14) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 73


state 68

    (20) mainfunction -> func main agregaFunc PARIZQ PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 74

state 69

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux bloque

    PARDER          shift and go to state 76


state 70

    (30) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux bloque

    PARDER          shift and go to state 77


state 71

    (37) funcaux -> type . ID agregaVar masParam
    (38) funcaux -> type . ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> type . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam

    ID              shift and go to state 78


state 72

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (135) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 135 (empty -> .)

    nextvar                        shift and go to state 79
    empty                          shift and go to state 59

state 73

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 80


state 74

    (20) mainfunction -> func main agregaFunc PARIZQ PARDER bloque .

    end             reduce using rule 20 (mainfunction -> func main agregaFunc PARIZQ PARDER bloque .)


state 75

    (21) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (22) bloque -> LLAVEIZQ . empty LLAVEDER
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (135) empty -> .
    (42) estatuto -> . asignacion
    (43) estatuto -> . escritura
    (44) estatuto -> . llamada
    (45) estatuto -> . condicion
    (46) estatuto -> . whileloop
    (47) estatuto -> . forloop
    (48) estatuto -> . lectura
    (49) estatuto -> . estReturn
    (50) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (51) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (52) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (58) escritura -> . write PARIZQ escaux PARDER PYC
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER
    (73) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (76) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (79) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (83) lectura -> . read PARIZQ ID checkID PARDER PYC
    (84) estReturn -> . return PARIZQ retAux PARDER PYC

    LLAVEDER        reduce using rule 135 (empty -> .)
    ID              shift and go to state 92
    write           shift and go to state 93
    if              shift and go to state 94
    while           shift and go to state 95
    for             shift and go to state 96
    read            shift and go to state 97
    return          shift and go to state 98

    bloqueaux                      shift and go to state 81
    empty                          shift and go to state 82
    estatuto                       shift and go to state 83
    asignacion                     shift and go to state 84
    escritura                      shift and go to state 85
    llamada                        shift and go to state 86
    condicion                      shift and go to state 87
    whileloop                      shift and go to state 88
    forloop                        shift and go to state 89
    lectura                        shift and go to state 90
    estReturn                      shift and go to state 91

state 76

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux bloque
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (135) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 135 (empty -> .)

  ! var             [ reduce using rule 135 (empty -> .) ]

    varsaux                        shift and go to state 99
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 77

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux bloque
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (135) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 135 (empty -> .)

  ! var             [ reduce using rule 135 (empty -> .) ]

    empty                          shift and go to state 12
    varsaux                        shift and go to state 100
    vars                           shift and go to state 11

state 78

    (37) funcaux -> type ID . agregaVar masParam
    (38) funcaux -> type ID . CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> type ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (17) agregaVar -> .

    CORIZQ          shift and go to state 102
    int             reduce using rule 17 (agregaVar -> .)
    float           reduce using rule 17 (agregaVar -> .)
    string          reduce using rule 17 (agregaVar -> .)
    bool            reduce using rule 17 (agregaVar -> .)
    PARDER          reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 101

state 79

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 13 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 80

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 103

state 81

    (21) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 104


state 82

    (22) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 105


state 83

    (23) bloqueaux -> estatuto . bloqueaux
    (24) bloqueaux -> estatuto .
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (42) estatuto -> . asignacion
    (43) estatuto -> . escritura
    (44) estatuto -> . llamada
    (45) estatuto -> . condicion
    (46) estatuto -> . whileloop
    (47) estatuto -> . forloop
    (48) estatuto -> . lectura
    (49) estatuto -> . estReturn
    (50) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (51) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (52) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (58) escritura -> . write PARIZQ escaux PARDER PYC
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER
    (73) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (76) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (79) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (83) lectura -> . read PARIZQ ID checkID PARDER PYC
    (84) estReturn -> . return PARIZQ retAux PARDER PYC

    LLAVEDER        reduce using rule 24 (bloqueaux -> estatuto .)
    ID              shift and go to state 92
    write           shift and go to state 93
    if              shift and go to state 94
    while           shift and go to state 95
    for             shift and go to state 96
    read            shift and go to state 97
    return          shift and go to state 98

    estatuto                       shift and go to state 83
    bloqueaux                      shift and go to state 106
    asignacion                     shift and go to state 84
    escritura                      shift and go to state 85
    llamada                        shift and go to state 86
    condicion                      shift and go to state 87
    whileloop                      shift and go to state 88
    forloop                        shift and go to state 89
    lectura                        shift and go to state 90
    estReturn                      shift and go to state 91

state 84

    (42) estatuto -> asignacion .

    ID              reduce using rule 42 (estatuto -> asignacion .)
    write           reduce using rule 42 (estatuto -> asignacion .)
    if              reduce using rule 42 (estatuto -> asignacion .)
    while           reduce using rule 42 (estatuto -> asignacion .)
    for             reduce using rule 42 (estatuto -> asignacion .)
    read            reduce using rule 42 (estatuto -> asignacion .)
    return          reduce using rule 42 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 42 (estatuto -> asignacion .)


state 85

    (43) estatuto -> escritura .

    ID              reduce using rule 43 (estatuto -> escritura .)
    write           reduce using rule 43 (estatuto -> escritura .)
    if              reduce using rule 43 (estatuto -> escritura .)
    while           reduce using rule 43 (estatuto -> escritura .)
    for             reduce using rule 43 (estatuto -> escritura .)
    read            reduce using rule 43 (estatuto -> escritura .)
    return          reduce using rule 43 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 43 (estatuto -> escritura .)


state 86

    (44) estatuto -> llamada .

    ID              reduce using rule 44 (estatuto -> llamada .)
    write           reduce using rule 44 (estatuto -> llamada .)
    if              reduce using rule 44 (estatuto -> llamada .)
    while           reduce using rule 44 (estatuto -> llamada .)
    for             reduce using rule 44 (estatuto -> llamada .)
    read            reduce using rule 44 (estatuto -> llamada .)
    return          reduce using rule 44 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 44 (estatuto -> llamada .)


state 87

    (45) estatuto -> condicion .

    ID              reduce using rule 45 (estatuto -> condicion .)
    write           reduce using rule 45 (estatuto -> condicion .)
    if              reduce using rule 45 (estatuto -> condicion .)
    while           reduce using rule 45 (estatuto -> condicion .)
    for             reduce using rule 45 (estatuto -> condicion .)
    read            reduce using rule 45 (estatuto -> condicion .)
    return          reduce using rule 45 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 45 (estatuto -> condicion .)


state 88

    (46) estatuto -> whileloop .

    ID              reduce using rule 46 (estatuto -> whileloop .)
    write           reduce using rule 46 (estatuto -> whileloop .)
    if              reduce using rule 46 (estatuto -> whileloop .)
    while           reduce using rule 46 (estatuto -> whileloop .)
    for             reduce using rule 46 (estatuto -> whileloop .)
    read            reduce using rule 46 (estatuto -> whileloop .)
    return          reduce using rule 46 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 46 (estatuto -> whileloop .)


state 89

    (47) estatuto -> forloop .

    ID              reduce using rule 47 (estatuto -> forloop .)
    write           reduce using rule 47 (estatuto -> forloop .)
    if              reduce using rule 47 (estatuto -> forloop .)
    while           reduce using rule 47 (estatuto -> forloop .)
    for             reduce using rule 47 (estatuto -> forloop .)
    read            reduce using rule 47 (estatuto -> forloop .)
    return          reduce using rule 47 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 47 (estatuto -> forloop .)


state 90

    (48) estatuto -> lectura .

    ID              reduce using rule 48 (estatuto -> lectura .)
    write           reduce using rule 48 (estatuto -> lectura .)
    if              reduce using rule 48 (estatuto -> lectura .)
    while           reduce using rule 48 (estatuto -> lectura .)
    for             reduce using rule 48 (estatuto -> lectura .)
    read            reduce using rule 48 (estatuto -> lectura .)
    return          reduce using rule 48 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 48 (estatuto -> lectura .)


state 91

    (49) estatuto -> estReturn .

    ID              reduce using rule 49 (estatuto -> estReturn .)
    write           reduce using rule 49 (estatuto -> estReturn .)
    if              reduce using rule 49 (estatuto -> estReturn .)
    while           reduce using rule 49 (estatuto -> estReturn .)
    for             reduce using rule 49 (estatuto -> estReturn .)
    read            reduce using rule 49 (estatuto -> estReturn .)
    return          reduce using rule 49 (estatuto -> estReturn .)
    LLAVEDER        reduce using rule 49 (estatuto -> estReturn .)


state 92

    (50) asignacion -> ID . checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (51) asignacion -> ID . checkID asignaux ASIGNA llamada_esp PYC
    (52) asignacion -> ID . checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (66) llamada -> ID . PARIZQ expresion llamaux PARDER
    (67) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> ID . PARIZQ PARDER
    (53) checkID -> .

    PARIZQ          shift and go to state 108
    CORIZQ          reduce using rule 53 (checkID -> .)
    ASIGNA          reduce using rule 53 (checkID -> .)

    checkID                        shift and go to state 107

state 93

    (58) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 109


state 94

    (73) condicion -> if . PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf

    PARIZQ          shift and go to state 110


state 95

    (76) whileloop -> while . migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (77) migaja -> .

    PARIZQ          reduce using rule 77 (migaja -> .)

    migaja                         shift and go to state 111

state 96

    (79) forloop -> for . PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    PARIZQ          shift and go to state 112


state 97

    (83) lectura -> read . PARIZQ ID checkID PARDER PYC

    PARIZQ          shift and go to state 113


state 98

    (84) estReturn -> return . PARIZQ retAux PARDER PYC

    PARIZQ          shift and go to state 114


state 99

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 115

state 100

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 116

state 101

    (37) funcaux -> type ID agregaVar . masParam
    (40) masParam -> . funcaux
    (41) masParam -> . empty
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (135) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 135 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 71
    masParam                       shift and go to state 117
    funcaux                        shift and go to state 118
    empty                          shift and go to state 119

state 102

    (38) funcaux -> type ID CORIZQ . CTEINT CORDER agregaVar masParam
    (39) funcaux -> type ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar masParam

    CTEINT          shift and go to state 120


state 103

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (135) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 135 (empty -> .)

    nextvar                        shift and go to state 121
    empty                          shift and go to state 59

state 104

    (21) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    return          reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 105

    (22) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    return          reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 106

    (23) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 23 (bloqueaux -> estatuto bloqueaux .)


state 107

    (50) asignacion -> ID checkID . asignaux ASIGNA expresion cuadAsignacion PYC
    (51) asignacion -> ID checkID . asignaux ASIGNA llamada_esp PYC
    (52) asignacion -> ID checkID . asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (55) asignaux -> . CORIZQ expresion CORDER
    (56) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (57) asignaux -> . empty
    (135) empty -> .

    CORIZQ          shift and go to state 123
    ASIGNA          reduce using rule 135 (empty -> .)

    asignaux                       shift and go to state 122
    empty                          shift and go to state 124

state 108

    (66) llamada -> ID PARIZQ . expresion llamaux PARDER
    (67) llamada -> ID PARIZQ . llamada_esp llamaux PARDER
    (68) llamada -> ID PARIZQ . PARDER
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARDER          shift and go to state 128
    ID              shift and go to state 125
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

    expresion                      shift and go to state 127
    llamada_esp                    shift and go to state 129
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada                        shift and go to state 139

state 109

    (58) escritura -> write PARIZQ . escaux PARDER PYC
    (59) escaux -> . expresion cuadEsc nextexp
    (60) escaux -> . CTESTRING cuadEsc nextexp
    (61) escaux -> . llamada_esp nextexp
    (62) escaux -> . llamada nextexp
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT

    CTESTRING       shift and go to state 142
    ID              shift and go to state 145
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

    escaux                         shift and go to state 140
    expresion                      shift and go to state 141
    llamada_esp                    shift and go to state 143
    llamada                        shift and go to state 144
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134

state 110

    (73) condicion -> if PARIZQ . expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 146
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 111

    (76) whileloop -> while migaja . PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile

    PARIZQ          shift and go to state 149


state 112

    (79) forloop -> for PARIZQ . expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 150
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 113

    (83) lectura -> read PARIZQ . ID checkID PARDER PYC

    ID              shift and go to state 151


state 114

    (84) estReturn -> return PARIZQ . retAux PARDER PYC
    (85) retAux -> . expresion
    (86) retAux -> . CTESTRING
    (87) retAux -> . true
    (88) retAux -> . false
    (89) retAux -> . llamada
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    CTESTRING       shift and go to state 154
    true            shift and go to state 155
    false           shift and go to state 156
    ID              shift and go to state 158
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136

    retAux                         shift and go to state 152
    expresion                      shift and go to state 153
    llamada                        shift and go to state 157
    andExpresion                   shift and go to state 130
    llamada_esp                    shift and go to state 148
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134

state 115

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .

    int             reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    float           reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    string          reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    bool            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    void            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    func            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)


state 116

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .

    int             reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    float           reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    string          reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    bool            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    void            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    func            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)


state 117

    (37) funcaux -> type ID agregaVar masParam .

    PARDER          reduce using rule 37 (funcaux -> type ID agregaVar masParam .)


state 118

    (40) masParam -> funcaux .

    PARDER          reduce using rule 40 (masParam -> funcaux .)


state 119

    (41) masParam -> empty .

    PARDER          reduce using rule 41 (masParam -> empty .)


state 120

    (38) funcaux -> type ID CORIZQ CTEINT . CORDER agregaVar masParam
    (39) funcaux -> type ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar masParam

    CORDER          shift and go to state 159
    COMA            shift and go to state 160


state 121

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 14 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 122

    (50) asignacion -> ID checkID asignaux . ASIGNA expresion cuadAsignacion PYC
    (51) asignacion -> ID checkID asignaux . ASIGNA llamada_esp PYC
    (52) asignacion -> ID checkID asignaux . ASIGNA CTESTRING cuadAsignacion PYC

    ASIGNA          shift and go to state 161


state 123

    (55) asignaux -> CORIZQ . expresion CORDER
    (56) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 162
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 124

    (57) asignaux -> empty .

    ASIGNA          reduce using rule 57 (asignaux -> empty .)


state 125

    (118) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (115) factor -> ID . checkID pushOT
    (66) llamada -> ID . PARIZQ expresion llamaux PARDER
    (67) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> ID . PARIZQ PARDER
    (53) checkID -> .

  ! shift/reduce conflict for PARIZQ resolved as shift
    PUNTO           shift and go to state 163
    PARIZQ          shift and go to state 108
    MULT            reduce using rule 53 (checkID -> .)
    DIV             reduce using rule 53 (checkID -> .)
    MAS             reduce using rule 53 (checkID -> .)
    MENOS           reduce using rule 53 (checkID -> .)
    MAYORQUE        reduce using rule 53 (checkID -> .)
    MENORQUE        reduce using rule 53 (checkID -> .)
    MAYORIGUAL      reduce using rule 53 (checkID -> .)
    MENORIGUAL      reduce using rule 53 (checkID -> .)
    EQUALS          reduce using rule 53 (checkID -> .)
    DIFERENTE       reduce using rule 53 (checkID -> .)
    AND             reduce using rule 53 (checkID -> .)
    OR              reduce using rule 53 (checkID -> .)
    ID              reduce using rule 53 (checkID -> .)
    CTEINT          reduce using rule 53 (checkID -> .)
    CTEFLOAT        reduce using rule 53 (checkID -> .)
    true            reduce using rule 53 (checkID -> .)
    false           reduce using rule 53 (checkID -> .)
    COMA            reduce using rule 53 (checkID -> .)
    PARDER          reduce using rule 53 (checkID -> .)
    PYC             reduce using rule 53 (checkID -> .)

  ! PARIZQ          [ reduce using rule 53 (checkID -> .) ]

    checkID                        shift and go to state 164

state 126

    (110) factor -> PARIZQ . expresion PARDER
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 165
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 127

    (66) llamada -> ID PARIZQ expresion . llamaux PARDER
    (69) llamaux -> . expresion nextparametro
    (70) llamaux -> . llamada_esp nextparametro
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    ID              shift and go to state 125
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

    expresion                      shift and go to state 166
    llamaux                        shift and go to state 167
    llamada_esp                    shift and go to state 168
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada                        shift and go to state 139

state 128

    (68) llamada -> ID PARIZQ PARDER .

    ID              reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    write           reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    if              reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    while           reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    for             reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    read            reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    return          reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MULT            reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    DIV             reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MAS             reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    EQUALS          reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    DIFERENTE       reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    AND             reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    OR              reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    PARIZQ          reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    CTEINT          reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    true            reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    false           reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    COMA            reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 68 (llamada -> ID PARIZQ PARDER .)
    PYC             reduce using rule 68 (llamada -> ID PARIZQ PARDER .)


state 129

    (67) llamada -> ID PARIZQ llamada_esp . llamaux PARDER
    (116) factor -> llamada_esp . pushOT
    (69) llamaux -> . expresion nextparametro
    (70) llamaux -> . llamada_esp nextparametro
    (128) pushOT -> .
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for false resolved as shift
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    ID              shift and go to state 125
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

  ! ID              [ reduce using rule 128 (pushOT -> .) ]
  ! PARIZQ          [ reduce using rule 128 (pushOT -> .) ]
  ! CTEINT          [ reduce using rule 128 (pushOT -> .) ]
  ! CTEFLOAT        [ reduce using rule 128 (pushOT -> .) ]
  ! true            [ reduce using rule 128 (pushOT -> .) ]
  ! false           [ reduce using rule 128 (pushOT -> .) ]

    llamada_esp                    shift and go to state 168
    llamaux                        shift and go to state 169
    pushOT                         shift and go to state 170
    expresion                      shift and go to state 166
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada                        shift and go to state 139

state 130

    (90) expresion -> andExpresion .
    (91) expresion -> andExpresion . OR pushOper andExpresion

    ID              reduce using rule 90 (expresion -> andExpresion .)
    PARIZQ          reduce using rule 90 (expresion -> andExpresion .)
    CTEINT          reduce using rule 90 (expresion -> andExpresion .)
    CTEFLOAT        reduce using rule 90 (expresion -> andExpresion .)
    true            reduce using rule 90 (expresion -> andExpresion .)
    false           reduce using rule 90 (expresion -> andExpresion .)
    COMA            reduce using rule 90 (expresion -> andExpresion .)
    PARDER          reduce using rule 90 (expresion -> andExpresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> andExpresion .)
    CORDER          reduce using rule 90 (expresion -> andExpresion .)
    PYC             reduce using rule 90 (expresion -> andExpresion .)
    OR              shift and go to state 171


state 131

    (92) andExpresion -> relopExpresion .
    (93) andExpresion -> relopExpresion . AND pushOper relopExpresion

    OR              reduce using rule 92 (andExpresion -> relopExpresion .)
    ID              reduce using rule 92 (andExpresion -> relopExpresion .)
    PARIZQ          reduce using rule 92 (andExpresion -> relopExpresion .)
    CTEINT          reduce using rule 92 (andExpresion -> relopExpresion .)
    CTEFLOAT        reduce using rule 92 (andExpresion -> relopExpresion .)
    true            reduce using rule 92 (andExpresion -> relopExpresion .)
    false           reduce using rule 92 (andExpresion -> relopExpresion .)
    COMA            reduce using rule 92 (andExpresion -> relopExpresion .)
    PARDER          reduce using rule 92 (andExpresion -> relopExpresion .)
    DOSPUNTOS       reduce using rule 92 (andExpresion -> relopExpresion .)
    CORDER          reduce using rule 92 (andExpresion -> relopExpresion .)
    PYC             reduce using rule 92 (andExpresion -> relopExpresion .)
    AND             shift and go to state 172


state 132

    (94) relopExpresion -> aritExpresion . cuadArit
    (95) relopExpresion -> aritExpresion . cuadArit relopAux aritExpresion cuadArit
    (131) cuadArit -> .

    MAYORQUE        reduce using rule 131 (cuadArit -> .)
    MENORQUE        reduce using rule 131 (cuadArit -> .)
    MAYORIGUAL      reduce using rule 131 (cuadArit -> .)
    MENORIGUAL      reduce using rule 131 (cuadArit -> .)
    EQUALS          reduce using rule 131 (cuadArit -> .)
    DIFERENTE       reduce using rule 131 (cuadArit -> .)
    AND             reduce using rule 131 (cuadArit -> .)
    OR              reduce using rule 131 (cuadArit -> .)
    ID              reduce using rule 131 (cuadArit -> .)
    PARIZQ          reduce using rule 131 (cuadArit -> .)
    CTEINT          reduce using rule 131 (cuadArit -> .)
    CTEFLOAT        reduce using rule 131 (cuadArit -> .)
    true            reduce using rule 131 (cuadArit -> .)
    false           reduce using rule 131 (cuadArit -> .)
    COMA            reduce using rule 131 (cuadArit -> .)
    PARDER          reduce using rule 131 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 131 (cuadArit -> .)
    CORDER          reduce using rule 131 (cuadArit -> .)
    PYC             reduce using rule 131 (cuadArit -> .)

    cuadArit                       shift and go to state 173

state 133

    (102) aritExpresion -> term . cuadTerm
    (103) aritExpresion -> term . cuadTerm aritAux term cuadTerm
    (129) cuadTerm -> .

    MAS             reduce using rule 129 (cuadTerm -> .)
    MENOS           reduce using rule 129 (cuadTerm -> .)
    MAYORQUE        reduce using rule 129 (cuadTerm -> .)
    MENORQUE        reduce using rule 129 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 129 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 129 (cuadTerm -> .)
    EQUALS          reduce using rule 129 (cuadTerm -> .)
    DIFERENTE       reduce using rule 129 (cuadTerm -> .)
    AND             reduce using rule 129 (cuadTerm -> .)
    OR              reduce using rule 129 (cuadTerm -> .)
    ID              reduce using rule 129 (cuadTerm -> .)
    PARIZQ          reduce using rule 129 (cuadTerm -> .)
    CTEINT          reduce using rule 129 (cuadTerm -> .)
    CTEFLOAT        reduce using rule 129 (cuadTerm -> .)
    true            reduce using rule 129 (cuadTerm -> .)
    false           reduce using rule 129 (cuadTerm -> .)
    COMA            reduce using rule 129 (cuadTerm -> .)
    PARDER          reduce using rule 129 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 129 (cuadTerm -> .)
    CORDER          reduce using rule 129 (cuadTerm -> .)
    PYC             reduce using rule 129 (cuadTerm -> .)

    cuadTerm                       shift and go to state 174

state 134

    (106) term -> factor .
    (107) term -> factor . cuadFactor termAux factor cuadFactor
    (130) cuadFactor -> .

    MAS             reduce using rule 106 (term -> factor .)
    MENOS           reduce using rule 106 (term -> factor .)
    MAYORQUE        reduce using rule 106 (term -> factor .)
    MENORQUE        reduce using rule 106 (term -> factor .)
    MAYORIGUAL      reduce using rule 106 (term -> factor .)
    MENORIGUAL      reduce using rule 106 (term -> factor .)
    EQUALS          reduce using rule 106 (term -> factor .)
    DIFERENTE       reduce using rule 106 (term -> factor .)
    AND             reduce using rule 106 (term -> factor .)
    OR              reduce using rule 106 (term -> factor .)
    ID              reduce using rule 106 (term -> factor .)
    PARIZQ          reduce using rule 106 (term -> factor .)
    CTEINT          reduce using rule 106 (term -> factor .)
    CTEFLOAT        reduce using rule 106 (term -> factor .)
    true            reduce using rule 106 (term -> factor .)
    false           reduce using rule 106 (term -> factor .)
    COMA            reduce using rule 106 (term -> factor .)
    PARDER          reduce using rule 106 (term -> factor .)
    DOSPUNTOS       reduce using rule 106 (term -> factor .)
    CORDER          reduce using rule 106 (term -> factor .)
    PYC             reduce using rule 106 (term -> factor .)
    MULT            reduce using rule 130 (cuadFactor -> .)
    DIV             reduce using rule 130 (cuadFactor -> .)

    cuadFactor                     shift and go to state 175

state 135

    (111) factor -> CTEINT . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 176

state 136

    (112) factor -> CTEFLOAT . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 177

state 137

    (113) factor -> true . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 178

state 138

    (114) factor -> false . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 179

state 139

    (117) factor -> llamada . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 180

state 140

    (58) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 181


state 141

    (59) escaux -> expresion . cuadEsc nextexp
    (63) cuadEsc -> .

    COMA            reduce using rule 63 (cuadEsc -> .)
    PARDER          reduce using rule 63 (cuadEsc -> .)

    cuadEsc                        shift and go to state 182

state 142

    (60) escaux -> CTESTRING . cuadEsc nextexp
    (63) cuadEsc -> .

    COMA            reduce using rule 63 (cuadEsc -> .)
    PARDER          reduce using rule 63 (cuadEsc -> .)

    cuadEsc                        shift and go to state 183

state 143

    (61) escaux -> llamada_esp . nextexp
    (116) factor -> llamada_esp . pushOT
    (64) nextexp -> . COMA escaux
    (65) nextexp -> . empty
    (128) pushOT -> .
    (135) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 128 (pushOT -> .)
    COMA            shift and go to state 185
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)

  ! COMA            [ reduce using rule 128 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 135 (empty -> .) ]

    nextexp                        shift and go to state 184
    pushOT                         shift and go to state 170
    empty                          shift and go to state 186

state 144

    (62) escaux -> llamada . nextexp
    (117) factor -> llamada . pushOT
    (64) nextexp -> . COMA escaux
    (65) nextexp -> . empty
    (128) pushOT -> .
    (135) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 128 (pushOT -> .)
    COMA            shift and go to state 185
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)

  ! COMA            [ reduce using rule 128 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 135 (empty -> .) ]

    nextexp                        shift and go to state 187
    pushOT                         shift and go to state 180
    empty                          shift and go to state 186

state 145

    (118) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (66) llamada -> ID . PARIZQ expresion llamaux PARDER
    (67) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> ID . PARIZQ PARDER
    (115) factor -> ID . checkID pushOT
    (53) checkID -> .

    PUNTO           shift and go to state 163
    PARIZQ          shift and go to state 108
    MULT            reduce using rule 53 (checkID -> .)
    DIV             reduce using rule 53 (checkID -> .)
    MAS             reduce using rule 53 (checkID -> .)
    MENOS           reduce using rule 53 (checkID -> .)
    MAYORQUE        reduce using rule 53 (checkID -> .)
    MENORQUE        reduce using rule 53 (checkID -> .)
    MAYORIGUAL      reduce using rule 53 (checkID -> .)
    MENORIGUAL      reduce using rule 53 (checkID -> .)
    EQUALS          reduce using rule 53 (checkID -> .)
    DIFERENTE       reduce using rule 53 (checkID -> .)
    AND             reduce using rule 53 (checkID -> .)
    OR              reduce using rule 53 (checkID -> .)
    COMA            reduce using rule 53 (checkID -> .)
    PARDER          reduce using rule 53 (checkID -> .)

    checkID                        shift and go to state 164

state 146

    (73) condicion -> if PARIZQ expresion . PARDER cuadGotof bloque condicionAux cuadFinIf

    PARDER          shift and go to state 188


state 147

    (115) factor -> ID . checkID pushOT
    (118) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (66) llamada -> ID . PARIZQ expresion llamaux PARDER
    (67) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> ID . PARIZQ PARDER
    (53) checkID -> .

  ! shift/reduce conflict for PARIZQ resolved as shift
    PUNTO           shift and go to state 163
    PARIZQ          shift and go to state 108
    MULT            reduce using rule 53 (checkID -> .)
    DIV             reduce using rule 53 (checkID -> .)
    MAS             reduce using rule 53 (checkID -> .)
    MENOS           reduce using rule 53 (checkID -> .)
    MAYORQUE        reduce using rule 53 (checkID -> .)
    MENORQUE        reduce using rule 53 (checkID -> .)
    MAYORIGUAL      reduce using rule 53 (checkID -> .)
    MENORIGUAL      reduce using rule 53 (checkID -> .)
    EQUALS          reduce using rule 53 (checkID -> .)
    DIFERENTE       reduce using rule 53 (checkID -> .)
    AND             reduce using rule 53 (checkID -> .)
    OR              reduce using rule 53 (checkID -> .)
    PARDER          reduce using rule 53 (checkID -> .)
    DOSPUNTOS       reduce using rule 53 (checkID -> .)
    CORDER          reduce using rule 53 (checkID -> .)
    COMA            reduce using rule 53 (checkID -> .)
    ID              reduce using rule 53 (checkID -> .)
    CTEINT          reduce using rule 53 (checkID -> .)
    CTEFLOAT        reduce using rule 53 (checkID -> .)
    true            reduce using rule 53 (checkID -> .)
    false           reduce using rule 53 (checkID -> .)
    PYC             reduce using rule 53 (checkID -> .)

  ! PARIZQ          [ reduce using rule 53 (checkID -> .) ]

    checkID                        shift and go to state 164

state 148

    (116) factor -> llamada_esp . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 170

state 149

    (76) whileloop -> while migaja PARIZQ . expresion PARDER cuadGotof bloque cuadFinWhile
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 189
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 150

    (79) forloop -> for PARIZQ expresion . checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (80) checkExpFor -> .

    DOSPUNTOS       reduce using rule 80 (checkExpFor -> .)

    checkExpFor                    shift and go to state 190

state 151

    (83) lectura -> read PARIZQ ID . checkID PARDER PYC
    (53) checkID -> .

    PARDER          reduce using rule 53 (checkID -> .)

    checkID                        shift and go to state 191

state 152

    (84) estReturn -> return PARIZQ retAux . PARDER PYC

    PARDER          shift and go to state 192


state 153

    (85) retAux -> expresion .

    PARDER          reduce using rule 85 (retAux -> expresion .)


state 154

    (86) retAux -> CTESTRING .

    PARDER          reduce using rule 86 (retAux -> CTESTRING .)


state 155

    (87) retAux -> true .
    (113) factor -> true . pushOT
    (128) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 87 (retAux -> true .)
    PARDER          reduce using rule 87 (retAux -> true .)
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)

  ! PARDER          [ reduce using rule 128 (pushOT -> .) ]

    pushOT                         shift and go to state 178

state 156

    (88) retAux -> false .
    (114) factor -> false . pushOT
    (128) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 88 (retAux -> false .)
    PARDER          reduce using rule 88 (retAux -> false .)
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)

  ! PARDER          [ reduce using rule 128 (pushOT -> .) ]

    pushOT                         shift and go to state 179

state 157

    (89) retAux -> llamada .
    (117) factor -> llamada . pushOT
    (128) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 89 (retAux -> llamada .)
    PARDER          reduce using rule 89 (retAux -> llamada .)
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)

  ! PARDER          [ reduce using rule 128 (pushOT -> .) ]

    pushOT                         shift and go to state 180

state 158

    (66) llamada -> ID . PARIZQ expresion llamaux PARDER
    (67) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> ID . PARIZQ PARDER
    (115) factor -> ID . checkID pushOT
    (118) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (53) checkID -> .

    PARIZQ          shift and go to state 108
    PUNTO           shift and go to state 163
    MULT            reduce using rule 53 (checkID -> .)
    DIV             reduce using rule 53 (checkID -> .)
    MAS             reduce using rule 53 (checkID -> .)
    MENOS           reduce using rule 53 (checkID -> .)
    MAYORQUE        reduce using rule 53 (checkID -> .)
    MENORQUE        reduce using rule 53 (checkID -> .)
    MAYORIGUAL      reduce using rule 53 (checkID -> .)
    MENORIGUAL      reduce using rule 53 (checkID -> .)
    EQUALS          reduce using rule 53 (checkID -> .)
    DIFERENTE       reduce using rule 53 (checkID -> .)
    AND             reduce using rule 53 (checkID -> .)
    OR              reduce using rule 53 (checkID -> .)
    PARDER          reduce using rule 53 (checkID -> .)

    checkID                        shift and go to state 164

state 159

    (38) funcaux -> type ID CORIZQ CTEINT CORDER . agregaVar masParam
    (17) agregaVar -> .

    int             reduce using rule 17 (agregaVar -> .)
    float           reduce using rule 17 (agregaVar -> .)
    string          reduce using rule 17 (agregaVar -> .)
    bool            reduce using rule 17 (agregaVar -> .)
    PARDER          reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 193

state 160

    (39) funcaux -> type ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar masParam

    CTEINT          shift and go to state 194


state 161

    (50) asignacion -> ID checkID asignaux ASIGNA . expresion cuadAsignacion PYC
    (51) asignacion -> ID checkID asignaux ASIGNA . llamada_esp PYC
    (52) asignacion -> ID checkID asignaux ASIGNA . CTESTRING cuadAsignacion PYC
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    CTESTRING       shift and go to state 197
    ID              shift and go to state 125
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

    expresion                      shift and go to state 195
    llamada_esp                    shift and go to state 196
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada                        shift and go to state 139

state 162

    (55) asignaux -> CORIZQ expresion . CORDER
    (56) asignaux -> CORIZQ expresion . COMA expresion CORDER

    CORDER          shift and go to state 198
    COMA            shift and go to state 199


state 163

    (118) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (119) especiales -> . length
    (120) especiales -> . max
    (121) especiales -> . min
    (122) especiales -> . avg
    (123) especiales -> . median
    (124) especiales -> . mode
    (125) especiales -> . variance
    (126) especiales -> . stdev

    length          shift and go to state 201
    max             shift and go to state 202
    min             shift and go to state 203
    avg             shift and go to state 204
    median          shift and go to state 205
    mode            shift and go to state 206
    variance        shift and go to state 207
    stdev           shift and go to state 208

    especiales                     shift and go to state 200

state 164

    (115) factor -> ID checkID . pushOT
    (128) pushOT -> .

    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    ID              reduce using rule 128 (pushOT -> .)
    PARIZQ          reduce using rule 128 (pushOT -> .)
    CTEINT          reduce using rule 128 (pushOT -> .)
    CTEFLOAT        reduce using rule 128 (pushOT -> .)
    true            reduce using rule 128 (pushOT -> .)
    false           reduce using rule 128 (pushOT -> .)
    COMA            reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)
    DOSPUNTOS       reduce using rule 128 (pushOT -> .)
    CORDER          reduce using rule 128 (pushOT -> .)
    PYC             reduce using rule 128 (pushOT -> .)

    pushOT                         shift and go to state 209

state 165

    (110) factor -> PARIZQ expresion . PARDER

    PARDER          shift and go to state 210


state 166

    (69) llamaux -> expresion . nextparametro
    (71) nextparametro -> . COMA llamaux
    (72) nextparametro -> . empty
    (135) empty -> .

    COMA            shift and go to state 212
    PARDER          reduce using rule 135 (empty -> .)

    nextparametro                  shift and go to state 211
    empty                          shift and go to state 213

state 167

    (66) llamada -> ID PARIZQ expresion llamaux . PARDER

    PARDER          shift and go to state 214


state 168

    (70) llamaux -> llamada_esp . nextparametro
    (116) factor -> llamada_esp . pushOT
    (71) nextparametro -> . COMA llamaux
    (72) nextparametro -> . empty
    (128) pushOT -> .
    (135) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 128 (pushOT -> .)
    COMA            shift and go to state 212
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)
    PARDER          reduce using rule 128 (pushOT -> .)

  ! COMA            [ reduce using rule 128 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 135 (empty -> .) ]

    nextparametro                  shift and go to state 215
    pushOT                         shift and go to state 170
    empty                          shift and go to state 213

state 169

    (67) llamada -> ID PARIZQ llamada_esp llamaux . PARDER

    PARDER          shift and go to state 216


state 170

    (116) factor -> llamada_esp pushOT .

    MULT            reduce using rule 116 (factor -> llamada_esp pushOT .)
    DIV             reduce using rule 116 (factor -> llamada_esp pushOT .)
    MAS             reduce using rule 116 (factor -> llamada_esp pushOT .)
    MENOS           reduce using rule 116 (factor -> llamada_esp pushOT .)
    MAYORQUE        reduce using rule 116 (factor -> llamada_esp pushOT .)
    MENORQUE        reduce using rule 116 (factor -> llamada_esp pushOT .)
    MAYORIGUAL      reduce using rule 116 (factor -> llamada_esp pushOT .)
    MENORIGUAL      reduce using rule 116 (factor -> llamada_esp pushOT .)
    EQUALS          reduce using rule 116 (factor -> llamada_esp pushOT .)
    DIFERENTE       reduce using rule 116 (factor -> llamada_esp pushOT .)
    AND             reduce using rule 116 (factor -> llamada_esp pushOT .)
    OR              reduce using rule 116 (factor -> llamada_esp pushOT .)
    ID              reduce using rule 116 (factor -> llamada_esp pushOT .)
    PARIZQ          reduce using rule 116 (factor -> llamada_esp pushOT .)
    CTEINT          reduce using rule 116 (factor -> llamada_esp pushOT .)
    CTEFLOAT        reduce using rule 116 (factor -> llamada_esp pushOT .)
    true            reduce using rule 116 (factor -> llamada_esp pushOT .)
    false           reduce using rule 116 (factor -> llamada_esp pushOT .)
    COMA            reduce using rule 116 (factor -> llamada_esp pushOT .)
    PARDER          reduce using rule 116 (factor -> llamada_esp pushOT .)
    DOSPUNTOS       reduce using rule 116 (factor -> llamada_esp pushOT .)
    CORDER          reduce using rule 116 (factor -> llamada_esp pushOT .)
    PYC             reduce using rule 116 (factor -> llamada_esp pushOT .)


state 171

    (91) expresion -> andExpresion OR . pushOper andExpresion
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 217

state 172

    (93) andExpresion -> relopExpresion AND . pushOper relopExpresion
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 218

state 173

    (94) relopExpresion -> aritExpresion cuadArit .
    (95) relopExpresion -> aritExpresion cuadArit . relopAux aritExpresion cuadArit
    (96) relopAux -> . MAYORQUE pushOper
    (97) relopAux -> . MENORQUE pushOper
    (98) relopAux -> . MAYORIGUAL pushOper
    (99) relopAux -> . MENORIGUAL pushOper
    (100) relopAux -> . EQUALS pushOper
    (101) relopAux -> . DIFERENTE pushOper

    AND             reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    OR              reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    ID              reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    PARIZQ          reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    CTEINT          reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    CTEFLOAT        reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    true            reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    false           reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    COMA            reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    PARDER          reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    CORDER          reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    PYC             reduce using rule 94 (relopExpresion -> aritExpresion cuadArit .)
    MAYORQUE        shift and go to state 220
    MENORQUE        shift and go to state 221
    MAYORIGUAL      shift and go to state 222
    MENORIGUAL      shift and go to state 223
    EQUALS          shift and go to state 224
    DIFERENTE       shift and go to state 225

    relopAux                       shift and go to state 219

state 174

    (102) aritExpresion -> term cuadTerm .
    (103) aritExpresion -> term cuadTerm . aritAux term cuadTerm
    (104) aritAux -> . MAS pushOper
    (105) aritAux -> . MENOS pushOper

    MAYORQUE        reduce using rule 102 (aritExpresion -> term cuadTerm .)
    MENORQUE        reduce using rule 102 (aritExpresion -> term cuadTerm .)
    MAYORIGUAL      reduce using rule 102 (aritExpresion -> term cuadTerm .)
    MENORIGUAL      reduce using rule 102 (aritExpresion -> term cuadTerm .)
    EQUALS          reduce using rule 102 (aritExpresion -> term cuadTerm .)
    DIFERENTE       reduce using rule 102 (aritExpresion -> term cuadTerm .)
    AND             reduce using rule 102 (aritExpresion -> term cuadTerm .)
    OR              reduce using rule 102 (aritExpresion -> term cuadTerm .)
    ID              reduce using rule 102 (aritExpresion -> term cuadTerm .)
    PARIZQ          reduce using rule 102 (aritExpresion -> term cuadTerm .)
    CTEINT          reduce using rule 102 (aritExpresion -> term cuadTerm .)
    CTEFLOAT        reduce using rule 102 (aritExpresion -> term cuadTerm .)
    true            reduce using rule 102 (aritExpresion -> term cuadTerm .)
    false           reduce using rule 102 (aritExpresion -> term cuadTerm .)
    COMA            reduce using rule 102 (aritExpresion -> term cuadTerm .)
    PARDER          reduce using rule 102 (aritExpresion -> term cuadTerm .)
    DOSPUNTOS       reduce using rule 102 (aritExpresion -> term cuadTerm .)
    CORDER          reduce using rule 102 (aritExpresion -> term cuadTerm .)
    PYC             reduce using rule 102 (aritExpresion -> term cuadTerm .)
    MAS             shift and go to state 227
    MENOS           shift and go to state 228

    aritAux                        shift and go to state 226

state 175

    (107) term -> factor cuadFactor . termAux factor cuadFactor
    (108) termAux -> . MULT pushOper
    (109) termAux -> . DIV pushOper

    MULT            shift and go to state 230
    DIV             shift and go to state 231

    termAux                        shift and go to state 229

state 176

    (111) factor -> CTEINT pushOT .

    MULT            reduce using rule 111 (factor -> CTEINT pushOT .)
    DIV             reduce using rule 111 (factor -> CTEINT pushOT .)
    MAS             reduce using rule 111 (factor -> CTEINT pushOT .)
    MENOS           reduce using rule 111 (factor -> CTEINT pushOT .)
    MAYORQUE        reduce using rule 111 (factor -> CTEINT pushOT .)
    MENORQUE        reduce using rule 111 (factor -> CTEINT pushOT .)
    MAYORIGUAL      reduce using rule 111 (factor -> CTEINT pushOT .)
    MENORIGUAL      reduce using rule 111 (factor -> CTEINT pushOT .)
    EQUALS          reduce using rule 111 (factor -> CTEINT pushOT .)
    DIFERENTE       reduce using rule 111 (factor -> CTEINT pushOT .)
    AND             reduce using rule 111 (factor -> CTEINT pushOT .)
    OR              reduce using rule 111 (factor -> CTEINT pushOT .)
    ID              reduce using rule 111 (factor -> CTEINT pushOT .)
    PARIZQ          reduce using rule 111 (factor -> CTEINT pushOT .)
    CTEINT          reduce using rule 111 (factor -> CTEINT pushOT .)
    CTEFLOAT        reduce using rule 111 (factor -> CTEINT pushOT .)
    true            reduce using rule 111 (factor -> CTEINT pushOT .)
    false           reduce using rule 111 (factor -> CTEINT pushOT .)
    COMA            reduce using rule 111 (factor -> CTEINT pushOT .)
    PARDER          reduce using rule 111 (factor -> CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 111 (factor -> CTEINT pushOT .)
    CORDER          reduce using rule 111 (factor -> CTEINT pushOT .)
    PYC             reduce using rule 111 (factor -> CTEINT pushOT .)


state 177

    (112) factor -> CTEFLOAT pushOT .

    MULT            reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    DIV             reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    MAS             reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    MENOS           reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    MAYORQUE        reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    MENORQUE        reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    MAYORIGUAL      reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    MENORIGUAL      reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    EQUALS          reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    DIFERENTE       reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    AND             reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    OR              reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    ID              reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    PARIZQ          reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    CTEINT          reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    CTEFLOAT        reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    true            reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    false           reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    COMA            reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    PARDER          reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    DOSPUNTOS       reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    CORDER          reduce using rule 112 (factor -> CTEFLOAT pushOT .)
    PYC             reduce using rule 112 (factor -> CTEFLOAT pushOT .)


state 178

    (113) factor -> true pushOT .

    MULT            reduce using rule 113 (factor -> true pushOT .)
    DIV             reduce using rule 113 (factor -> true pushOT .)
    MAS             reduce using rule 113 (factor -> true pushOT .)
    MENOS           reduce using rule 113 (factor -> true pushOT .)
    MAYORQUE        reduce using rule 113 (factor -> true pushOT .)
    MENORQUE        reduce using rule 113 (factor -> true pushOT .)
    MAYORIGUAL      reduce using rule 113 (factor -> true pushOT .)
    MENORIGUAL      reduce using rule 113 (factor -> true pushOT .)
    EQUALS          reduce using rule 113 (factor -> true pushOT .)
    DIFERENTE       reduce using rule 113 (factor -> true pushOT .)
    AND             reduce using rule 113 (factor -> true pushOT .)
    OR              reduce using rule 113 (factor -> true pushOT .)
    ID              reduce using rule 113 (factor -> true pushOT .)
    PARIZQ          reduce using rule 113 (factor -> true pushOT .)
    CTEINT          reduce using rule 113 (factor -> true pushOT .)
    CTEFLOAT        reduce using rule 113 (factor -> true pushOT .)
    true            reduce using rule 113 (factor -> true pushOT .)
    false           reduce using rule 113 (factor -> true pushOT .)
    COMA            reduce using rule 113 (factor -> true pushOT .)
    PARDER          reduce using rule 113 (factor -> true pushOT .)
    DOSPUNTOS       reduce using rule 113 (factor -> true pushOT .)
    CORDER          reduce using rule 113 (factor -> true pushOT .)
    PYC             reduce using rule 113 (factor -> true pushOT .)


state 179

    (114) factor -> false pushOT .

    MULT            reduce using rule 114 (factor -> false pushOT .)
    DIV             reduce using rule 114 (factor -> false pushOT .)
    MAS             reduce using rule 114 (factor -> false pushOT .)
    MENOS           reduce using rule 114 (factor -> false pushOT .)
    MAYORQUE        reduce using rule 114 (factor -> false pushOT .)
    MENORQUE        reduce using rule 114 (factor -> false pushOT .)
    MAYORIGUAL      reduce using rule 114 (factor -> false pushOT .)
    MENORIGUAL      reduce using rule 114 (factor -> false pushOT .)
    EQUALS          reduce using rule 114 (factor -> false pushOT .)
    DIFERENTE       reduce using rule 114 (factor -> false pushOT .)
    AND             reduce using rule 114 (factor -> false pushOT .)
    OR              reduce using rule 114 (factor -> false pushOT .)
    ID              reduce using rule 114 (factor -> false pushOT .)
    PARIZQ          reduce using rule 114 (factor -> false pushOT .)
    CTEINT          reduce using rule 114 (factor -> false pushOT .)
    CTEFLOAT        reduce using rule 114 (factor -> false pushOT .)
    true            reduce using rule 114 (factor -> false pushOT .)
    false           reduce using rule 114 (factor -> false pushOT .)
    COMA            reduce using rule 114 (factor -> false pushOT .)
    PARDER          reduce using rule 114 (factor -> false pushOT .)
    DOSPUNTOS       reduce using rule 114 (factor -> false pushOT .)
    CORDER          reduce using rule 114 (factor -> false pushOT .)
    PYC             reduce using rule 114 (factor -> false pushOT .)


state 180

    (117) factor -> llamada pushOT .

    MULT            reduce using rule 117 (factor -> llamada pushOT .)
    DIV             reduce using rule 117 (factor -> llamada pushOT .)
    MAS             reduce using rule 117 (factor -> llamada pushOT .)
    MENOS           reduce using rule 117 (factor -> llamada pushOT .)
    MAYORQUE        reduce using rule 117 (factor -> llamada pushOT .)
    MENORQUE        reduce using rule 117 (factor -> llamada pushOT .)
    MAYORIGUAL      reduce using rule 117 (factor -> llamada pushOT .)
    MENORIGUAL      reduce using rule 117 (factor -> llamada pushOT .)
    EQUALS          reduce using rule 117 (factor -> llamada pushOT .)
    DIFERENTE       reduce using rule 117 (factor -> llamada pushOT .)
    AND             reduce using rule 117 (factor -> llamada pushOT .)
    OR              reduce using rule 117 (factor -> llamada pushOT .)
    ID              reduce using rule 117 (factor -> llamada pushOT .)
    PARIZQ          reduce using rule 117 (factor -> llamada pushOT .)
    CTEINT          reduce using rule 117 (factor -> llamada pushOT .)
    CTEFLOAT        reduce using rule 117 (factor -> llamada pushOT .)
    true            reduce using rule 117 (factor -> llamada pushOT .)
    false           reduce using rule 117 (factor -> llamada pushOT .)
    COMA            reduce using rule 117 (factor -> llamada pushOT .)
    PARDER          reduce using rule 117 (factor -> llamada pushOT .)
    DOSPUNTOS       reduce using rule 117 (factor -> llamada pushOT .)
    CORDER          reduce using rule 117 (factor -> llamada pushOT .)
    PYC             reduce using rule 117 (factor -> llamada pushOT .)


state 181

    (58) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 232


state 182

    (59) escaux -> expresion cuadEsc . nextexp
    (64) nextexp -> . COMA escaux
    (65) nextexp -> . empty
    (135) empty -> .

    COMA            shift and go to state 185
    PARDER          reduce using rule 135 (empty -> .)

    nextexp                        shift and go to state 233
    empty                          shift and go to state 186

state 183

    (60) escaux -> CTESTRING cuadEsc . nextexp
    (64) nextexp -> . COMA escaux
    (65) nextexp -> . empty
    (135) empty -> .

    COMA            shift and go to state 185
    PARDER          reduce using rule 135 (empty -> .)

    nextexp                        shift and go to state 234
    empty                          shift and go to state 186

state 184

    (61) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 61 (escaux -> llamada_esp nextexp .)


state 185

    (64) nextexp -> COMA . escaux
    (59) escaux -> . expresion cuadEsc nextexp
    (60) escaux -> . CTESTRING cuadEsc nextexp
    (61) escaux -> . llamada_esp nextexp
    (62) escaux -> . llamada nextexp
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT

    CTESTRING       shift and go to state 142
    ID              shift and go to state 145
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

    escaux                         shift and go to state 235
    expresion                      shift and go to state 141
    llamada_esp                    shift and go to state 143
    llamada                        shift and go to state 144
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134

state 186

    (65) nextexp -> empty .

    PARDER          reduce using rule 65 (nextexp -> empty .)


state 187

    (62) escaux -> llamada nextexp .

    PARDER          reduce using rule 62 (escaux -> llamada nextexp .)


state 188

    (73) condicion -> if PARIZQ expresion PARDER . cuadGotof bloque condicionAux cuadFinIf
    (132) cuadGotof -> .

    LLAVEIZQ        reduce using rule 132 (cuadGotof -> .)

    cuadGotof                      shift and go to state 236

state 189

    (76) whileloop -> while migaja PARIZQ expresion . PARDER cuadGotof bloque cuadFinWhile

    PARDER          shift and go to state 237


state 190

    (79) forloop -> for PARIZQ expresion checkExpFor . DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    DOSPUNTOS       shift and go to state 238


state 191

    (83) lectura -> read PARIZQ ID checkID . PARDER PYC

    PARDER          shift and go to state 239


state 192

    (84) estReturn -> return PARIZQ retAux PARDER . PYC

    PYC             shift and go to state 240


state 193

    (38) funcaux -> type ID CORIZQ CTEINT CORDER agregaVar . masParam
    (40) masParam -> . funcaux
    (41) masParam -> . empty
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (135) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 135 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 71
    masParam                       shift and go to state 241
    funcaux                        shift and go to state 118
    empty                          shift and go to state 119

state 194

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar masParam

    CORDER          shift and go to state 242


state 195

    (50) asignacion -> ID checkID asignaux ASIGNA expresion . cuadAsignacion PYC
    (54) cuadAsignacion -> .

    PYC             reduce using rule 54 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 243

state 196

    (51) asignacion -> ID checkID asignaux ASIGNA llamada_esp . PYC
    (116) factor -> llamada_esp . pushOT
    (128) pushOT -> .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 244
    MULT            reduce using rule 128 (pushOT -> .)
    DIV             reduce using rule 128 (pushOT -> .)
    MAS             reduce using rule 128 (pushOT -> .)
    MENOS           reduce using rule 128 (pushOT -> .)
    MAYORQUE        reduce using rule 128 (pushOT -> .)
    MENORQUE        reduce using rule 128 (pushOT -> .)
    MAYORIGUAL      reduce using rule 128 (pushOT -> .)
    MENORIGUAL      reduce using rule 128 (pushOT -> .)
    EQUALS          reduce using rule 128 (pushOT -> .)
    DIFERENTE       reduce using rule 128 (pushOT -> .)
    AND             reduce using rule 128 (pushOT -> .)
    OR              reduce using rule 128 (pushOT -> .)

  ! PYC             [ reduce using rule 128 (pushOT -> .) ]

    pushOT                         shift and go to state 170

state 197

    (52) asignacion -> ID checkID asignaux ASIGNA CTESTRING . cuadAsignacion PYC
    (54) cuadAsignacion -> .

    PYC             reduce using rule 54 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 245

state 198

    (55) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 55 (asignaux -> CORIZQ expresion CORDER .)


state 199

    (56) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 246
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 200

    (118) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 247


state 201

    (119) especiales -> length .

    PARIZQ          reduce using rule 119 (especiales -> length .)


state 202

    (120) especiales -> max .

    PARIZQ          reduce using rule 120 (especiales -> max .)


state 203

    (121) especiales -> min .

    PARIZQ          reduce using rule 121 (especiales -> min .)


state 204

    (122) especiales -> avg .

    PARIZQ          reduce using rule 122 (especiales -> avg .)


state 205

    (123) especiales -> median .

    PARIZQ          reduce using rule 123 (especiales -> median .)


state 206

    (124) especiales -> mode .

    PARIZQ          reduce using rule 124 (especiales -> mode .)


state 207

    (125) especiales -> variance .

    PARIZQ          reduce using rule 125 (especiales -> variance .)


state 208

    (126) especiales -> stdev .

    PARIZQ          reduce using rule 126 (especiales -> stdev .)


state 209

    (115) factor -> ID checkID pushOT .

    MULT            reduce using rule 115 (factor -> ID checkID pushOT .)
    DIV             reduce using rule 115 (factor -> ID checkID pushOT .)
    MAS             reduce using rule 115 (factor -> ID checkID pushOT .)
    MENOS           reduce using rule 115 (factor -> ID checkID pushOT .)
    MAYORQUE        reduce using rule 115 (factor -> ID checkID pushOT .)
    MENORQUE        reduce using rule 115 (factor -> ID checkID pushOT .)
    MAYORIGUAL      reduce using rule 115 (factor -> ID checkID pushOT .)
    MENORIGUAL      reduce using rule 115 (factor -> ID checkID pushOT .)
    EQUALS          reduce using rule 115 (factor -> ID checkID pushOT .)
    DIFERENTE       reduce using rule 115 (factor -> ID checkID pushOT .)
    AND             reduce using rule 115 (factor -> ID checkID pushOT .)
    OR              reduce using rule 115 (factor -> ID checkID pushOT .)
    ID              reduce using rule 115 (factor -> ID checkID pushOT .)
    PARIZQ          reduce using rule 115 (factor -> ID checkID pushOT .)
    CTEINT          reduce using rule 115 (factor -> ID checkID pushOT .)
    CTEFLOAT        reduce using rule 115 (factor -> ID checkID pushOT .)
    true            reduce using rule 115 (factor -> ID checkID pushOT .)
    false           reduce using rule 115 (factor -> ID checkID pushOT .)
    COMA            reduce using rule 115 (factor -> ID checkID pushOT .)
    PARDER          reduce using rule 115 (factor -> ID checkID pushOT .)
    DOSPUNTOS       reduce using rule 115 (factor -> ID checkID pushOT .)
    CORDER          reduce using rule 115 (factor -> ID checkID pushOT .)
    PYC             reduce using rule 115 (factor -> ID checkID pushOT .)


state 210

    (110) factor -> PARIZQ expresion PARDER .

    MULT            reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    EQUALS          reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    ID              reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    CTEINT          reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    CTEFLOAT        reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    true            reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    false           reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 110 (factor -> PARIZQ expresion PARDER .)
    PYC             reduce using rule 110 (factor -> PARIZQ expresion PARDER .)


state 211

    (69) llamaux -> expresion nextparametro .

    PARDER          reduce using rule 69 (llamaux -> expresion nextparametro .)


state 212

    (71) nextparametro -> COMA . llamaux
    (69) llamaux -> . expresion nextparametro
    (70) llamaux -> . llamada_esp nextparametro
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    ID              shift and go to state 125
    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138

    llamaux                        shift and go to state 248
    expresion                      shift and go to state 166
    llamada_esp                    shift and go to state 168
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada                        shift and go to state 139

state 213

    (72) nextparametro -> empty .

    PARDER          reduce using rule 72 (nextparametro -> empty .)


state 214

    (66) llamada -> ID PARIZQ expresion llamaux PARDER .

    ID              reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    write           reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    if              reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    while           reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    for             reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    read            reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    return          reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    LLAVEDER        reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MULT            reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    DIV             reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MAS             reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MENOS           reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MAYORQUE        reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MENORQUE        reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MAYORIGUAL      reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    MENORIGUAL      reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    EQUALS          reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    DIFERENTE       reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    AND             reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    OR              reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    PARIZQ          reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    CTEINT          reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    CTEFLOAT        reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    true            reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    false           reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    COMA            reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    PARDER          reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    DOSPUNTOS       reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    CORDER          reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    PYC             reduce using rule 66 (llamada -> ID PARIZQ expresion llamaux PARDER .)


state 215

    (70) llamaux -> llamada_esp nextparametro .

    PARDER          reduce using rule 70 (llamaux -> llamada_esp nextparametro .)


state 216

    (67) llamada -> ID PARIZQ llamada_esp llamaux PARDER .

    ID              reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    write           reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    if              reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    while           reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    for             reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    read            reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    return          reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    LLAVEDER        reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MULT            reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    DIV             reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MAS             reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MENOS           reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MAYORQUE        reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MENORQUE        reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MAYORIGUAL      reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    MENORIGUAL      reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    EQUALS          reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    DIFERENTE       reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    AND             reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    OR              reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    PARIZQ          reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    CTEINT          reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    CTEFLOAT        reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    true            reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    false           reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    COMA            reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    PARDER          reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    DOSPUNTOS       reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    CORDER          reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    PYC             reduce using rule 67 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)


state 217

    (91) expresion -> andExpresion OR pushOper . andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    andExpresion                   shift and go to state 249
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 218

    (93) andExpresion -> relopExpresion AND pushOper . relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    relopExpresion                 shift and go to state 250
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 219

    (95) relopExpresion -> aritExpresion cuadArit relopAux . aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    aritExpresion                  shift and go to state 251
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 220

    (96) relopAux -> MAYORQUE . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 252

state 221

    (97) relopAux -> MENORQUE . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 253

state 222

    (98) relopAux -> MAYORIGUAL . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 254

state 223

    (99) relopAux -> MENORIGUAL . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 255

state 224

    (100) relopAux -> EQUALS . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 256

state 225

    (101) relopAux -> DIFERENTE . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 257

state 226

    (103) aritExpresion -> term cuadTerm aritAux . term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    term                           shift and go to state 258
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 227

    (104) aritAux -> MAS . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 259

state 228

    (105) aritAux -> MENOS . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 260

state 229

    (107) term -> factor cuadFactor termAux . factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    factor                         shift and go to state 261
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 230

    (108) termAux -> MULT . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 262

state 231

    (109) termAux -> DIV . pushOper
    (127) pushOper -> .

    PARIZQ          reduce using rule 127 (pushOper -> .)
    CTEINT          reduce using rule 127 (pushOper -> .)
    CTEFLOAT        reduce using rule 127 (pushOper -> .)
    true            reduce using rule 127 (pushOper -> .)
    false           reduce using rule 127 (pushOper -> .)
    ID              reduce using rule 127 (pushOper -> .)

    pushOper                       shift and go to state 263

state 232

    (58) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    return          reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 58 (escritura -> write PARIZQ escaux PARDER PYC .)


state 233

    (59) escaux -> expresion cuadEsc nextexp .

    PARDER          reduce using rule 59 (escaux -> expresion cuadEsc nextexp .)


state 234

    (60) escaux -> CTESTRING cuadEsc nextexp .

    PARDER          reduce using rule 60 (escaux -> CTESTRING cuadEsc nextexp .)


state 235

    (64) nextexp -> COMA escaux .

    PARDER          reduce using rule 64 (nextexp -> COMA escaux .)


state 236

    (73) condicion -> if PARIZQ expresion PARDER cuadGotof . bloque condicionAux cuadFinIf
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 264

state 237

    (76) whileloop -> while migaja PARIZQ expresion PARDER . cuadGotof bloque cuadFinWhile
    (132) cuadGotof -> .

    LLAVEIZQ        reduce using rule 132 (cuadGotof -> .)

    cuadGotof                      shift and go to state 265

state 238

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS . expresion checkExpFor PARDER gotoFor bloque returnFor
    (90) expresion -> . andExpresion
    (91) expresion -> . andExpresion OR pushOper andExpresion
    (92) andExpresion -> . relopExpresion
    (93) andExpresion -> . relopExpresion AND pushOper relopExpresion
    (94) relopExpresion -> . aritExpresion cuadArit
    (95) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (102) aritExpresion -> . term cuadTerm
    (103) aritExpresion -> . term cuadTerm aritAux term cuadTerm
    (106) term -> . factor
    (107) term -> . factor cuadFactor termAux factor cuadFactor
    (110) factor -> . PARIZQ expresion PARDER
    (111) factor -> . CTEINT pushOT
    (112) factor -> . CTEFLOAT pushOT
    (113) factor -> . true pushOT
    (114) factor -> . false pushOT
    (115) factor -> . ID checkID pushOT
    (116) factor -> . llamada_esp pushOT
    (117) factor -> . llamada pushOT
    (118) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (66) llamada -> . ID PARIZQ expresion llamaux PARDER
    (67) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (68) llamada -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 126
    CTEINT          shift and go to state 135
    CTEFLOAT        shift and go to state 136
    true            shift and go to state 137
    false           shift and go to state 138
    ID              shift and go to state 147

    expresion                      shift and go to state 266
    andExpresion                   shift and go to state 130
    relopExpresion                 shift and go to state 131
    aritExpresion                  shift and go to state 132
    term                           shift and go to state 133
    factor                         shift and go to state 134
    llamada_esp                    shift and go to state 148
    llamada                        shift and go to state 139

state 239

    (83) lectura -> read PARIZQ ID checkID PARDER . PYC

    PYC             shift and go to state 267


state 240

    (84) estReturn -> return PARIZQ retAux PARDER PYC .

    ID              reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    write           reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    if              reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    while           reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    for             reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    read            reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    return          reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)
    LLAVEDER        reduce using rule 84 (estReturn -> return PARIZQ retAux PARDER PYC .)


state 241

    (38) funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam .

    PARDER          reduce using rule 38 (funcaux -> type ID CORIZQ CTEINT CORDER agregaVar masParam .)


state 242

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar masParam
    (17) agregaVar -> .

    int             reduce using rule 17 (agregaVar -> .)
    float           reduce using rule 17 (agregaVar -> .)
    string          reduce using rule 17 (agregaVar -> .)
    bool            reduce using rule 17 (agregaVar -> .)
    PARDER          reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 268

state 243

    (50) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion . PYC

    PYC             shift and go to state 269


state 244

    (51) asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    return          reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 51 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)


state 245

    (52) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion . PYC

    PYC             shift and go to state 270


state 246

    (56) asignaux -> CORIZQ expresion COMA expresion . CORDER

    CORDER          shift and go to state 271


state 247

    (118) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 272


state 248

    (71) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 71 (nextparametro -> COMA llamaux .)


state 249

    (91) expresion -> andExpresion OR pushOper andExpresion .

    ID              reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    PARIZQ          reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    CTEINT          reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    CTEFLOAT        reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    true            reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    false           reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    COMA            reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    PARDER          reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    CORDER          reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)
    PYC             reduce using rule 91 (expresion -> andExpresion OR pushOper andExpresion .)


state 250

    (93) andExpresion -> relopExpresion AND pushOper relopExpresion .

    OR              reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    ID              reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARIZQ          reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CTEINT          reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CTEFLOAT        reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    true            reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    false           reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    COMA            reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PARDER          reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    DOSPUNTOS       reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    CORDER          reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)
    PYC             reduce using rule 93 (andExpresion -> relopExpresion AND pushOper relopExpresion .)


state 251

    (95) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion . cuadArit
    (131) cuadArit -> .

    AND             reduce using rule 131 (cuadArit -> .)
    OR              reduce using rule 131 (cuadArit -> .)
    ID              reduce using rule 131 (cuadArit -> .)
    PARIZQ          reduce using rule 131 (cuadArit -> .)
    CTEINT          reduce using rule 131 (cuadArit -> .)
    CTEFLOAT        reduce using rule 131 (cuadArit -> .)
    true            reduce using rule 131 (cuadArit -> .)
    false           reduce using rule 131 (cuadArit -> .)
    COMA            reduce using rule 131 (cuadArit -> .)
    PARDER          reduce using rule 131 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 131 (cuadArit -> .)
    CORDER          reduce using rule 131 (cuadArit -> .)
    PYC             reduce using rule 131 (cuadArit -> .)

    cuadArit                       shift and go to state 273

state 252

    (96) relopAux -> MAYORQUE pushOper .

    PARIZQ          reduce using rule 96 (relopAux -> MAYORQUE pushOper .)
    CTEINT          reduce using rule 96 (relopAux -> MAYORQUE pushOper .)
    CTEFLOAT        reduce using rule 96 (relopAux -> MAYORQUE pushOper .)
    true            reduce using rule 96 (relopAux -> MAYORQUE pushOper .)
    false           reduce using rule 96 (relopAux -> MAYORQUE pushOper .)
    ID              reduce using rule 96 (relopAux -> MAYORQUE pushOper .)


state 253

    (97) relopAux -> MENORQUE pushOper .

    PARIZQ          reduce using rule 97 (relopAux -> MENORQUE pushOper .)
    CTEINT          reduce using rule 97 (relopAux -> MENORQUE pushOper .)
    CTEFLOAT        reduce using rule 97 (relopAux -> MENORQUE pushOper .)
    true            reduce using rule 97 (relopAux -> MENORQUE pushOper .)
    false           reduce using rule 97 (relopAux -> MENORQUE pushOper .)
    ID              reduce using rule 97 (relopAux -> MENORQUE pushOper .)


state 254

    (98) relopAux -> MAYORIGUAL pushOper .

    PARIZQ          reduce using rule 98 (relopAux -> MAYORIGUAL pushOper .)
    CTEINT          reduce using rule 98 (relopAux -> MAYORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 98 (relopAux -> MAYORIGUAL pushOper .)
    true            reduce using rule 98 (relopAux -> MAYORIGUAL pushOper .)
    false           reduce using rule 98 (relopAux -> MAYORIGUAL pushOper .)
    ID              reduce using rule 98 (relopAux -> MAYORIGUAL pushOper .)


state 255

    (99) relopAux -> MENORIGUAL pushOper .

    PARIZQ          reduce using rule 99 (relopAux -> MENORIGUAL pushOper .)
    CTEINT          reduce using rule 99 (relopAux -> MENORIGUAL pushOper .)
    CTEFLOAT        reduce using rule 99 (relopAux -> MENORIGUAL pushOper .)
    true            reduce using rule 99 (relopAux -> MENORIGUAL pushOper .)
    false           reduce using rule 99 (relopAux -> MENORIGUAL pushOper .)
    ID              reduce using rule 99 (relopAux -> MENORIGUAL pushOper .)


state 256

    (100) relopAux -> EQUALS pushOper .

    PARIZQ          reduce using rule 100 (relopAux -> EQUALS pushOper .)
    CTEINT          reduce using rule 100 (relopAux -> EQUALS pushOper .)
    CTEFLOAT        reduce using rule 100 (relopAux -> EQUALS pushOper .)
    true            reduce using rule 100 (relopAux -> EQUALS pushOper .)
    false           reduce using rule 100 (relopAux -> EQUALS pushOper .)
    ID              reduce using rule 100 (relopAux -> EQUALS pushOper .)


state 257

    (101) relopAux -> DIFERENTE pushOper .

    PARIZQ          reduce using rule 101 (relopAux -> DIFERENTE pushOper .)
    CTEINT          reduce using rule 101 (relopAux -> DIFERENTE pushOper .)
    CTEFLOAT        reduce using rule 101 (relopAux -> DIFERENTE pushOper .)
    true            reduce using rule 101 (relopAux -> DIFERENTE pushOper .)
    false           reduce using rule 101 (relopAux -> DIFERENTE pushOper .)
    ID              reduce using rule 101 (relopAux -> DIFERENTE pushOper .)


state 258

    (103) aritExpresion -> term cuadTerm aritAux term . cuadTerm
    (129) cuadTerm -> .

    MAYORQUE        reduce using rule 129 (cuadTerm -> .)
    MENORQUE        reduce using rule 129 (cuadTerm -> .)
    MAYORIGUAL      reduce using rule 129 (cuadTerm -> .)
    MENORIGUAL      reduce using rule 129 (cuadTerm -> .)
    EQUALS          reduce using rule 129 (cuadTerm -> .)
    DIFERENTE       reduce using rule 129 (cuadTerm -> .)
    AND             reduce using rule 129 (cuadTerm -> .)
    OR              reduce using rule 129 (cuadTerm -> .)
    ID              reduce using rule 129 (cuadTerm -> .)
    PARIZQ          reduce using rule 129 (cuadTerm -> .)
    CTEINT          reduce using rule 129 (cuadTerm -> .)
    CTEFLOAT        reduce using rule 129 (cuadTerm -> .)
    true            reduce using rule 129 (cuadTerm -> .)
    false           reduce using rule 129 (cuadTerm -> .)
    COMA            reduce using rule 129 (cuadTerm -> .)
    PARDER          reduce using rule 129 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 129 (cuadTerm -> .)
    CORDER          reduce using rule 129 (cuadTerm -> .)
    PYC             reduce using rule 129 (cuadTerm -> .)

    cuadTerm                       shift and go to state 274

state 259

    (104) aritAux -> MAS pushOper .

    PARIZQ          reduce using rule 104 (aritAux -> MAS pushOper .)
    CTEINT          reduce using rule 104 (aritAux -> MAS pushOper .)
    CTEFLOAT        reduce using rule 104 (aritAux -> MAS pushOper .)
    true            reduce using rule 104 (aritAux -> MAS pushOper .)
    false           reduce using rule 104 (aritAux -> MAS pushOper .)
    ID              reduce using rule 104 (aritAux -> MAS pushOper .)


state 260

    (105) aritAux -> MENOS pushOper .

    PARIZQ          reduce using rule 105 (aritAux -> MENOS pushOper .)
    CTEINT          reduce using rule 105 (aritAux -> MENOS pushOper .)
    CTEFLOAT        reduce using rule 105 (aritAux -> MENOS pushOper .)
    true            reduce using rule 105 (aritAux -> MENOS pushOper .)
    false           reduce using rule 105 (aritAux -> MENOS pushOper .)
    ID              reduce using rule 105 (aritAux -> MENOS pushOper .)


state 261

    (107) term -> factor cuadFactor termAux factor . cuadFactor
    (130) cuadFactor -> .

    MAS             reduce using rule 130 (cuadFactor -> .)
    MENOS           reduce using rule 130 (cuadFactor -> .)
    MAYORQUE        reduce using rule 130 (cuadFactor -> .)
    MENORQUE        reduce using rule 130 (cuadFactor -> .)
    MAYORIGUAL      reduce using rule 130 (cuadFactor -> .)
    MENORIGUAL      reduce using rule 130 (cuadFactor -> .)
    EQUALS          reduce using rule 130 (cuadFactor -> .)
    DIFERENTE       reduce using rule 130 (cuadFactor -> .)
    AND             reduce using rule 130 (cuadFactor -> .)
    OR              reduce using rule 130 (cuadFactor -> .)
    ID              reduce using rule 130 (cuadFactor -> .)
    PARIZQ          reduce using rule 130 (cuadFactor -> .)
    CTEINT          reduce using rule 130 (cuadFactor -> .)
    CTEFLOAT        reduce using rule 130 (cuadFactor -> .)
    true            reduce using rule 130 (cuadFactor -> .)
    false           reduce using rule 130 (cuadFactor -> .)
    COMA            reduce using rule 130 (cuadFactor -> .)
    PARDER          reduce using rule 130 (cuadFactor -> .)
    DOSPUNTOS       reduce using rule 130 (cuadFactor -> .)
    CORDER          reduce using rule 130 (cuadFactor -> .)
    PYC             reduce using rule 130 (cuadFactor -> .)

    cuadFactor                     shift and go to state 275

state 262

    (108) termAux -> MULT pushOper .

    PARIZQ          reduce using rule 108 (termAux -> MULT pushOper .)
    CTEINT          reduce using rule 108 (termAux -> MULT pushOper .)
    CTEFLOAT        reduce using rule 108 (termAux -> MULT pushOper .)
    true            reduce using rule 108 (termAux -> MULT pushOper .)
    false           reduce using rule 108 (termAux -> MULT pushOper .)
    ID              reduce using rule 108 (termAux -> MULT pushOper .)


state 263

    (109) termAux -> DIV pushOper .

    PARIZQ          reduce using rule 109 (termAux -> DIV pushOper .)
    CTEINT          reduce using rule 109 (termAux -> DIV pushOper .)
    CTEFLOAT        reduce using rule 109 (termAux -> DIV pushOper .)
    true            reduce using rule 109 (termAux -> DIV pushOper .)
    false           reduce using rule 109 (termAux -> DIV pushOper .)
    ID              reduce using rule 109 (termAux -> DIV pushOper .)


state 264

    (73) condicion -> if PARIZQ expresion PARDER cuadGotof bloque . condicionAux cuadFinIf
    (74) condicionAux -> . else cuadGoto bloque
    (75) condicionAux -> . empty
    (135) empty -> .

    else            shift and go to state 277
    ID              reduce using rule 135 (empty -> .)
    write           reduce using rule 135 (empty -> .)
    if              reduce using rule 135 (empty -> .)
    while           reduce using rule 135 (empty -> .)
    for             reduce using rule 135 (empty -> .)
    read            reduce using rule 135 (empty -> .)
    return          reduce using rule 135 (empty -> .)
    LLAVEDER        reduce using rule 135 (empty -> .)

    condicionAux                   shift and go to state 276
    empty                          shift and go to state 278

state 265

    (76) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof . bloque cuadFinWhile
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 279

state 266

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion . checkExpFor PARDER gotoFor bloque returnFor
    (80) checkExpFor -> .

    PARDER          reduce using rule 80 (checkExpFor -> .)

    checkExpFor                    shift and go to state 280

state 267

    (83) lectura -> read PARIZQ ID checkID PARDER PYC .

    ID              reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    write           reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    if              reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    while           reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    for             reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    read            reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    return          reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)
    LLAVEDER        reduce using rule 83 (lectura -> read PARIZQ ID checkID PARDER PYC .)


state 268

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . masParam
    (40) masParam -> . funcaux
    (41) masParam -> . empty
    (37) funcaux -> . type ID agregaVar masParam
    (38) funcaux -> . type ID CORIZQ CTEINT CORDER agregaVar masParam
    (39) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam
    (135) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 135 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 71
    masParam                       shift and go to state 281
    funcaux                        shift and go to state 118
    empty                          shift and go to state 119

state 269

    (50) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .

    ID              reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    write           reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    if              reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    while           reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    for             reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    read            reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    return          reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 50 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)


state 270

    (52) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .

    ID              reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    write           reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    if              reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    while           reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    for             reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    read            reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    return          reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 52 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)


state 271

    (56) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 56 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 272

    (118) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    ID              reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARIZQ          reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEINT          reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    true            reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    false           reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MULT            reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIV             reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAS             reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENOS           reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORQUE        reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORQUE        reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    EQUALS          reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIFERENTE       reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    AND             reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    OR              reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    COMA            reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CORDER          reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 118 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 273

    (95) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .

    AND             reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    OR              reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    ID              reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARIZQ          reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CTEINT          reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CTEFLOAT        reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    true            reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    false           reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    COMA            reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARDER          reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CORDER          reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PYC             reduce using rule 95 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)


state 274

    (103) aritExpresion -> term cuadTerm aritAux term cuadTerm .

    MAYORQUE        reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORQUE        reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MAYORIGUAL      reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    MENORIGUAL      reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    EQUALS          reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DIFERENTE       reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    AND             reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    OR              reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    ID              reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARIZQ          reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CTEINT          reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CTEFLOAT        reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    true            reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    false           reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    COMA            reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PARDER          reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    DOSPUNTOS       reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    CORDER          reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)
    PYC             reduce using rule 103 (aritExpresion -> term cuadTerm aritAux term cuadTerm .)


state 275

    (107) term -> factor cuadFactor termAux factor cuadFactor .

    MAS             reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENOS           reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORQUE        reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORQUE        reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    MAYORIGUAL      reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    MENORIGUAL      reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    EQUALS          reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    DIFERENTE       reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    AND             reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    OR              reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    ID              reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARIZQ          reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    CTEINT          reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    CTEFLOAT        reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    true            reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    false           reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    COMA            reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    PARDER          reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    DOSPUNTOS       reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    CORDER          reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)
    PYC             reduce using rule 107 (term -> factor cuadFactor termAux factor cuadFactor .)


state 276

    (73) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux . cuadFinIf
    (133) cuadFinIf -> .

    ID              reduce using rule 133 (cuadFinIf -> .)
    write           reduce using rule 133 (cuadFinIf -> .)
    if              reduce using rule 133 (cuadFinIf -> .)
    while           reduce using rule 133 (cuadFinIf -> .)
    for             reduce using rule 133 (cuadFinIf -> .)
    read            reduce using rule 133 (cuadFinIf -> .)
    return          reduce using rule 133 (cuadFinIf -> .)
    LLAVEDER        reduce using rule 133 (cuadFinIf -> .)

    cuadFinIf                      shift and go to state 282

state 277

    (74) condicionAux -> else . cuadGoto bloque
    (134) cuadGoto -> .

    LLAVEIZQ        reduce using rule 134 (cuadGoto -> .)

    cuadGoto                       shift and go to state 283

state 278

    (75) condicionAux -> empty .

    ID              reduce using rule 75 (condicionAux -> empty .)
    write           reduce using rule 75 (condicionAux -> empty .)
    if              reduce using rule 75 (condicionAux -> empty .)
    while           reduce using rule 75 (condicionAux -> empty .)
    for             reduce using rule 75 (condicionAux -> empty .)
    read            reduce using rule 75 (condicionAux -> empty .)
    return          reduce using rule 75 (condicionAux -> empty .)
    LLAVEDER        reduce using rule 75 (condicionAux -> empty .)


state 279

    (76) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque . cuadFinWhile
    (78) cuadFinWhile -> .

    ID              reduce using rule 78 (cuadFinWhile -> .)
    write           reduce using rule 78 (cuadFinWhile -> .)
    if              reduce using rule 78 (cuadFinWhile -> .)
    while           reduce using rule 78 (cuadFinWhile -> .)
    for             reduce using rule 78 (cuadFinWhile -> .)
    read            reduce using rule 78 (cuadFinWhile -> .)
    return          reduce using rule 78 (cuadFinWhile -> .)
    LLAVEDER        reduce using rule 78 (cuadFinWhile -> .)

    cuadFinWhile                   shift and go to state 284

state 280

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor . PARDER gotoFor bloque returnFor

    PARDER          shift and go to state 285


state 281

    (39) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam .

    PARDER          reduce using rule 39 (funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar masParam .)


state 282

    (73) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .

    ID              reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    write           reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    if              reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    while           reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    for             reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    read            reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    return          reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    LLAVEDER        reduce using rule 73 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)


state 283

    (74) condicionAux -> else cuadGoto . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 286

state 284

    (76) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .

    ID              reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    write           reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    if              reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    while           reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    for             reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    read            reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    return          reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    LLAVEDER        reduce using rule 76 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)


state 285

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER . gotoFor bloque returnFor
    (81) gotoFor -> .

    LLAVEIZQ        reduce using rule 81 (gotoFor -> .)

    gotoFor                        shift and go to state 287

state 286

    (74) condicionAux -> else cuadGoto bloque .

    ID              reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    write           reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    if              reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    while           reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    for             reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    read            reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    return          reduce using rule 74 (condicionAux -> else cuadGoto bloque .)
    LLAVEDER        reduce using rule 74 (condicionAux -> else cuadGoto bloque .)


state 287

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor . bloque returnFor
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 75

    bloque                         shift and go to state 288

state 288

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque . returnFor
    (82) returnFor -> .

    ID              reduce using rule 82 (returnFor -> .)
    write           reduce using rule 82 (returnFor -> .)
    if              reduce using rule 82 (returnFor -> .)
    while           reduce using rule 82 (returnFor -> .)
    for             reduce using rule 82 (returnFor -> .)
    read            reduce using rule 82 (returnFor -> .)
    return          reduce using rule 82 (returnFor -> .)
    LLAVEDER        reduce using rule 82 (returnFor -> .)

    returnFor                      shift and go to state 289

state 289

    (79) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .

    ID              reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    write           reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    if              reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    while           reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    for             reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    read            reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    return          reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    LLAVEDER        reduce using rule 79 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for var in state 8 resolved as shift
WARNING: shift/reduce conflict for var in state 11 resolved as shift
WARNING: shift/reduce conflict for var in state 76 resolved as shift
WARNING: shift/reduce conflict for var in state 77 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 125 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 129 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 129 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 129 resolved as shift
WARNING: shift/reduce conflict for true in state 129 resolved as shift
WARNING: shift/reduce conflict for false in state 129 resolved as shift
WARNING: shift/reduce conflict for COMA in state 143 resolved as shift
WARNING: shift/reduce conflict for COMA in state 144 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 147 resolved as shift
WARNING: shift/reduce conflict for COMA in state 168 resolved as shift
WARNING: shift/reduce conflict for PYC in state 196 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 12
WARNING: reduce/reduce conflict in state 143 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 143
WARNING: reduce/reduce conflict in state 144 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 155 resolved using rule (retAux -> true)
WARNING: rejected rule (pushOT -> <empty>) in state 155
WARNING: reduce/reduce conflict in state 156 resolved using rule (retAux -> false)
WARNING: rejected rule (pushOT -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 157 resolved using rule (retAux -> llamada)
WARNING: rejected rule (pushOT -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 168 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 168
