Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC
Rule 2     programa -> program auxprograma ID PYC empty mainfunction end PYC
Rule 3     auxprograma -> <empty>
Rule 4     varsaux -> vars varsaux
Rule 5     varsaux -> empty
Rule 6     paux2 -> function paux2
Rule 7     paux2 -> empty
Rule 8     vars -> var type guardarTipo vaux PYC
Rule 9     vars -> empty
Rule 10    vaux -> ID crearVar nextvar
Rule 11    vaux -> ID CORIZQ CTEINT CORDER crearVar nextvar
Rule 12    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER crearVar nextvar
Rule 13    nextvar -> COMA vaux
Rule 14    nextvar -> empty
Rule 15    crearVar -> <empty>
Rule 16    guardarTipo -> <empty>
Rule 17    mainfunction -> func main agregaMain PARIZQ PARDER varsaux bloque
Rule 18    mainfunction -> func main agregaMain PARIZQ PARDER bloque
Rule 19    agregaMain -> <empty>
Rule 20    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 21    bloque -> LLAVEIZQ empty LLAVEDER
Rule 22    bloqueaux -> estatuto bloqueaux
Rule 23    bloqueaux -> estatuto
Rule 24    type -> int
Rule 25    type -> float
Rule 26    type -> string
Rule 27    type -> bool
Rule 28    function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque
Rule 29    function -> ftype func ID PARIZQ empty PARDER varsaux bloque
Rule 30    ftype -> type
Rule 31    ftype -> void
Rule 32    funcaux -> type ID
Rule 33    funcaux -> type ID COMA funcaux
Rule 34    estatuto -> asignacion
Rule 35    estatuto -> escritura
Rule 36    estatuto -> llamada
Rule 37    estatuto -> condicion
Rule 38    estatuto -> whileloop
Rule 39    estatuto -> forloop
Rule 40    estatuto -> lectura
Rule 41    asignacion -> ID asignaux ASIGNA hyper_exp PYC
Rule 42    asignacion -> ID asignaux ASIGNA llamada_esp PYC
Rule 43    asignaux -> CORIZQ expresion CORDER
Rule 44    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 45    asignaux -> empty
Rule 46    escritura -> write PARIZQ escaux PARDER PYC
Rule 47    escaux -> expresion nextexp
Rule 48    escaux -> CTESTRING nextexp
Rule 49    escaux -> llamada_esp nextexp
Rule 50    nextexp -> COMA escaux
Rule 51    nextexp -> empty
Rule 52    llamada -> ID PARIZQ expresion llamaux PARDER
Rule 53    llamada -> ID PARIZQ llamada_esp llamaux PARDER
Rule 54    llamada -> ID PARIZQ PARDER
Rule 55    llamaux -> expresion nextparametro
Rule 56    llamaux -> llamada_esp nextparametro
Rule 57    nextparametro -> COMA llamaux
Rule 58    nextparametro -> empty
Rule 59    condicion -> if PARIZQ expresion PARDER bloque
Rule 60    condicion -> if PARIZQ expresion PARDER bloque else bloque
Rule 61    whileloop -> while PARIZQ expresion PARDER bloque
Rule 62    forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
Rule 63    lectura -> read PARIZQ ID PARDER PYC
Rule 64    expresion -> term
Rule 65    expresion -> term MAS term
Rule 66    expresion -> term MENOS term
Rule 67    term -> fact
Rule 68    term -> fact MULT fact
Rule 69    term -> fact DIV fact
Rule 70    fact -> CTEINT
Rule 71    fact -> CTEFLOAT
Rule 72    fact -> ID
Rule 73    fact -> hyper_exp
Rule 74    hyper_exp -> super_exp
Rule 75    hyper_exp -> super_exp AND super_exp
Rule 76    hyper_exp -> super_exp OR super_exp
Rule 77    super_exp -> expresion
Rule 78    super_exp -> expresion MAYORQUE expresion
Rule 79    super_exp -> expresion MENORQUE expresion
Rule 80    super_exp -> expresion EQUALS expresion
Rule 81    super_exp -> expresion DIFERENTE expresion
Rule 82    llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 83    especiales -> length
Rule 84    especiales -> max
Rule 85    especiales -> min
Rule 86    especiales -> avg
Rule 87    especiales -> median
Rule 88    especiales -> mode
Rule 89    especiales -> variance
Rule 90    especiales -> stdev
Rule 91    empty -> <empty>

Terminals, with rules where they appear

AND                  : 75
ASIGNA               : 41 42
COMA                 : 12 13 33 44 50 57
CORDER               : 11 12 43 44
CORIZQ               : 11 12 43 44
CTEFLOAT             : 71
CTEINT               : 11 12 12 70
CTESTRING            : 48
DIFERENTE            : 81
DIV                  : 69
DOSPUNTOS            : 62
EQUALS               : 80
ID                   : 1 2 10 11 12 28 29 32 33 41 42 52 53 54 63 72 82
LLAVEDER             : 20 21
LLAVEIZQ             : 20 21
MAS                  : 65
MAYORQUE             : 78
MENORQUE             : 79
MENOS                : 66
MULT                 : 68
OR                   : 76
PARDER               : 17 18 28 29 46 52 53 54 59 60 61 62 63 82
PARIZQ               : 17 18 28 29 46 52 53 54 59 60 61 62 63 82
PUNTO                : 82
PYC                  : 1 1 2 2 8 41 42 46 63
avg                  : 86
bool                 : 27
else                 : 60
end                  : 1 2
error                : 
float                : 25
for                  : 62
func                 : 17 18 28 29
if                   : 59 60
int                  : 24
length               : 83
main                 : 17 18
max                  : 84
median               : 87
min                  : 85
mode                 : 88
program              : 1 2
read                 : 63
stdev                : 90
string               : 26
var                  : 8
variance             : 89
void                 : 31
while                : 61
write                : 46

Nonterminals, with rules where they appear

agregaMain           : 17 18
asignacion           : 34
asignaux             : 41 42
auxprograma          : 1 2
bloque               : 17 18 28 29 59 60 60 61 62
bloqueaux            : 20 22
condicion            : 37
crearVar             : 10 11 12
empty                : 2 5 7 9 14 21 29 45 51 58
escaux               : 46 50
escritura            : 35
especiales           : 82
estatuto             : 22 23
expresion            : 43 44 44 47 52 55 59 60 61 62 62 77 78 78 79 79 80 80 81 81
fact                 : 67 68 68 69 69
forloop              : 39
ftype                : 28 29
funcaux              : 28 33
function             : 6
guardarTipo          : 8
hyper_exp            : 41 73
lectura              : 40
llamada              : 36
llamada_esp          : 42 49 53 56
llamaux              : 52 53 57
mainfunction         : 1 2
nextexp              : 47 48 49
nextparametro        : 55 56
nextvar              : 10 11 12
paux2                : 1 6
programa             : 0
super_exp            : 74 75 75 76 76
term                 : 64 65 65 66 66
type                 : 8 30 32 33
vars                 : 4
varsaux              : 1 4 17 28 29
vaux                 : 8 13
whileloop            : 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> . program auxprograma ID PYC empty mainfunction end PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> program . auxprograma ID PYC empty mainfunction end PYC
    (3) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 3

  ! ID              [ reduce using rule 3 (auxprograma -> .) ]

    auxprograma                    shift and go to state 4

state 3

    (1) programa -> program ID . auxprograma PYC varsaux paux2 mainfunction end PYC
    (3) auxprograma -> .

    PYC             reduce using rule 3 (auxprograma -> .)

    auxprograma                    shift and go to state 5

state 4

    (2) programa -> program auxprograma . ID PYC empty mainfunction end PYC

    ID              shift and go to state 6


state 5

    (1) programa -> program ID auxprograma . PYC varsaux paux2 mainfunction end PYC

    PYC             shift and go to state 7


state 6

    (2) programa -> program auxprograma ID . PYC empty mainfunction end PYC

    PYC             shift and go to state 8


state 7

    (1) programa -> program ID auxprograma PYC . varsaux paux2 mainfunction end PYC
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type guardarTipo vaux PYC
    (9) vars -> . empty
    (91) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    void            reduce using rule 91 (empty -> .)
    int             reduce using rule 91 (empty -> .)
    float           reduce using rule 91 (empty -> .)
    string          reduce using rule 91 (empty -> .)
    bool            reduce using rule 91 (empty -> .)
    func            reduce using rule 91 (empty -> .)

  ! var             [ reduce using rule 91 (empty -> .) ]

    varsaux                        shift and go to state 9
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 8

    (2) programa -> program auxprograma ID PYC . empty mainfunction end PYC
    (91) empty -> .

    func            reduce using rule 91 (empty -> .)

    empty                          shift and go to state 13

state 9

    (1) programa -> program ID auxprograma PYC varsaux . paux2 mainfunction end PYC
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (28) function -> . ftype func ID PARIZQ funcaux PARDER varsaux bloque
    (29) function -> . ftype func ID PARIZQ empty PARDER varsaux bloque
    (91) empty -> .
    (30) ftype -> . type
    (31) ftype -> . void
    (24) type -> . int
    (25) type -> . float
    (26) type -> . string
    (27) type -> . bool

    func            reduce using rule 91 (empty -> .)
    void            shift and go to state 19
    int             shift and go to state 20
    float           shift and go to state 21
    string          shift and go to state 22
    bool            shift and go to state 23

    paux2                          shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16
    ftype                          shift and go to state 17
    type                           shift and go to state 18

state 10

    (4) varsaux -> vars . varsaux
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type guardarTipo vaux PYC
    (9) vars -> . empty
    (91) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    void            reduce using rule 91 (empty -> .)
    int             reduce using rule 91 (empty -> .)
    float           reduce using rule 91 (empty -> .)
    string          reduce using rule 91 (empty -> .)
    bool            reduce using rule 91 (empty -> .)
    func            reduce using rule 91 (empty -> .)
    LLAVEIZQ        reduce using rule 91 (empty -> .)

  ! var             [ reduce using rule 91 (empty -> .) ]

    vars                           shift and go to state 10
    varsaux                        shift and go to state 24
    empty                          shift and go to state 11

state 11

    (5) varsaux -> empty .
    (9) vars -> empty .

  ! reduce/reduce conflict for void resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for int resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 5 (varsaux -> empty .)
    void            reduce using rule 5 (varsaux -> empty .)
    int             reduce using rule 5 (varsaux -> empty .)
    float           reduce using rule 5 (varsaux -> empty .)
    string          reduce using rule 5 (varsaux -> empty .)
    bool            reduce using rule 5 (varsaux -> empty .)
    func            reduce using rule 5 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 5 (varsaux -> empty .)
    var             reduce using rule 9 (vars -> empty .)

  ! void            [ reduce using rule 9 (vars -> empty .) ]
  ! int             [ reduce using rule 9 (vars -> empty .) ]
  ! float           [ reduce using rule 9 (vars -> empty .) ]
  ! string          [ reduce using rule 9 (vars -> empty .) ]
  ! bool            [ reduce using rule 9 (vars -> empty .) ]
  ! func            [ reduce using rule 9 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 9 (vars -> empty .) ]


state 12

    (8) vars -> var . type guardarTipo vaux PYC
    (24) type -> . int
    (25) type -> . float
    (26) type -> . string
    (27) type -> . bool

    int             shift and go to state 20
    float           shift and go to state 21
    string          shift and go to state 22
    bool            shift and go to state 23

    type                           shift and go to state 25

state 13

    (2) programa -> program auxprograma ID PYC empty . mainfunction end PYC
    (17) mainfunction -> . func main agregaMain PARIZQ PARDER varsaux bloque
    (18) mainfunction -> . func main agregaMain PARIZQ PARDER bloque

    func            shift and go to state 27

    mainfunction                   shift and go to state 26

state 14

    (1) programa -> program ID auxprograma PYC varsaux paux2 . mainfunction end PYC
    (17) mainfunction -> . func main agregaMain PARIZQ PARDER varsaux bloque
    (18) mainfunction -> . func main agregaMain PARIZQ PARDER bloque

    func            shift and go to state 27

    mainfunction                   shift and go to state 28

state 15

    (6) paux2 -> function . paux2
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (28) function -> . ftype func ID PARIZQ funcaux PARDER varsaux bloque
    (29) function -> . ftype func ID PARIZQ empty PARDER varsaux bloque
    (91) empty -> .
    (30) ftype -> . type
    (31) ftype -> . void
    (24) type -> . int
    (25) type -> . float
    (26) type -> . string
    (27) type -> . bool

    func            reduce using rule 91 (empty -> .)
    void            shift and go to state 19
    int             shift and go to state 20
    float           shift and go to state 21
    string          shift and go to state 22
    bool            shift and go to state 23

    function                       shift and go to state 15
    paux2                          shift and go to state 29
    empty                          shift and go to state 16
    ftype                          shift and go to state 17
    type                           shift and go to state 18

state 16

    (7) paux2 -> empty .

    func            reduce using rule 7 (paux2 -> empty .)


state 17

    (28) function -> ftype . func ID PARIZQ funcaux PARDER varsaux bloque
    (29) function -> ftype . func ID PARIZQ empty PARDER varsaux bloque

    func            shift and go to state 30


state 18

    (30) ftype -> type .

    func            reduce using rule 30 (ftype -> type .)


state 19

    (31) ftype -> void .

    func            reduce using rule 31 (ftype -> void .)


state 20

    (24) type -> int .

    func            reduce using rule 24 (type -> int .)
    ID              reduce using rule 24 (type -> int .)


state 21

    (25) type -> float .

    func            reduce using rule 25 (type -> float .)
    ID              reduce using rule 25 (type -> float .)


state 22

    (26) type -> string .

    func            reduce using rule 26 (type -> string .)
    ID              reduce using rule 26 (type -> string .)


state 23

    (27) type -> bool .

    func            reduce using rule 27 (type -> bool .)
    ID              reduce using rule 27 (type -> bool .)


state 24

    (4) varsaux -> vars varsaux .

    void            reduce using rule 4 (varsaux -> vars varsaux .)
    int             reduce using rule 4 (varsaux -> vars varsaux .)
    float           reduce using rule 4 (varsaux -> vars varsaux .)
    string          reduce using rule 4 (varsaux -> vars varsaux .)
    bool            reduce using rule 4 (varsaux -> vars varsaux .)
    func            reduce using rule 4 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 4 (varsaux -> vars varsaux .)


state 25

    (8) vars -> var type . guardarTipo vaux PYC
    (16) guardarTipo -> .

    ID              reduce using rule 16 (guardarTipo -> .)

    guardarTipo                    shift and go to state 31

state 26

    (2) programa -> program auxprograma ID PYC empty mainfunction . end PYC

    end             shift and go to state 32


state 27

    (17) mainfunction -> func . main agregaMain PARIZQ PARDER varsaux bloque
    (18) mainfunction -> func . main agregaMain PARIZQ PARDER bloque

    main            shift and go to state 33


state 28

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction . end PYC

    end             shift and go to state 34


state 29

    (6) paux2 -> function paux2 .

    func            reduce using rule 6 (paux2 -> function paux2 .)


state 30

    (28) function -> ftype func . ID PARIZQ funcaux PARDER varsaux bloque
    (29) function -> ftype func . ID PARIZQ empty PARDER varsaux bloque

    ID              shift and go to state 35


state 31

    (8) vars -> var type guardarTipo . vaux PYC
    (10) vaux -> . ID crearVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER crearVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER crearVar nextvar

    ID              shift and go to state 37

    vaux                           shift and go to state 36

state 32

    (2) programa -> program auxprograma ID PYC empty mainfunction end . PYC

    PYC             shift and go to state 38


state 33

    (17) mainfunction -> func main . agregaMain PARIZQ PARDER varsaux bloque
    (18) mainfunction -> func main . agregaMain PARIZQ PARDER bloque
    (19) agregaMain -> .

    PARIZQ          reduce using rule 19 (agregaMain -> .)

    agregaMain                     shift and go to state 39

state 34

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end . PYC

    PYC             shift and go to state 40


state 35

    (28) function -> ftype func ID . PARIZQ funcaux PARDER varsaux bloque
    (29) function -> ftype func ID . PARIZQ empty PARDER varsaux bloque

    PARIZQ          shift and go to state 41


state 36

    (8) vars -> var type guardarTipo vaux . PYC

    PYC             shift and go to state 42


state 37

    (10) vaux -> ID . crearVar nextvar
    (11) vaux -> ID . CORIZQ CTEINT CORDER crearVar nextvar
    (12) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER crearVar nextvar
    (15) crearVar -> .

    CORIZQ          shift and go to state 44
    COMA            reduce using rule 15 (crearVar -> .)
    PYC             reduce using rule 15 (crearVar -> .)

    crearVar                       shift and go to state 43

state 38

    (2) programa -> program auxprograma ID PYC empty mainfunction end PYC .

    $end            reduce using rule 2 (programa -> program auxprograma ID PYC empty mainfunction end PYC .)


state 39

    (17) mainfunction -> func main agregaMain . PARIZQ PARDER varsaux bloque
    (18) mainfunction -> func main agregaMain . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 45


state 40

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .

    $end            reduce using rule 1 (programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .)


state 41

    (28) function -> ftype func ID PARIZQ . funcaux PARDER varsaux bloque
    (29) function -> ftype func ID PARIZQ . empty PARDER varsaux bloque
    (32) funcaux -> . type ID
    (33) funcaux -> . type ID COMA funcaux
    (91) empty -> .
    (24) type -> . int
    (25) type -> . float
    (26) type -> . string
    (27) type -> . bool

    PARDER          reduce using rule 91 (empty -> .)
    int             shift and go to state 20
    float           shift and go to state 21
    string          shift and go to state 22
    bool            shift and go to state 23

    funcaux                        shift and go to state 46
    empty                          shift and go to state 47
    type                           shift and go to state 48

state 42

    (8) vars -> var type guardarTipo vaux PYC .

    var             reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    void            reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    int             reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    float           reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    string          reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    bool            reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    func            reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)
    LLAVEIZQ        reduce using rule 8 (vars -> var type guardarTipo vaux PYC .)


state 43

    (10) vaux -> ID crearVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (91) empty -> .

    COMA            shift and go to state 50
    PYC             reduce using rule 91 (empty -> .)

    nextvar                        shift and go to state 49
    empty                          shift and go to state 51

state 44

    (11) vaux -> ID CORIZQ . CTEINT CORDER crearVar nextvar
    (12) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER crearVar nextvar

    CTEINT          shift and go to state 52


state 45

    (17) mainfunction -> func main agregaMain PARIZQ . PARDER varsaux bloque
    (18) mainfunction -> func main agregaMain PARIZQ . PARDER bloque

    PARDER          shift and go to state 53


state 46

    (28) function -> ftype func ID PARIZQ funcaux . PARDER varsaux bloque

    PARDER          shift and go to state 54


state 47

    (29) function -> ftype func ID PARIZQ empty . PARDER varsaux bloque

    PARDER          shift and go to state 55


state 48

    (32) funcaux -> type . ID
    (33) funcaux -> type . ID COMA funcaux

    ID              shift and go to state 56


state 49

    (10) vaux -> ID crearVar nextvar .

    PYC             reduce using rule 10 (vaux -> ID crearVar nextvar .)


state 50

    (13) nextvar -> COMA . vaux
    (10) vaux -> . ID crearVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER crearVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER crearVar nextvar

    ID              shift and go to state 37

    vaux                           shift and go to state 57

state 51

    (14) nextvar -> empty .

    PYC             reduce using rule 14 (nextvar -> empty .)


state 52

    (11) vaux -> ID CORIZQ CTEINT . CORDER crearVar nextvar
    (12) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER crearVar nextvar

    CORDER          shift and go to state 58
    COMA            shift and go to state 59


state 53

    (17) mainfunction -> func main agregaMain PARIZQ PARDER . varsaux bloque
    (18) mainfunction -> func main agregaMain PARIZQ PARDER . bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER
    (8) vars -> . var type guardarTipo vaux PYC
    (9) vars -> . empty
    (91) empty -> .

  ! shift/reduce conflict for LLAVEIZQ resolved as shift
  ! shift/reduce conflict for var resolved as shift
    LLAVEIZQ        shift and go to state 62
    var             shift and go to state 12

  ! LLAVEIZQ        [ reduce using rule 91 (empty -> .) ]
  ! var             [ reduce using rule 91 (empty -> .) ]

    varsaux                        shift and go to state 60
    bloque                         shift and go to state 61
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 54

    (28) function -> ftype func ID PARIZQ funcaux PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type guardarTipo vaux PYC
    (9) vars -> . empty
    (91) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 91 (empty -> .)

  ! var             [ reduce using rule 91 (empty -> .) ]

    varsaux                        shift and go to state 63
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 55

    (29) function -> ftype func ID PARIZQ empty PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type guardarTipo vaux PYC
    (9) vars -> . empty
    (91) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 91 (empty -> .)

  ! var             [ reduce using rule 91 (empty -> .) ]

    empty                          shift and go to state 11
    varsaux                        shift and go to state 64
    vars                           shift and go to state 10

state 56

    (32) funcaux -> type ID .
    (33) funcaux -> type ID . COMA funcaux

    PARDER          reduce using rule 32 (funcaux -> type ID .)
    COMA            shift and go to state 65


state 57

    (13) nextvar -> COMA vaux .

    PYC             reduce using rule 13 (nextvar -> COMA vaux .)


state 58

    (11) vaux -> ID CORIZQ CTEINT CORDER . crearVar nextvar
    (15) crearVar -> .

    COMA            reduce using rule 15 (crearVar -> .)
    PYC             reduce using rule 15 (crearVar -> .)

    crearVar                       shift and go to state 66

state 59

    (12) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER crearVar nextvar

    CTEINT          shift and go to state 67


state 60

    (17) mainfunction -> func main agregaMain PARIZQ PARDER varsaux . bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 68

state 61

    (18) mainfunction -> func main agregaMain PARIZQ PARDER bloque .

    end             reduce using rule 18 (mainfunction -> func main agregaMain PARIZQ PARDER bloque .)


state 62

    (20) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (21) bloque -> LLAVEIZQ . empty LLAVEDER
    (22) bloqueaux -> . estatuto bloqueaux
    (23) bloqueaux -> . estatuto
    (91) empty -> .
    (34) estatuto -> . asignacion
    (35) estatuto -> . escritura
    (36) estatuto -> . llamada
    (37) estatuto -> . condicion
    (38) estatuto -> . whileloop
    (39) estatuto -> . forloop
    (40) estatuto -> . lectura
    (41) asignacion -> . ID asignaux ASIGNA hyper_exp PYC
    (42) asignacion -> . ID asignaux ASIGNA llamada_esp PYC
    (46) escritura -> . write PARIZQ escaux PARDER PYC
    (52) llamada -> . ID PARIZQ expresion llamaux PARDER
    (53) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (54) llamada -> . ID PARIZQ PARDER
    (59) condicion -> . if PARIZQ expresion PARDER bloque
    (60) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (61) whileloop -> . while PARIZQ expresion PARDER bloque
    (62) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (63) lectura -> . read PARIZQ ID PARDER PYC

    LLAVEDER        reduce using rule 91 (empty -> .)
    ID              shift and go to state 79
    write           shift and go to state 80
    if              shift and go to state 81
    while           shift and go to state 82
    for             shift and go to state 83
    read            shift and go to state 84

    bloqueaux                      shift and go to state 69
    empty                          shift and go to state 70
    estatuto                       shift and go to state 71
    asignacion                     shift and go to state 72
    escritura                      shift and go to state 73
    llamada                        shift and go to state 74
    condicion                      shift and go to state 75
    whileloop                      shift and go to state 76
    forloop                        shift and go to state 77
    lectura                        shift and go to state 78

state 63

    (28) function -> ftype func ID PARIZQ funcaux PARDER varsaux . bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 85

state 64

    (29) function -> ftype func ID PARIZQ empty PARDER varsaux . bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 86

state 65

    (33) funcaux -> type ID COMA . funcaux
    (32) funcaux -> . type ID
    (33) funcaux -> . type ID COMA funcaux
    (24) type -> . int
    (25) type -> . float
    (26) type -> . string
    (27) type -> . bool

    int             shift and go to state 20
    float           shift and go to state 21
    string          shift and go to state 22
    bool            shift and go to state 23

    type                           shift and go to state 48
    funcaux                        shift and go to state 87

state 66

    (11) vaux -> ID CORIZQ CTEINT CORDER crearVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (91) empty -> .

    COMA            shift and go to state 50
    PYC             reduce using rule 91 (empty -> .)

    nextvar                        shift and go to state 88
    empty                          shift and go to state 51

state 67

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER crearVar nextvar

    CORDER          shift and go to state 89


state 68

    (17) mainfunction -> func main agregaMain PARIZQ PARDER varsaux bloque .

    end             reduce using rule 17 (mainfunction -> func main agregaMain PARIZQ PARDER varsaux bloque .)


state 69

    (20) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 90


state 70

    (21) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 91


state 71

    (22) bloqueaux -> estatuto . bloqueaux
    (23) bloqueaux -> estatuto .
    (22) bloqueaux -> . estatuto bloqueaux
    (23) bloqueaux -> . estatuto
    (34) estatuto -> . asignacion
    (35) estatuto -> . escritura
    (36) estatuto -> . llamada
    (37) estatuto -> . condicion
    (38) estatuto -> . whileloop
    (39) estatuto -> . forloop
    (40) estatuto -> . lectura
    (41) asignacion -> . ID asignaux ASIGNA hyper_exp PYC
    (42) asignacion -> . ID asignaux ASIGNA llamada_esp PYC
    (46) escritura -> . write PARIZQ escaux PARDER PYC
    (52) llamada -> . ID PARIZQ expresion llamaux PARDER
    (53) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (54) llamada -> . ID PARIZQ PARDER
    (59) condicion -> . if PARIZQ expresion PARDER bloque
    (60) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (61) whileloop -> . while PARIZQ expresion PARDER bloque
    (62) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (63) lectura -> . read PARIZQ ID PARDER PYC

    LLAVEDER        reduce using rule 23 (bloqueaux -> estatuto .)
    ID              shift and go to state 79
    write           shift and go to state 80
    if              shift and go to state 81
    while           shift and go to state 82
    for             shift and go to state 83
    read            shift and go to state 84

    estatuto                       shift and go to state 71
    bloqueaux                      shift and go to state 92
    asignacion                     shift and go to state 72
    escritura                      shift and go to state 73
    llamada                        shift and go to state 74
    condicion                      shift and go to state 75
    whileloop                      shift and go to state 76
    forloop                        shift and go to state 77
    lectura                        shift and go to state 78

state 72

    (34) estatuto -> asignacion .

    ID              reduce using rule 34 (estatuto -> asignacion .)
    write           reduce using rule 34 (estatuto -> asignacion .)
    if              reduce using rule 34 (estatuto -> asignacion .)
    while           reduce using rule 34 (estatuto -> asignacion .)
    for             reduce using rule 34 (estatuto -> asignacion .)
    read            reduce using rule 34 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 34 (estatuto -> asignacion .)


state 73

    (35) estatuto -> escritura .

    ID              reduce using rule 35 (estatuto -> escritura .)
    write           reduce using rule 35 (estatuto -> escritura .)
    if              reduce using rule 35 (estatuto -> escritura .)
    while           reduce using rule 35 (estatuto -> escritura .)
    for             reduce using rule 35 (estatuto -> escritura .)
    read            reduce using rule 35 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 35 (estatuto -> escritura .)


state 74

    (36) estatuto -> llamada .

    ID              reduce using rule 36 (estatuto -> llamada .)
    write           reduce using rule 36 (estatuto -> llamada .)
    if              reduce using rule 36 (estatuto -> llamada .)
    while           reduce using rule 36 (estatuto -> llamada .)
    for             reduce using rule 36 (estatuto -> llamada .)
    read            reduce using rule 36 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 36 (estatuto -> llamada .)


state 75

    (37) estatuto -> condicion .

    ID              reduce using rule 37 (estatuto -> condicion .)
    write           reduce using rule 37 (estatuto -> condicion .)
    if              reduce using rule 37 (estatuto -> condicion .)
    while           reduce using rule 37 (estatuto -> condicion .)
    for             reduce using rule 37 (estatuto -> condicion .)
    read            reduce using rule 37 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 37 (estatuto -> condicion .)


state 76

    (38) estatuto -> whileloop .

    ID              reduce using rule 38 (estatuto -> whileloop .)
    write           reduce using rule 38 (estatuto -> whileloop .)
    if              reduce using rule 38 (estatuto -> whileloop .)
    while           reduce using rule 38 (estatuto -> whileloop .)
    for             reduce using rule 38 (estatuto -> whileloop .)
    read            reduce using rule 38 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 38 (estatuto -> whileloop .)


state 77

    (39) estatuto -> forloop .

    ID              reduce using rule 39 (estatuto -> forloop .)
    write           reduce using rule 39 (estatuto -> forloop .)
    if              reduce using rule 39 (estatuto -> forloop .)
    while           reduce using rule 39 (estatuto -> forloop .)
    for             reduce using rule 39 (estatuto -> forloop .)
    read            reduce using rule 39 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 39 (estatuto -> forloop .)


state 78

    (40) estatuto -> lectura .

    ID              reduce using rule 40 (estatuto -> lectura .)
    write           reduce using rule 40 (estatuto -> lectura .)
    if              reduce using rule 40 (estatuto -> lectura .)
    while           reduce using rule 40 (estatuto -> lectura .)
    for             reduce using rule 40 (estatuto -> lectura .)
    read            reduce using rule 40 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 40 (estatuto -> lectura .)


state 79

    (41) asignacion -> ID . asignaux ASIGNA hyper_exp PYC
    (42) asignacion -> ID . asignaux ASIGNA llamada_esp PYC
    (52) llamada -> ID . PARIZQ expresion llamaux PARDER
    (53) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (54) llamada -> ID . PARIZQ PARDER
    (43) asignaux -> . CORIZQ expresion CORDER
    (44) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (45) asignaux -> . empty
    (91) empty -> .

    PARIZQ          shift and go to state 94
    CORIZQ          shift and go to state 95
    ASIGNA          reduce using rule 91 (empty -> .)

    asignaux                       shift and go to state 93
    empty                          shift and go to state 96

state 80

    (46) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 97


state 81

    (59) condicion -> if . PARIZQ expresion PARDER bloque
    (60) condicion -> if . PARIZQ expresion PARDER bloque else bloque

    PARIZQ          shift and go to state 98


state 82

    (61) whileloop -> while . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 99


state 83

    (62) forloop -> for . PARIZQ expresion DOSPUNTOS expresion PARDER bloque

    PARIZQ          shift and go to state 100


state 84

    (63) lectura -> read . PARIZQ ID PARDER PYC

    PARIZQ          shift and go to state 101


state 85

    (28) function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .

    void            reduce using rule 28 (function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .)
    int             reduce using rule 28 (function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .)
    float           reduce using rule 28 (function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .)
    string          reduce using rule 28 (function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .)
    bool            reduce using rule 28 (function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .)
    func            reduce using rule 28 (function -> ftype func ID PARIZQ funcaux PARDER varsaux bloque .)


state 86

    (29) function -> ftype func ID PARIZQ empty PARDER varsaux bloque .

    void            reduce using rule 29 (function -> ftype func ID PARIZQ empty PARDER varsaux bloque .)
    int             reduce using rule 29 (function -> ftype func ID PARIZQ empty PARDER varsaux bloque .)
    float           reduce using rule 29 (function -> ftype func ID PARIZQ empty PARDER varsaux bloque .)
    string          reduce using rule 29 (function -> ftype func ID PARIZQ empty PARDER varsaux bloque .)
    bool            reduce using rule 29 (function -> ftype func ID PARIZQ empty PARDER varsaux bloque .)
    func            reduce using rule 29 (function -> ftype func ID PARIZQ empty PARDER varsaux bloque .)


state 87

    (33) funcaux -> type ID COMA funcaux .

    PARDER          reduce using rule 33 (funcaux -> type ID COMA funcaux .)


state 88

    (11) vaux -> ID CORIZQ CTEINT CORDER crearVar nextvar .

    PYC             reduce using rule 11 (vaux -> ID CORIZQ CTEINT CORDER crearVar nextvar .)


state 89

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . crearVar nextvar
    (15) crearVar -> .

    COMA            reduce using rule 15 (crearVar -> .)
    PYC             reduce using rule 15 (crearVar -> .)

    crearVar                       shift and go to state 102

state 90

    (20) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 20 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 91

    (21) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 21 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 92

    (22) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 22 (bloqueaux -> estatuto bloqueaux .)


state 93

    (41) asignacion -> ID asignaux . ASIGNA hyper_exp PYC
    (42) asignacion -> ID asignaux . ASIGNA llamada_esp PYC

    ASIGNA          shift and go to state 103


state 94

    (52) llamada -> ID PARIZQ . expresion llamaux PARDER
    (53) llamada -> ID PARIZQ . llamada_esp llamaux PARDER
    (54) llamada -> ID PARIZQ . PARDER
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    PARDER          shift and go to state 106
    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

    expresion                      shift and go to state 105
    llamada_esp                    shift and go to state 107
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 95

    (43) asignaux -> CORIZQ . expresion CORDER
    (44) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 114
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 96

    (45) asignaux -> empty .

    ASIGNA          reduce using rule 45 (asignaux -> empty .)


state 97

    (46) escritura -> write PARIZQ . escaux PARDER PYC
    (47) escaux -> . expresion nextexp
    (48) escaux -> . CTESTRING nextexp
    (49) escaux -> . llamada_esp nextexp
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTESTRING       shift and go to state 118
    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

    escaux                         shift and go to state 116
    expresion                      shift and go to state 117
    llamada_esp                    shift and go to state 119
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 98

    (59) condicion -> if PARIZQ . expresion PARDER bloque
    (60) condicion -> if PARIZQ . expresion PARDER bloque else bloque
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 120
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 99

    (61) whileloop -> while PARIZQ . expresion PARDER bloque
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 121
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 100

    (62) forloop -> for PARIZQ . expresion DOSPUNTOS expresion PARDER bloque
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 122
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 101

    (63) lectura -> read PARIZQ . ID PARDER PYC

    ID              shift and go to state 123


state 102

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER crearVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (91) empty -> .

    COMA            shift and go to state 50
    PYC             reduce using rule 91 (empty -> .)

    nextvar                        shift and go to state 124
    empty                          shift and go to state 51

state 103

    (41) asignacion -> ID asignaux ASIGNA . hyper_exp PYC
    (42) asignacion -> ID asignaux ASIGNA . llamada_esp PYC
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp

    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

    hyper_exp                      shift and go to state 125
    llamada_esp                    shift and go to state 126
    super_exp                      shift and go to state 113
    expresion                      shift and go to state 127
    term                           shift and go to state 108
    fact                           shift and go to state 109

state 104

    (82) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (72) fact -> ID .

    PUNTO           shift and go to state 128
    MAYORQUE        reduce using rule 72 (fact -> ID .)
    MENORQUE        reduce using rule 72 (fact -> ID .)
    EQUALS          reduce using rule 72 (fact -> ID .)
    DIFERENTE       reduce using rule 72 (fact -> ID .)
    ID              reduce using rule 72 (fact -> ID .)
    CTEINT          reduce using rule 72 (fact -> ID .)
    CTEFLOAT        reduce using rule 72 (fact -> ID .)
    AND             reduce using rule 72 (fact -> ID .)
    OR              reduce using rule 72 (fact -> ID .)
    MULT            reduce using rule 72 (fact -> ID .)
    DIV             reduce using rule 72 (fact -> ID .)
    MAS             reduce using rule 72 (fact -> ID .)
    MENOS           reduce using rule 72 (fact -> ID .)
    COMA            reduce using rule 72 (fact -> ID .)
    PARDER          reduce using rule 72 (fact -> ID .)
    PYC             reduce using rule 72 (fact -> ID .)


state 105

    (52) llamada -> ID PARIZQ expresion . llamaux PARDER
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion
    (55) llamaux -> . expresion nextparametro
    (56) llamaux -> . llamada_esp nextparametro
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134
    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]
  ! ID              [ reduce using rule 77 (super_exp -> expresion .) ]
  ! CTEINT          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! CTEFLOAT        [ reduce using rule 77 (super_exp -> expresion .) ]

    expresion                      shift and go to state 129
    llamaux                        shift and go to state 130
    llamada_esp                    shift and go to state 135
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 106

    (54) llamada -> ID PARIZQ PARDER .

    ID              reduce using rule 54 (llamada -> ID PARIZQ PARDER .)
    write           reduce using rule 54 (llamada -> ID PARIZQ PARDER .)
    if              reduce using rule 54 (llamada -> ID PARIZQ PARDER .)
    while           reduce using rule 54 (llamada -> ID PARIZQ PARDER .)
    for             reduce using rule 54 (llamada -> ID PARIZQ PARDER .)
    read            reduce using rule 54 (llamada -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 54 (llamada -> ID PARIZQ PARDER .)


state 107

    (53) llamada -> ID PARIZQ llamada_esp . llamaux PARDER
    (55) llamaux -> . expresion nextparametro
    (56) llamaux -> . llamada_esp nextparametro
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

    llamada_esp                    shift and go to state 135
    llamaux                        shift and go to state 136
    expresion                      shift and go to state 129
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 108

    (64) expresion -> term .
    (65) expresion -> term . MAS term
    (66) expresion -> term . MENOS term

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 64 (expresion -> term .)
    MENORQUE        reduce using rule 64 (expresion -> term .)
    EQUALS          reduce using rule 64 (expresion -> term .)
    DIFERENTE       reduce using rule 64 (expresion -> term .)
    ID              reduce using rule 64 (expresion -> term .)
    CTEINT          reduce using rule 64 (expresion -> term .)
    CTEFLOAT        reduce using rule 64 (expresion -> term .)
    AND             reduce using rule 64 (expresion -> term .)
    OR              reduce using rule 64 (expresion -> term .)
    MULT            reduce using rule 64 (expresion -> term .)
    DIV             reduce using rule 64 (expresion -> term .)
    CORDER          reduce using rule 64 (expresion -> term .)
    COMA            reduce using rule 64 (expresion -> term .)
    PARDER          reduce using rule 64 (expresion -> term .)
    DOSPUNTOS       reduce using rule 64 (expresion -> term .)
    PYC             reduce using rule 64 (expresion -> term .)
    MAS             shift and go to state 137
    MENOS           shift and go to state 138

  ! MAS             [ reduce using rule 64 (expresion -> term .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> term .) ]


state 109

    (67) term -> fact .
    (68) term -> fact . MULT fact
    (69) term -> fact . DIV fact

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MAYORQUE        reduce using rule 67 (term -> fact .)
    MENORQUE        reduce using rule 67 (term -> fact .)
    EQUALS          reduce using rule 67 (term -> fact .)
    DIFERENTE       reduce using rule 67 (term -> fact .)
    ID              reduce using rule 67 (term -> fact .)
    CTEINT          reduce using rule 67 (term -> fact .)
    CTEFLOAT        reduce using rule 67 (term -> fact .)
    AND             reduce using rule 67 (term -> fact .)
    OR              reduce using rule 67 (term -> fact .)
    MAS             reduce using rule 67 (term -> fact .)
    MENOS           reduce using rule 67 (term -> fact .)
    CORDER          reduce using rule 67 (term -> fact .)
    COMA            reduce using rule 67 (term -> fact .)
    PARDER          reduce using rule 67 (term -> fact .)
    DOSPUNTOS       reduce using rule 67 (term -> fact .)
    PYC             reduce using rule 67 (term -> fact .)
    MULT            shift and go to state 139
    DIV             shift and go to state 140

  ! MULT            [ reduce using rule 67 (term -> fact .) ]
  ! DIV             [ reduce using rule 67 (term -> fact .) ]


state 110

    (70) fact -> CTEINT .

    MAYORQUE        reduce using rule 70 (fact -> CTEINT .)
    MENORQUE        reduce using rule 70 (fact -> CTEINT .)
    EQUALS          reduce using rule 70 (fact -> CTEINT .)
    DIFERENTE       reduce using rule 70 (fact -> CTEINT .)
    ID              reduce using rule 70 (fact -> CTEINT .)
    CTEINT          reduce using rule 70 (fact -> CTEINT .)
    CTEFLOAT        reduce using rule 70 (fact -> CTEINT .)
    AND             reduce using rule 70 (fact -> CTEINT .)
    OR              reduce using rule 70 (fact -> CTEINT .)
    MULT            reduce using rule 70 (fact -> CTEINT .)
    DIV             reduce using rule 70 (fact -> CTEINT .)
    MAS             reduce using rule 70 (fact -> CTEINT .)
    MENOS           reduce using rule 70 (fact -> CTEINT .)
    CORDER          reduce using rule 70 (fact -> CTEINT .)
    COMA            reduce using rule 70 (fact -> CTEINT .)
    PARDER          reduce using rule 70 (fact -> CTEINT .)
    DOSPUNTOS       reduce using rule 70 (fact -> CTEINT .)
    PYC             reduce using rule 70 (fact -> CTEINT .)


state 111

    (71) fact -> CTEFLOAT .

    MAYORQUE        reduce using rule 71 (fact -> CTEFLOAT .)
    MENORQUE        reduce using rule 71 (fact -> CTEFLOAT .)
    EQUALS          reduce using rule 71 (fact -> CTEFLOAT .)
    DIFERENTE       reduce using rule 71 (fact -> CTEFLOAT .)
    ID              reduce using rule 71 (fact -> CTEFLOAT .)
    CTEINT          reduce using rule 71 (fact -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 71 (fact -> CTEFLOAT .)
    AND             reduce using rule 71 (fact -> CTEFLOAT .)
    OR              reduce using rule 71 (fact -> CTEFLOAT .)
    MULT            reduce using rule 71 (fact -> CTEFLOAT .)
    DIV             reduce using rule 71 (fact -> CTEFLOAT .)
    MAS             reduce using rule 71 (fact -> CTEFLOAT .)
    MENOS           reduce using rule 71 (fact -> CTEFLOAT .)
    CORDER          reduce using rule 71 (fact -> CTEFLOAT .)
    COMA            reduce using rule 71 (fact -> CTEFLOAT .)
    PARDER          reduce using rule 71 (fact -> CTEFLOAT .)
    DOSPUNTOS       reduce using rule 71 (fact -> CTEFLOAT .)
    PYC             reduce using rule 71 (fact -> CTEFLOAT .)


state 112

    (73) fact -> hyper_exp .

    MAYORQUE        reduce using rule 73 (fact -> hyper_exp .)
    MENORQUE        reduce using rule 73 (fact -> hyper_exp .)
    EQUALS          reduce using rule 73 (fact -> hyper_exp .)
    DIFERENTE       reduce using rule 73 (fact -> hyper_exp .)
    ID              reduce using rule 73 (fact -> hyper_exp .)
    CTEINT          reduce using rule 73 (fact -> hyper_exp .)
    CTEFLOAT        reduce using rule 73 (fact -> hyper_exp .)
    AND             reduce using rule 73 (fact -> hyper_exp .)
    OR              reduce using rule 73 (fact -> hyper_exp .)
    MULT            reduce using rule 73 (fact -> hyper_exp .)
    DIV             reduce using rule 73 (fact -> hyper_exp .)
    MAS             reduce using rule 73 (fact -> hyper_exp .)
    MENOS           reduce using rule 73 (fact -> hyper_exp .)
    CORDER          reduce using rule 73 (fact -> hyper_exp .)
    COMA            reduce using rule 73 (fact -> hyper_exp .)
    PARDER          reduce using rule 73 (fact -> hyper_exp .)
    DOSPUNTOS       reduce using rule 73 (fact -> hyper_exp .)
    PYC             reduce using rule 73 (fact -> hyper_exp .)


state 113

    (74) hyper_exp -> super_exp .
    (75) hyper_exp -> super_exp . AND super_exp
    (76) hyper_exp -> super_exp . OR super_exp

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAYORQUE        reduce using rule 74 (hyper_exp -> super_exp .)
    MENORQUE        reduce using rule 74 (hyper_exp -> super_exp .)
    EQUALS          reduce using rule 74 (hyper_exp -> super_exp .)
    DIFERENTE       reduce using rule 74 (hyper_exp -> super_exp .)
    ID              reduce using rule 74 (hyper_exp -> super_exp .)
    CTEINT          reduce using rule 74 (hyper_exp -> super_exp .)
    CTEFLOAT        reduce using rule 74 (hyper_exp -> super_exp .)
    MULT            reduce using rule 74 (hyper_exp -> super_exp .)
    DIV             reduce using rule 74 (hyper_exp -> super_exp .)
    MAS             reduce using rule 74 (hyper_exp -> super_exp .)
    MENOS           reduce using rule 74 (hyper_exp -> super_exp .)
    CORDER          reduce using rule 74 (hyper_exp -> super_exp .)
    COMA            reduce using rule 74 (hyper_exp -> super_exp .)
    PARDER          reduce using rule 74 (hyper_exp -> super_exp .)
    DOSPUNTOS       reduce using rule 74 (hyper_exp -> super_exp .)
    PYC             reduce using rule 74 (hyper_exp -> super_exp .)
    AND             shift and go to state 141
    OR              shift and go to state 142

  ! AND             [ reduce using rule 74 (hyper_exp -> super_exp .) ]
  ! OR              [ reduce using rule 74 (hyper_exp -> super_exp .) ]


state 114

    (43) asignaux -> CORIZQ expresion . CORDER
    (44) asignaux -> CORIZQ expresion . COMA expresion CORDER
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    CORDER          shift and go to state 143
    COMA            shift and go to state 144
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! CORDER          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! COMA            [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 115

    (72) fact -> ID .

    CORDER          reduce using rule 72 (fact -> ID .)
    COMA            reduce using rule 72 (fact -> ID .)
    MAYORQUE        reduce using rule 72 (fact -> ID .)
    MENORQUE        reduce using rule 72 (fact -> ID .)
    EQUALS          reduce using rule 72 (fact -> ID .)
    DIFERENTE       reduce using rule 72 (fact -> ID .)
    AND             reduce using rule 72 (fact -> ID .)
    OR              reduce using rule 72 (fact -> ID .)
    MULT            reduce using rule 72 (fact -> ID .)
    DIV             reduce using rule 72 (fact -> ID .)
    MAS             reduce using rule 72 (fact -> ID .)
    MENOS           reduce using rule 72 (fact -> ID .)
    PARDER          reduce using rule 72 (fact -> ID .)
    DOSPUNTOS       reduce using rule 72 (fact -> ID .)
    ID              reduce using rule 72 (fact -> ID .)
    CTEINT          reduce using rule 72 (fact -> ID .)
    CTEFLOAT        reduce using rule 72 (fact -> ID .)
    PYC             reduce using rule 72 (fact -> ID .)


state 116

    (46) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 145


state 117

    (47) escaux -> expresion . nextexp
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion
    (50) nextexp -> . COMA escaux
    (51) nextexp -> . empty
    (91) empty -> .

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134
    COMA            shift and go to state 147

  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]
  ! COMA            [ reduce using rule 77 (super_exp -> expresion .) ]
  ! PARDER          [ reduce using rule 91 (empty -> .) ]

    nextexp                        shift and go to state 146
    empty                          shift and go to state 148

state 118

    (48) escaux -> CTESTRING . nextexp
    (50) nextexp -> . COMA escaux
    (51) nextexp -> . empty
    (91) empty -> .

    COMA            shift and go to state 147
    PARDER          reduce using rule 91 (empty -> .)

    nextexp                        shift and go to state 149
    empty                          shift and go to state 148

state 119

    (49) escaux -> llamada_esp . nextexp
    (50) nextexp -> . COMA escaux
    (51) nextexp -> . empty
    (91) empty -> .

    COMA            shift and go to state 147
    PARDER          reduce using rule 91 (empty -> .)

    nextexp                        shift and go to state 150
    empty                          shift and go to state 148

state 120

    (59) condicion -> if PARIZQ expresion . PARDER bloque
    (60) condicion -> if PARIZQ expresion . PARDER bloque else bloque
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PARDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          shift and go to state 151
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! PARDER          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 121

    (61) whileloop -> while PARIZQ expresion . PARDER bloque
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PARDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          shift and go to state 152
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! PARDER          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 122

    (62) forloop -> for PARIZQ expresion . DOSPUNTOS expresion PARDER bloque
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for DOSPUNTOS resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    DOSPUNTOS       shift and go to state 153
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! DOSPUNTOS       [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 123

    (63) lectura -> read PARIZQ ID . PARDER PYC

    PARDER          shift and go to state 154


state 124

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER crearVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER crearVar nextvar .)


state 125

    (41) asignacion -> ID asignaux ASIGNA hyper_exp . PYC
    (73) fact -> hyper_exp .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 155
    MULT            reduce using rule 73 (fact -> hyper_exp .)
    DIV             reduce using rule 73 (fact -> hyper_exp .)
    MAS             reduce using rule 73 (fact -> hyper_exp .)
    MENOS           reduce using rule 73 (fact -> hyper_exp .)
    MAYORQUE        reduce using rule 73 (fact -> hyper_exp .)
    MENORQUE        reduce using rule 73 (fact -> hyper_exp .)
    EQUALS          reduce using rule 73 (fact -> hyper_exp .)
    DIFERENTE       reduce using rule 73 (fact -> hyper_exp .)
    AND             reduce using rule 73 (fact -> hyper_exp .)
    OR              reduce using rule 73 (fact -> hyper_exp .)

  ! PYC             [ reduce using rule 73 (fact -> hyper_exp .) ]


state 126

    (42) asignacion -> ID asignaux ASIGNA llamada_esp . PYC

    PYC             shift and go to state 156


state 127

    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PYC             reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    ID              reduce using rule 77 (super_exp -> expresion .)
    CTEINT          reduce using rule 77 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 77 (super_exp -> expresion .)
    CORDER          reduce using rule 77 (super_exp -> expresion .)
    COMA            reduce using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 128

    (82) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (83) especiales -> . length
    (84) especiales -> . max
    (85) especiales -> . min
    (86) especiales -> . avg
    (87) especiales -> . median
    (88) especiales -> . mode
    (89) especiales -> . variance
    (90) especiales -> . stdev

    length          shift and go to state 158
    max             shift and go to state 159
    min             shift and go to state 160
    avg             shift and go to state 161
    median          shift and go to state 162
    mode            shift and go to state 163
    variance        shift and go to state 164
    stdev           shift and go to state 165

    especiales                     shift and go to state 157

state 129

    (55) llamaux -> expresion . nextparametro
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion
    (57) nextparametro -> . COMA llamaux
    (58) nextparametro -> . empty
    (91) empty -> .

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134
    COMA            shift and go to state 167

  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]
  ! COMA            [ reduce using rule 77 (super_exp -> expresion .) ]
  ! PARDER          [ reduce using rule 91 (empty -> .) ]

    nextparametro                  shift and go to state 166
    empty                          shift and go to state 168

state 130

    (52) llamada -> ID PARIZQ expresion llamaux . PARDER

    PARDER          shift and go to state 169


state 131

    (78) super_exp -> expresion MAYORQUE . expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 170
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 132

    (79) super_exp -> expresion MENORQUE . expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 171
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 133

    (80) super_exp -> expresion EQUALS . expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 172
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 134

    (81) super_exp -> expresion DIFERENTE . expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 173
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 135

    (56) llamaux -> llamada_esp . nextparametro
    (57) nextparametro -> . COMA llamaux
    (58) nextparametro -> . empty
    (91) empty -> .

    COMA            shift and go to state 167
    PARDER          reduce using rule 91 (empty -> .)

    nextparametro                  shift and go to state 174
    empty                          shift and go to state 168

state 136

    (53) llamada -> ID PARIZQ llamada_esp llamaux . PARDER

    PARDER          shift and go to state 175


state 137

    (65) expresion -> term MAS . term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    term                           shift and go to state 176
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113
    expresion                      shift and go to state 127

state 138

    (66) expresion -> term MENOS . term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    term                           shift and go to state 177
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113
    expresion                      shift and go to state 127

state 139

    (68) term -> fact MULT . fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    fact                           shift and go to state 178
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113
    expresion                      shift and go to state 127
    term                           shift and go to state 108

state 140

    (69) term -> fact DIV . fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    fact                           shift and go to state 179
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113
    expresion                      shift and go to state 127
    term                           shift and go to state 108

state 141

    (75) hyper_exp -> super_exp AND . super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    super_exp                      shift and go to state 180
    expresion                      shift and go to state 127
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112

state 142

    (76) hyper_exp -> super_exp OR . super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    super_exp                      shift and go to state 181
    expresion                      shift and go to state 127
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112

state 143

    (43) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 43 (asignaux -> CORIZQ expresion CORDER .)


state 144

    (44) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 182
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 145

    (46) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 183


state 146

    (47) escaux -> expresion nextexp .

    PARDER          reduce using rule 47 (escaux -> expresion nextexp .)


state 147

    (50) nextexp -> COMA . escaux
    (47) escaux -> . expresion nextexp
    (48) escaux -> . CTESTRING nextexp
    (49) escaux -> . llamada_esp nextexp
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTESTRING       shift and go to state 118
    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

    escaux                         shift and go to state 184
    expresion                      shift and go to state 117
    llamada_esp                    shift and go to state 119
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 148

    (51) nextexp -> empty .

    PARDER          reduce using rule 51 (nextexp -> empty .)


state 149

    (48) escaux -> CTESTRING nextexp .

    PARDER          reduce using rule 48 (escaux -> CTESTRING nextexp .)


state 150

    (49) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 49 (escaux -> llamada_esp nextexp .)


state 151

    (59) condicion -> if PARIZQ expresion PARDER . bloque
    (60) condicion -> if PARIZQ expresion PARDER . bloque else bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 185

state 152

    (61) whileloop -> while PARIZQ expresion PARDER . bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 186

state 153

    (62) forloop -> for PARIZQ expresion DOSPUNTOS . expresion PARDER bloque
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    ID              shift and go to state 115

    expresion                      shift and go to state 187
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 154

    (63) lectura -> read PARIZQ ID PARDER . PYC

    PYC             shift and go to state 188


state 155

    (41) asignacion -> ID asignaux ASIGNA hyper_exp PYC .

    ID              reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    write           reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    if              reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    while           reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    for             reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    read            reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)
    LLAVEDER        reduce using rule 41 (asignacion -> ID asignaux ASIGNA hyper_exp PYC .)


state 156

    (42) asignacion -> ID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 42 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)


state 157

    (82) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 189


state 158

    (83) especiales -> length .

    PARIZQ          reduce using rule 83 (especiales -> length .)


state 159

    (84) especiales -> max .

    PARIZQ          reduce using rule 84 (especiales -> max .)


state 160

    (85) especiales -> min .

    PARIZQ          reduce using rule 85 (especiales -> min .)


state 161

    (86) especiales -> avg .

    PARIZQ          reduce using rule 86 (especiales -> avg .)


state 162

    (87) especiales -> median .

    PARIZQ          reduce using rule 87 (especiales -> median .)


state 163

    (88) especiales -> mode .

    PARIZQ          reduce using rule 88 (especiales -> mode .)


state 164

    (89) especiales -> variance .

    PARIZQ          reduce using rule 89 (especiales -> variance .)


state 165

    (90) especiales -> stdev .

    PARIZQ          reduce using rule 90 (especiales -> stdev .)


state 166

    (55) llamaux -> expresion nextparametro .

    PARDER          reduce using rule 55 (llamaux -> expresion nextparametro .)


state 167

    (57) nextparametro -> COMA . llamaux
    (55) llamaux -> . expresion nextparametro
    (56) llamaux -> . llamada_esp nextparametro
    (64) expresion -> . term
    (65) expresion -> . term MAS term
    (66) expresion -> . term MENOS term
    (82) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (67) term -> . fact
    (68) term -> . fact MULT fact
    (69) term -> . fact DIV fact
    (70) fact -> . CTEINT
    (71) fact -> . CTEFLOAT
    (72) fact -> . ID
    (73) fact -> . hyper_exp
    (74) hyper_exp -> . super_exp
    (75) hyper_exp -> . super_exp AND super_exp
    (76) hyper_exp -> . super_exp OR super_exp
    (77) super_exp -> . expresion
    (78) super_exp -> . expresion MAYORQUE expresion
    (79) super_exp -> . expresion MENORQUE expresion
    (80) super_exp -> . expresion EQUALS expresion
    (81) super_exp -> . expresion DIFERENTE expresion

    ID              shift and go to state 104
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111

    llamaux                        shift and go to state 190
    expresion                      shift and go to state 129
    llamada_esp                    shift and go to state 135
    term                           shift and go to state 108
    fact                           shift and go to state 109
    hyper_exp                      shift and go to state 112
    super_exp                      shift and go to state 113

state 168

    (58) nextparametro -> empty .

    PARDER          reduce using rule 58 (nextparametro -> empty .)


state 169

    (52) llamada -> ID PARIZQ expresion llamaux PARDER .

    ID              reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    write           reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    if              reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    while           reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    for             reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    read            reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    LLAVEDER        reduce using rule 52 (llamada -> ID PARIZQ expresion llamaux PARDER .)


state 170

    (78) super_exp -> expresion MAYORQUE expresion .
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 77 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 77 (super_exp -> expresion .)
    CTEINT          reduce using rule 77 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    CORDER          reduce using rule 77 (super_exp -> expresion .)
    COMA            reduce using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 77 (super_exp -> expresion .)
    PYC             reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! MAYORQUE        [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MENORQUE        [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! EQUALS          [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! DIFERENTE       [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! ID              [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! CTEINT          [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! CTEFLOAT        [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! AND             [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! OR              [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MULT            [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! DIV             [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MAS             [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! CORDER          [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! COMA            [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! PARDER          [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! PYC             [ reduce using rule 78 (super_exp -> expresion MAYORQUE expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 171

    (79) super_exp -> expresion MENORQUE expresion .
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 77 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 77 (super_exp -> expresion .)
    CTEINT          reduce using rule 77 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    CORDER          reduce using rule 77 (super_exp -> expresion .)
    COMA            reduce using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 77 (super_exp -> expresion .)
    PYC             reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! MAYORQUE        [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! MENORQUE        [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! EQUALS          [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! DIFERENTE       [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! ID              [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! CTEINT          [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! CTEFLOAT        [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! AND             [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! OR              [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! MULT            [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! DIV             [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! MAS             [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! CORDER          [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! COMA            [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! PARDER          [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! PYC             [ reduce using rule 79 (super_exp -> expresion MENORQUE expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 172

    (80) super_exp -> expresion EQUALS expresion .
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 77 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 77 (super_exp -> expresion .)
    CTEINT          reduce using rule 77 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    CORDER          reduce using rule 77 (super_exp -> expresion .)
    COMA            reduce using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 77 (super_exp -> expresion .)
    PYC             reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! MAYORQUE        [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! MENORQUE        [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! DIFERENTE       [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! ID              [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! CTEINT          [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! CTEFLOAT        [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! AND             [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! OR              [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! MULT            [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! DIV             [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! MAS             [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! MENOS           [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! CORDER          [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! COMA            [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! PARDER          [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! PYC             [ reduce using rule 80 (super_exp -> expresion EQUALS expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 173

    (81) super_exp -> expresion DIFERENTE expresion .
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! reduce/reduce conflict for MAYORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for ID resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEINT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for AND resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MULT resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PARDER resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 77 (super_exp -> expresion .)
  ! reduce/reduce conflict for PYC resolved using rule 77 (super_exp -> expresion .)
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    ID              reduce using rule 77 (super_exp -> expresion .)
    CTEINT          reduce using rule 77 (super_exp -> expresion .)
    CTEFLOAT        reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    CORDER          reduce using rule 77 (super_exp -> expresion .)
    COMA            reduce using rule 77 (super_exp -> expresion .)
    PARDER          reduce using rule 77 (super_exp -> expresion .)
    DOSPUNTOS       reduce using rule 77 (super_exp -> expresion .)
    PYC             reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! MAYORQUE        [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MENORQUE        [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! EQUALS          [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! ID              [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! CTEINT          [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! CTEFLOAT        [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! AND             [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! OR              [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MULT            [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! DIV             [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MAS             [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! CORDER          [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! COMA            [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! PARDER          [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! PYC             [ reduce using rule 81 (super_exp -> expresion DIFERENTE expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 174

    (56) llamaux -> llamada_esp nextparametro .

    PARDER          reduce using rule 56 (llamaux -> llamada_esp nextparametro .)


state 175

    (53) llamada -> ID PARIZQ llamada_esp llamaux PARDER .

    ID              reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    write           reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    if              reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    while           reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    for             reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    read            reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    LLAVEDER        reduce using rule 53 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)


state 176

    (65) expresion -> term MAS term .
    (64) expresion -> term .
    (65) expresion -> term . MAS term
    (66) expresion -> term . MENOS term

  ! reduce/reduce conflict for MAYORQUE resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for EQUALS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for ID resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for CTEINT resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for AND resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for OR resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MULT resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MAS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MENOS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for CORDER resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for COMA resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for PARDER resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for PYC resolved using rule 64 (expresion -> term .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 64 (expresion -> term .)
    MENORQUE        reduce using rule 64 (expresion -> term .)
    EQUALS          reduce using rule 64 (expresion -> term .)
    DIFERENTE       reduce using rule 64 (expresion -> term .)
    ID              reduce using rule 64 (expresion -> term .)
    CTEINT          reduce using rule 64 (expresion -> term .)
    CTEFLOAT        reduce using rule 64 (expresion -> term .)
    AND             reduce using rule 64 (expresion -> term .)
    OR              reduce using rule 64 (expresion -> term .)
    MULT            reduce using rule 64 (expresion -> term .)
    DIV             reduce using rule 64 (expresion -> term .)
    CORDER          reduce using rule 64 (expresion -> term .)
    COMA            reduce using rule 64 (expresion -> term .)
    PARDER          reduce using rule 64 (expresion -> term .)
    DOSPUNTOS       reduce using rule 64 (expresion -> term .)
    PYC             reduce using rule 64 (expresion -> term .)
    MAS             shift and go to state 137
    MENOS           shift and go to state 138

  ! MAYORQUE        [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! MENORQUE        [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! EQUALS          [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! DIFERENTE       [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! ID              [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! CTEINT          [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! CTEFLOAT        [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! AND             [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! OR              [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! MULT            [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! DIV             [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! MAS             [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! MENOS           [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! CORDER          [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! COMA            [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! PARDER          [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! DOSPUNTOS       [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! PYC             [ reduce using rule 65 (expresion -> term MAS term .) ]
  ! MAS             [ reduce using rule 64 (expresion -> term .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> term .) ]


state 177

    (66) expresion -> term MENOS term .
    (64) expresion -> term .
    (65) expresion -> term . MAS term
    (66) expresion -> term . MENOS term

  ! reduce/reduce conflict for MAYORQUE resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for EQUALS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for ID resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for CTEINT resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for AND resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for OR resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MULT resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MAS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for MENOS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for CORDER resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for COMA resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for PARDER resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 64 (expresion -> term .)
  ! reduce/reduce conflict for PYC resolved using rule 64 (expresion -> term .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 64 (expresion -> term .)
    MENORQUE        reduce using rule 64 (expresion -> term .)
    EQUALS          reduce using rule 64 (expresion -> term .)
    DIFERENTE       reduce using rule 64 (expresion -> term .)
    ID              reduce using rule 64 (expresion -> term .)
    CTEINT          reduce using rule 64 (expresion -> term .)
    CTEFLOAT        reduce using rule 64 (expresion -> term .)
    AND             reduce using rule 64 (expresion -> term .)
    OR              reduce using rule 64 (expresion -> term .)
    MULT            reduce using rule 64 (expresion -> term .)
    DIV             reduce using rule 64 (expresion -> term .)
    CORDER          reduce using rule 64 (expresion -> term .)
    COMA            reduce using rule 64 (expresion -> term .)
    PARDER          reduce using rule 64 (expresion -> term .)
    DOSPUNTOS       reduce using rule 64 (expresion -> term .)
    PYC             reduce using rule 64 (expresion -> term .)
    MAS             shift and go to state 137
    MENOS           shift and go to state 138

  ! MAYORQUE        [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! MENORQUE        [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! EQUALS          [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! DIFERENTE       [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! ID              [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! CTEINT          [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! CTEFLOAT        [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! AND             [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! OR              [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! MULT            [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! DIV             [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! MAS             [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! MENOS           [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! CORDER          [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! COMA            [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! PARDER          [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! DOSPUNTOS       [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! PYC             [ reduce using rule 66 (expresion -> term MENOS term .) ]
  ! MAS             [ reduce using rule 64 (expresion -> term .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> term .) ]


state 178

    (68) term -> fact MULT fact .
    (67) term -> fact .
    (68) term -> fact . MULT fact
    (69) term -> fact . DIV fact

  ! reduce/reduce conflict for MAYORQUE resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for EQUALS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for ID resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for CTEINT resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for AND resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for OR resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MULT resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for DIV resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MAS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MENOS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for CORDER resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for COMA resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for PARDER resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for PYC resolved using rule 67 (term -> fact .)
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MAYORQUE        reduce using rule 67 (term -> fact .)
    MENORQUE        reduce using rule 67 (term -> fact .)
    EQUALS          reduce using rule 67 (term -> fact .)
    DIFERENTE       reduce using rule 67 (term -> fact .)
    ID              reduce using rule 67 (term -> fact .)
    CTEINT          reduce using rule 67 (term -> fact .)
    CTEFLOAT        reduce using rule 67 (term -> fact .)
    AND             reduce using rule 67 (term -> fact .)
    OR              reduce using rule 67 (term -> fact .)
    MAS             reduce using rule 67 (term -> fact .)
    MENOS           reduce using rule 67 (term -> fact .)
    CORDER          reduce using rule 67 (term -> fact .)
    COMA            reduce using rule 67 (term -> fact .)
    PARDER          reduce using rule 67 (term -> fact .)
    DOSPUNTOS       reduce using rule 67 (term -> fact .)
    PYC             reduce using rule 67 (term -> fact .)
    MULT            shift and go to state 139
    DIV             shift and go to state 140

  ! MAYORQUE        [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! MENORQUE        [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! EQUALS          [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! DIFERENTE       [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! ID              [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! CTEINT          [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! CTEFLOAT        [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! AND             [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! OR              [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! MULT            [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! DIV             [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! MAS             [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! MENOS           [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! CORDER          [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! COMA            [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! PARDER          [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! DOSPUNTOS       [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! PYC             [ reduce using rule 68 (term -> fact MULT fact .) ]
  ! MULT            [ reduce using rule 67 (term -> fact .) ]
  ! DIV             [ reduce using rule 67 (term -> fact .) ]


state 179

    (69) term -> fact DIV fact .
    (67) term -> fact .
    (68) term -> fact . MULT fact
    (69) term -> fact . DIV fact

  ! reduce/reduce conflict for MAYORQUE resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for EQUALS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for ID resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for CTEINT resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for AND resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for OR resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MULT resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for DIV resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MAS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for MENOS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for CORDER resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for COMA resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for PARDER resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 67 (term -> fact .)
  ! reduce/reduce conflict for PYC resolved using rule 67 (term -> fact .)
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MAYORQUE        reduce using rule 67 (term -> fact .)
    MENORQUE        reduce using rule 67 (term -> fact .)
    EQUALS          reduce using rule 67 (term -> fact .)
    DIFERENTE       reduce using rule 67 (term -> fact .)
    ID              reduce using rule 67 (term -> fact .)
    CTEINT          reduce using rule 67 (term -> fact .)
    CTEFLOAT        reduce using rule 67 (term -> fact .)
    AND             reduce using rule 67 (term -> fact .)
    OR              reduce using rule 67 (term -> fact .)
    MAS             reduce using rule 67 (term -> fact .)
    MENOS           reduce using rule 67 (term -> fact .)
    CORDER          reduce using rule 67 (term -> fact .)
    COMA            reduce using rule 67 (term -> fact .)
    PARDER          reduce using rule 67 (term -> fact .)
    DOSPUNTOS       reduce using rule 67 (term -> fact .)
    PYC             reduce using rule 67 (term -> fact .)
    MULT            shift and go to state 139
    DIV             shift and go to state 140

  ! MAYORQUE        [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! MENORQUE        [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! EQUALS          [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! DIFERENTE       [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! ID              [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! CTEINT          [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! CTEFLOAT        [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! AND             [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! OR              [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! MULT            [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! DIV             [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! MAS             [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! MENOS           [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! CORDER          [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! COMA            [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! PARDER          [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! DOSPUNTOS       [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! PYC             [ reduce using rule 69 (term -> fact DIV fact .) ]
  ! MULT            [ reduce using rule 67 (term -> fact .) ]
  ! DIV             [ reduce using rule 67 (term -> fact .) ]


state 180

    (75) hyper_exp -> super_exp AND super_exp .
    (74) hyper_exp -> super_exp .
    (75) hyper_exp -> super_exp . AND super_exp
    (76) hyper_exp -> super_exp . OR super_exp

  ! reduce/reduce conflict for MAYORQUE resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for EQUALS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for ID resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEINT resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for AND resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for OR resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MULT resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIV resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MAS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENOS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CORDER resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for COMA resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PARDER resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PYC resolved using rule 74 (hyper_exp -> super_exp .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAYORQUE        reduce using rule 74 (hyper_exp -> super_exp .)
    MENORQUE        reduce using rule 74 (hyper_exp -> super_exp .)
    EQUALS          reduce using rule 74 (hyper_exp -> super_exp .)
    DIFERENTE       reduce using rule 74 (hyper_exp -> super_exp .)
    ID              reduce using rule 74 (hyper_exp -> super_exp .)
    CTEINT          reduce using rule 74 (hyper_exp -> super_exp .)
    CTEFLOAT        reduce using rule 74 (hyper_exp -> super_exp .)
    MULT            reduce using rule 74 (hyper_exp -> super_exp .)
    DIV             reduce using rule 74 (hyper_exp -> super_exp .)
    MAS             reduce using rule 74 (hyper_exp -> super_exp .)
    MENOS           reduce using rule 74 (hyper_exp -> super_exp .)
    CORDER          reduce using rule 74 (hyper_exp -> super_exp .)
    COMA            reduce using rule 74 (hyper_exp -> super_exp .)
    PARDER          reduce using rule 74 (hyper_exp -> super_exp .)
    DOSPUNTOS       reduce using rule 74 (hyper_exp -> super_exp .)
    PYC             reduce using rule 74 (hyper_exp -> super_exp .)
    AND             shift and go to state 141
    OR              shift and go to state 142

  ! MAYORQUE        [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! MENORQUE        [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! EQUALS          [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! DIFERENTE       [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! ID              [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! CTEINT          [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! CTEFLOAT        [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! AND             [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! OR              [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! MULT            [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! DIV             [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! MAS             [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! MENOS           [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! CORDER          [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! COMA            [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! PARDER          [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! DOSPUNTOS       [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! PYC             [ reduce using rule 75 (hyper_exp -> super_exp AND super_exp .) ]
  ! AND             [ reduce using rule 74 (hyper_exp -> super_exp .) ]
  ! OR              [ reduce using rule 74 (hyper_exp -> super_exp .) ]


state 181

    (76) hyper_exp -> super_exp OR super_exp .
    (74) hyper_exp -> super_exp .
    (75) hyper_exp -> super_exp . AND super_exp
    (76) hyper_exp -> super_exp . OR super_exp

  ! reduce/reduce conflict for MAYORQUE resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for EQUALS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for ID resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEINT resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for AND resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for OR resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MULT resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DIV resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MAS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for MENOS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for CORDER resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for COMA resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PARDER resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 74 (hyper_exp -> super_exp .)
  ! reduce/reduce conflict for PYC resolved using rule 74 (hyper_exp -> super_exp .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAYORQUE        reduce using rule 74 (hyper_exp -> super_exp .)
    MENORQUE        reduce using rule 74 (hyper_exp -> super_exp .)
    EQUALS          reduce using rule 74 (hyper_exp -> super_exp .)
    DIFERENTE       reduce using rule 74 (hyper_exp -> super_exp .)
    ID              reduce using rule 74 (hyper_exp -> super_exp .)
    CTEINT          reduce using rule 74 (hyper_exp -> super_exp .)
    CTEFLOAT        reduce using rule 74 (hyper_exp -> super_exp .)
    MULT            reduce using rule 74 (hyper_exp -> super_exp .)
    DIV             reduce using rule 74 (hyper_exp -> super_exp .)
    MAS             reduce using rule 74 (hyper_exp -> super_exp .)
    MENOS           reduce using rule 74 (hyper_exp -> super_exp .)
    CORDER          reduce using rule 74 (hyper_exp -> super_exp .)
    COMA            reduce using rule 74 (hyper_exp -> super_exp .)
    PARDER          reduce using rule 74 (hyper_exp -> super_exp .)
    DOSPUNTOS       reduce using rule 74 (hyper_exp -> super_exp .)
    PYC             reduce using rule 74 (hyper_exp -> super_exp .)
    AND             shift and go to state 141
    OR              shift and go to state 142

  ! MAYORQUE        [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! MENORQUE        [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! EQUALS          [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! DIFERENTE       [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! ID              [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! CTEINT          [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! CTEFLOAT        [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! AND             [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! OR              [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! MULT            [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! DIV             [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! MAS             [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! MENOS           [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! CORDER          [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! COMA            [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! PARDER          [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! DOSPUNTOS       [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! PYC             [ reduce using rule 76 (hyper_exp -> super_exp OR super_exp .) ]
  ! AND             [ reduce using rule 74 (hyper_exp -> super_exp .) ]
  ! OR              [ reduce using rule 74 (hyper_exp -> super_exp .) ]


state 182

    (44) asignaux -> CORIZQ expresion COMA expresion . CORDER
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    CORDER          shift and go to state 191
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! CORDER          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 183

    (46) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 46 (escritura -> write PARIZQ escaux PARDER PYC .)


state 184

    (50) nextexp -> COMA escaux .

    PARDER          reduce using rule 50 (nextexp -> COMA escaux .)


state 185

    (59) condicion -> if PARIZQ expresion PARDER bloque .
    (60) condicion -> if PARIZQ expresion PARDER bloque . else bloque

    ID              reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    write           reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    if              reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    while           reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    for             reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    read            reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 59 (condicion -> if PARIZQ expresion PARDER bloque .)
    else            shift and go to state 192


state 186

    (61) whileloop -> while PARIZQ expresion PARDER bloque .

    ID              reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)
    write           reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)
    if              reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)
    while           reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)
    for             reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)
    read            reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 61 (whileloop -> while PARIZQ expresion PARDER bloque .)


state 187

    (62) forloop -> for PARIZQ expresion DOSPUNTOS expresion . PARDER bloque
    (77) super_exp -> expresion .
    (78) super_exp -> expresion . MAYORQUE expresion
    (79) super_exp -> expresion . MENORQUE expresion
    (80) super_exp -> expresion . EQUALS expresion
    (81) super_exp -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PARDER resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          shift and go to state 193
    MULT            reduce using rule 77 (super_exp -> expresion .)
    DIV             reduce using rule 77 (super_exp -> expresion .)
    MAS             reduce using rule 77 (super_exp -> expresion .)
    MENOS           reduce using rule 77 (super_exp -> expresion .)
    AND             reduce using rule 77 (super_exp -> expresion .)
    OR              reduce using rule 77 (super_exp -> expresion .)
    MAYORQUE        shift and go to state 131
    MENORQUE        shift and go to state 132
    EQUALS          shift and go to state 133
    DIFERENTE       shift and go to state 134

  ! PARDER          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (super_exp -> expresion .) ]
  ! EQUALS          [ reduce using rule 77 (super_exp -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (super_exp -> expresion .) ]


state 188

    (63) lectura -> read PARIZQ ID PARDER PYC .

    ID              reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)
    write           reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)
    if              reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)
    while           reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)
    for             reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)
    read            reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)
    LLAVEDER        reduce using rule 63 (lectura -> read PARIZQ ID PARDER PYC .)


state 189

    (82) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 194


state 190

    (57) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 57 (nextparametro -> COMA llamaux .)


state 191

    (44) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 44 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 192

    (60) condicion -> if PARIZQ expresion PARDER bloque else . bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 195

state 193

    (62) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER . bloque
    (20) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (21) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 62

    bloque                         shift and go to state 196

state 194

    (82) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    ID              reduce using rule 82 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEINT          reduce using rule 82 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 82 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    COMA            reduce using rule 82 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 82 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 82 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 195

    (60) condicion -> if PARIZQ expresion PARDER bloque else bloque .

    ID              reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    write           reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    if              reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    while           reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    for             reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    read            reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    LLAVEDER        reduce using rule 60 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)


state 196

    (62) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .

    ID              reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    write           reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    if              reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    while           reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    for             reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    read            reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    LLAVEDER        reduce using rule 62 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 7 resolved as shift
WARNING: shift/reduce conflict for var in state 10 resolved as shift
WARNING: shift/reduce conflict for LLAVEIZQ in state 53 resolved as shift
WARNING: shift/reduce conflict for var in state 53 resolved as shift
WARNING: shift/reduce conflict for var in state 54 resolved as shift
WARNING: shift/reduce conflict for var in state 55 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 105 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 105 resolved as shift
WARNING: shift/reduce conflict for ID in state 105 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 105 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 105 resolved as shift
WARNING: shift/reduce conflict for MAS in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULT in state 109 resolved as shift
WARNING: shift/reduce conflict for DIV in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 114 resolved as shift
WARNING: shift/reduce conflict for COMA in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 114 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 114 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 117 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 117 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 117 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 117 resolved as shift
WARNING: shift/reduce conflict for COMA in state 117 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 120 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 120 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 120 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 121 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 121 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 121 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 122 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 122 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 122 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 122 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 122 resolved as shift
WARNING: shift/reduce conflict for PYC in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 127 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 127 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 127 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 127 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 129 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 129 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 129 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 129 resolved as shift
WARNING: shift/reduce conflict for COMA in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 170 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 170 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 170 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 170 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 171 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 171 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 171 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 172 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 172 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 172 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 172 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 173 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 173 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 173 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 173 resolved as shift
WARNING: shift/reduce conflict for MAS in state 176 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 176 resolved as shift
WARNING: shift/reduce conflict for MAS in state 177 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 177 resolved as shift
WARNING: shift/reduce conflict for MULT in state 178 resolved as shift
WARNING: shift/reduce conflict for DIV in state 178 resolved as shift
WARNING: shift/reduce conflict for MULT in state 179 resolved as shift
WARNING: shift/reduce conflict for DIV in state 179 resolved as shift
WARNING: shift/reduce conflict for AND in state 180 resolved as shift
WARNING: shift/reduce conflict for OR in state 180 resolved as shift
WARNING: shift/reduce conflict for AND in state 181 resolved as shift
WARNING: shift/reduce conflict for OR in state 181 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 182 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 182 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 182 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 182 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 182 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 187 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 187 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 187 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 187 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 187 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 11
WARNING: reduce/reduce conflict in state 117 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (empty -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 129 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (empty -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 170 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion MAYORQUE expresion) in state 170
WARNING: reduce/reduce conflict in state 171 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion MENORQUE expresion) in state 171
WARNING: reduce/reduce conflict in state 172 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion EQUALS expresion) in state 172
WARNING: reduce/reduce conflict in state 173 resolved using rule (super_exp -> expresion)
WARNING: rejected rule (super_exp -> expresion DIFERENTE expresion) in state 173
WARNING: reduce/reduce conflict in state 176 resolved using rule (expresion -> term)
WARNING: rejected rule (expresion -> term MAS term) in state 176
WARNING: reduce/reduce conflict in state 177 resolved using rule (expresion -> term)
WARNING: rejected rule (expresion -> term MENOS term) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (term -> fact)
WARNING: rejected rule (term -> fact MULT fact) in state 178
WARNING: reduce/reduce conflict in state 179 resolved using rule (term -> fact)
WARNING: rejected rule (term -> fact DIV fact) in state 179
WARNING: reduce/reduce conflict in state 180 resolved using rule (hyper_exp -> super_exp)
WARNING: rejected rule (hyper_exp -> super_exp AND super_exp) in state 180
WARNING: reduce/reduce conflict in state 181 resolved using rule (hyper_exp -> super_exp)
WARNING: rejected rule (hyper_exp -> super_exp OR super_exp) in state 181
WARNING: Rule (super_exp -> expresion MAYORQUE expresion) is never reduced
WARNING: Rule (super_exp -> expresion MENORQUE expresion) is never reduced
WARNING: Rule (super_exp -> expresion EQUALS expresion) is never reduced
WARNING: Rule (super_exp -> expresion DIFERENTE expresion) is never reduced
WARNING: Rule (expresion -> term MAS term) is never reduced
WARNING: Rule (expresion -> term MENOS term) is never reduced
WARNING: Rule (term -> fact MULT fact) is never reduced
WARNING: Rule (term -> fact DIV fact) is never reduced
WARNING: Rule (hyper_exp -> super_exp AND super_exp) is never reduced
WARNING: Rule (hyper_exp -> super_exp OR super_exp) is never reduced
