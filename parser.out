Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
Rule 2     programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
Rule 3     cuadGotoMain -> <empty>
Rule 4     cuadEnd -> <empty>
Rule 5     auxprograma -> <empty>
Rule 6     varsaux -> vars varsaux
Rule 7     varsaux -> empty
Rule 8     paux2 -> function paux2
Rule 9     paux2 -> empty
Rule 10    vars -> var type vaux PYC
Rule 11    vars -> empty
Rule 12    vaux -> ID agregaVar nextvar
Rule 13    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 14    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 15    nextvar -> COMA vaux
Rule 16    nextvar -> empty
Rule 17    agregaVar -> <empty>
Rule 18    agregaPar -> <empty>
Rule 19    guardarTipoVar -> <empty>
Rule 20    guardarTipoFunc -> <empty>
Rule 21    mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque
Rule 22    fillMain -> <empty>
Rule 23    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 24    bloque -> LLAVEIZQ empty LLAVEDER
Rule 25    bloqueaux -> estatuto bloqueaux
Rule 26    bloqueaux -> estatuto
Rule 27    type -> int guardarTipoVar
Rule 28    type -> float guardarTipoVar
Rule 29    type -> string guardarTipoVar
Rule 30    type -> bool guardarTipoVar
Rule 31    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
Rule 32    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
Rule 33    agregaDir -> <empty>
Rule 34    cuadEndf -> <empty>
Rule 35    agregaFunc -> <empty>
Rule 36    ftype -> int guardarTipoFunc
Rule 37    ftype -> float guardarTipoFunc
Rule 38    ftype -> string guardarTipoFunc
Rule 39    ftype -> bool guardarTipoFunc
Rule 40    ftype -> void guardarTipoFunc
Rule 41    funcaux -> type ID agregaPar masParam
Rule 42    funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam
Rule 43    funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
Rule 44    masParam -> COMA funcaux
Rule 45    masParam -> empty
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> escritura
Rule 48    estatuto -> llamada PYC
Rule 49    estatuto -> condicion
Rule 50    estatuto -> whileloop
Rule 51    estatuto -> forloop
Rule 52    estatuto -> lectura
Rule 53    estatuto -> estReturn
Rule 54    estatuto -> llamadaEspVoid
Rule 55    asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
Rule 56    asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC
Rule 57    asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
Rule 58    checkID -> <empty>
Rule 59    cuadAsignacion -> <empty>
Rule 60    asignaux -> CORIZQ expresion CORDER pushOTAsig
Rule 61    asignaux -> CORIZQ expresion COMA expresion CORDER pushOTAsig
Rule 62    asignaux -> empty
Rule 63    pushOTAsig -> <empty>
Rule 64    escritura -> write PARIZQ escaux PARDER PYC
Rule 65    escaux -> expresion cuadEsc nextexp
Rule 66    escaux -> CTESTRING cuadEsc nextexp
Rule 67    escaux -> llamada_esp nextexp
Rule 68    escaux -> llamada nextexp
Rule 69    cuadEsc -> <empty>
Rule 70    nextexp -> COMA escaux
Rule 71    nextexp -> empty
Rule 72    llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
Rule 73    llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub
Rule 74    pycopc -> PYC
Rule 75    pycopc -> empty
Rule 76    llamaux -> expresion cuadPar nextparametro
Rule 77    llamaux -> llamada_esp cuadPar nextparametro
Rule 78    llamaux -> CTESTRING cuadPar nextparametro
Rule 79    nextparametro -> COMA llamaux
Rule 80    nextparametro -> empty
Rule 81    checkFunc -> <empty>
Rule 82    cuadEra -> <empty>
Rule 83    cuadPar -> <empty>
Rule 84    verPars -> <empty>
Rule 85    cuadGoSub -> <empty>
Rule 86    condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
Rule 87    condicionAux -> else cuadGoto bloque
Rule 88    condicionAux -> empty
Rule 89    whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
Rule 90    migaja -> <empty>
Rule 91    cuadFinWhile -> <empty>
Rule 92    forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
Rule 93    checkExpFor -> <empty>
Rule 94    gotoFor -> <empty>
Rule 95    returnFor -> <empty>
Rule 96    lectura -> read PARIZQ ID checkID cuadRead PARDER PYC
Rule 97    cuadRead -> <empty>
Rule 98    estReturn -> return PARIZQ retAux PARDER PYC
Rule 99    retAux -> expresion cuadRet
Rule 100   retAux -> CTESTRING cuadRet
Rule 101   retAux -> true cuadRet
Rule 102   retAux -> false cuadRet
Rule 103   retAux -> llamada cuadRet
Rule 104   cuadRet -> <empty>
Rule 105   expresion -> andExpresion cuadAnd
Rule 106   expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd
Rule 107   cuadAnd -> <empty>
Rule 108   andExpresion -> relopExpresion cuadRelop
Rule 109   andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
Rule 110   cuadRelop -> <empty>
Rule 111   relopExpresion -> aritExpresion cuadArit
Rule 112   relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit
Rule 113   relopAux -> MAYORQUE pushOper
Rule 114   relopAux -> MENORQUE pushOper
Rule 115   relopAux -> EQUALS pushOper
Rule 116   relopAux -> DIFERENTE pushOper
Rule 117   aritExpresion -> term
Rule 118   aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm
Rule 119   aritAux -> MAS pushOper
Rule 120   aritAux -> MENOS pushOper
Rule 121   term -> factor
Rule 122   term -> factor cuadFactor termAux term cuadFactor
Rule 123   termAux -> MULT pushOper
Rule 124   termAux -> DIV pushOper
Rule 125   factor -> PARIZQ guardaFondo expresion PARDER quitaFondo
Rule 126   factor -> CTEINT pushOT
Rule 127   factor -> MENOS CTEINT pushOT
Rule 128   factor -> CTEFLOAT pushOT
Rule 129   factor -> true pushOT
Rule 130   factor -> false pushOT
Rule 131   factor -> ID checkIDfac pushOT
Rule 132   factor -> ID checkIDfac CORIZQ expresion CORDER pushOT
Rule 133   factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
Rule 134   factor -> llamada_esp
Rule 135   factor -> CTESTRING pushOT
Rule 136   factor -> llamada
Rule 137   checkIDfac -> <empty>
Rule 138   guardaFondo -> <empty>
Rule 139   quitaFondo -> <empty>
Rule 140   llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
Rule 141   llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC
Rule 142   cuadEspVoid -> <empty>
Rule 143   cuadEsp -> <empty>
Rule 144   especiales -> length guardaEsp
Rule 145   especiales -> max guardaEsp
Rule 146   especiales -> min guardaEsp
Rule 147   especiales -> avg guardaEsp
Rule 148   especiales -> median guardaEsp
Rule 149   especiales -> mode guardaEsp
Rule 150   especiales -> variance guardaEsp
Rule 151   especiales -> stdev guardaEsp
Rule 152   especialesVoid -> graph guardaEsp
Rule 153   especialesVoid -> printArray guardaEsp
Rule 154   especialesVoid -> printMatrix guardaEsp
Rule 155   guardaEsp -> <empty>
Rule 156   pushOper -> <empty>
Rule 157   pushOT -> <empty>
Rule 158   cuadTerm -> <empty>
Rule 159   cuadFactor -> <empty>
Rule 160   cuadArit -> <empty>
Rule 161   cuadGotof -> <empty>
Rule 162   cuadFinIf -> <empty>
Rule 163   cuadGoto -> <empty>
Rule 164   empty -> <empty>

Terminals, with rules where they appear

AND                  : 109
ASIGNA               : 55 56 57
COMA                 : 14 15 43 44 61 70 79 133
CORDER               : 13 14 42 43 60 61 132 133
CORIZQ               : 13 14 42 43 60 61 132 133
CTEBOOL              : 
CTEFLOAT             : 128
CTEINT               : 13 14 14 42 43 43 126 127
CTESTRING            : 57 66 78 100 135
DIFERENTE            : 116
DIV                  : 124
DOSPUNTOS            : 92
EQUALS               : 115
ID                   : 1 2 12 13 14 31 32 41 42 43 55 56 57 72 73 96 131 132 133 140 141
LLAVEDER             : 23 24
LLAVEIZQ             : 23 24
MAS                  : 119
MAYORQUE             : 113
MENORQUE             : 114
MENOS                : 120 127
MULT                 : 123
OR                   : 106
PARDER               : 21 31 32 64 72 73 86 89 92 96 98 125 140 141
PARIZQ               : 21 31 32 64 72 73 86 89 92 96 98 125 140 141
PUNTO                : 140 141
PYC                  : 1 1 2 2 10 48 55 56 57 64 74 96 98 141
avg                  : 147
bool                 : 30 39
else                 : 87
end                  : 1 2
error                : 
false                : 102 130
float                : 28 37
for                  : 92
func                 : 21 31 32
graph                : 152
if                   : 86
int                  : 27 36
length               : 144
main                 : 21
max                  : 145
median               : 148
min                  : 146
mode                 : 149
printArray           : 153
printMatrix          : 154
program              : 1 2
read                 : 96
return               : 98
stdev                : 151
string               : 29 38
true                 : 101 129
var                  : 10
variance             : 150
void                 : 40
while                : 89
write                : 64

Nonterminals, with rules where they appear

agregaDir            : 31 32
agregaFunc           : 21 31 32
agregaPar            : 41 42 43
agregaVar            : 12 13 14
andExpresion         : 105 106 106
aritAux              : 118
aritExpresion        : 111 112 112 118
asignacion           : 46
asignaux             : 55 56 57
auxprograma          : 1 2
bloque               : 21 31 32 86 87 89 92
bloqueaux            : 23 25
checkExpFor          : 92 92
checkFunc            : 72 73
checkID              : 55 56 57 96
checkIDfac           : 131 132 133 140 141
condicion            : 49
condicionAux         : 86
cuadAnd              : 105 106 106
cuadArit             : 111 112 112
cuadAsignacion       : 55 56 57
cuadEnd              : 1 2
cuadEndf             : 31 32
cuadEra              : 72 73
cuadEsc              : 65 66
cuadEsp              : 140
cuadEspVoid          : 141
cuadFactor           : 122 122
cuadFinIf            : 86
cuadFinWhile         : 89
cuadGoSub            : 72 73
cuadGoto             : 87
cuadGotoMain         : 1 2
cuadGotof            : 86 89
cuadPar              : 76 77 78
cuadRead             : 96
cuadRelop            : 108 109 109
cuadRet              : 99 100 101 102 103
cuadTerm             : 118 118
empty                : 2 7 9 11 16 24 32 45 62 71 75 80 88
escaux               : 64 70
escritura            : 47
especiales           : 140
especialesVoid       : 141
estReturn            : 53
estatuto             : 25 26
expresion            : 55 60 61 61 65 76 86 89 92 92 99 125 132 133 133
factor               : 121 122
fillMain             : 21
forloop              : 51
ftype                : 31 32
funcaux              : 31 44
function             : 8
gotoFor              : 92
guardaEsp            : 144 145 146 147 148 149 150 151 152 153 154
guardaFondo          : 72 125
guardarTipoFunc      : 36 37 38 39 40
guardarTipoVar       : 27 28 29 30
lectura              : 52
llamada              : 48 68 103 136
llamadaEspVoid       : 54
llamada_esp          : 56 67 77 134
llamaux              : 72 79
mainfunction         : 1 2
masParam             : 41 42 43
migaja               : 89
nextexp              : 65 66 67 68
nextparametro        : 76 77 78
nextvar              : 12 13 14
paux2                : 1 8
programa             : 0
pushOT               : 126 127 128 129 130 131 132 133 135
pushOTAsig           : 60 61
pushOper             : 106 109 113 114 115 116 119 120 123 124
pycopc               : 
quitaFondo           : 72 125
relopAux             : 112
relopExpresion       : 108 109 109
retAux               : 98
returnFor            : 92
term                 : 117 118 122
termAux              : 122
type                 : 10 41 42 43
vars                 : 6
varsaux              : 1 6 31 32
vaux                 : 10 15
verPars              : 72
whileloop            : 50

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> . program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program . cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (3) cuadGotoMain -> .

    ID              reduce using rule 3 (cuadGotoMain -> .)

    cuadGotoMain                   shift and go to state 3

state 3

    (1) programa -> program cuadGotoMain . ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program cuadGotoMain . auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (5) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4

  ! ID              [ reduce using rule 5 (auxprograma -> .) ]

    auxprograma                    shift and go to state 5

state 4

    (1) programa -> program cuadGotoMain ID . auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (5) auxprograma -> .

    PYC             reduce using rule 5 (auxprograma -> .)

    auxprograma                    shift and go to state 6

state 5

    (2) programa -> program cuadGotoMain auxprograma . ID PYC empty mainfunction end cuadEnd PYC

    ID              shift and go to state 7


state 6

    (1) programa -> program cuadGotoMain ID auxprograma . PYC varsaux paux2 mainfunction end cuadEnd PYC

    PYC             shift and go to state 8


state 7

    (2) programa -> program cuadGotoMain auxprograma ID . PYC empty mainfunction end cuadEnd PYC

    PYC             shift and go to state 9


state 8

    (1) programa -> program cuadGotoMain ID auxprograma PYC . varsaux paux2 mainfunction end cuadEnd PYC
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (164) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 164 (empty -> .)
    float           reduce using rule 164 (empty -> .)
    string          reduce using rule 164 (empty -> .)
    bool            reduce using rule 164 (empty -> .)
    void            reduce using rule 164 (empty -> .)
    func            reduce using rule 164 (empty -> .)

  ! var             [ reduce using rule 164 (empty -> .) ]

    varsaux                        shift and go to state 10
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 9

    (2) programa -> program cuadGotoMain auxprograma ID PYC . empty mainfunction end cuadEnd PYC
    (164) empty -> .

    func            reduce using rule 164 (empty -> .)

    empty                          shift and go to state 14

state 10

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux . paux2 mainfunction end cuadEnd PYC
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (31) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (164) empty -> .
    (36) ftype -> . int guardarTipoFunc
    (37) ftype -> . float guardarTipoFunc
    (38) ftype -> . string guardarTipoFunc
    (39) ftype -> . bool guardarTipoFunc
    (40) ftype -> . void guardarTipoFunc

    func            reduce using rule 164 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    paux2                          shift and go to state 15
    function                       shift and go to state 16
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 11

    (6) varsaux -> vars . varsaux
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (164) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 164 (empty -> .)
    float           reduce using rule 164 (empty -> .)
    string          reduce using rule 164 (empty -> .)
    bool            reduce using rule 164 (empty -> .)
    void            reduce using rule 164 (empty -> .)
    func            reduce using rule 164 (empty -> .)
    LLAVEIZQ        reduce using rule 164 (empty -> .)

  ! var             [ reduce using rule 164 (empty -> .) ]

    vars                           shift and go to state 11
    varsaux                        shift and go to state 24
    empty                          shift and go to state 12

state 12

    (7) varsaux -> empty .
    (11) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 7 (varsaux -> empty .)
    int             reduce using rule 7 (varsaux -> empty .)
    float           reduce using rule 7 (varsaux -> empty .)
    string          reduce using rule 7 (varsaux -> empty .)
    bool            reduce using rule 7 (varsaux -> empty .)
    void            reduce using rule 7 (varsaux -> empty .)
    func            reduce using rule 7 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 7 (varsaux -> empty .)
    var             reduce using rule 11 (vars -> empty .)

  ! int             [ reduce using rule 11 (vars -> empty .) ]
  ! float           [ reduce using rule 11 (vars -> empty .) ]
  ! string          [ reduce using rule 11 (vars -> empty .) ]
  ! bool            [ reduce using rule 11 (vars -> empty .) ]
  ! void            [ reduce using rule 11 (vars -> empty .) ]
  ! func            [ reduce using rule 11 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 11 (vars -> empty .) ]


state 13

    (10) vars -> var . type vaux PYC
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 25

state 14

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty . mainfunction end cuadEnd PYC
    (21) mainfunction -> . func main agregaFunc PARIZQ PARDER fillMain bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 30

state 15

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 . mainfunction end cuadEnd PYC
    (21) mainfunction -> . func main agregaFunc PARIZQ PARDER fillMain bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 32

state 16

    (8) paux2 -> function . paux2
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (31) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (164) empty -> .
    (36) ftype -> . int guardarTipoFunc
    (37) ftype -> . float guardarTipoFunc
    (38) ftype -> . string guardarTipoFunc
    (39) ftype -> . bool guardarTipoFunc
    (40) ftype -> . void guardarTipoFunc

    func            reduce using rule 164 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    function                       shift and go to state 16
    paux2                          shift and go to state 33
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 17

    (9) paux2 -> empty .

    func            reduce using rule 9 (paux2 -> empty .)


state 18

    (31) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    func            shift and go to state 34


state 19

    (36) ftype -> int . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (37) ftype -> float . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (38) ftype -> string . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (39) ftype -> bool . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (40) ftype -> void . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 39

state 24

    (6) varsaux -> vars varsaux .

    int             reduce using rule 6 (varsaux -> vars varsaux .)
    float           reduce using rule 6 (varsaux -> vars varsaux .)
    string          reduce using rule 6 (varsaux -> vars varsaux .)
    bool            reduce using rule 6 (varsaux -> vars varsaux .)
    void            reduce using rule 6 (varsaux -> vars varsaux .)
    func            reduce using rule 6 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 6 (varsaux -> vars varsaux .)


state 25

    (10) vars -> var type . vaux PYC
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 40

state 26

    (27) type -> int . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (28) type -> float . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (29) type -> string . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (30) type -> bool . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 45

state 30

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction . end cuadEnd PYC

    end             shift and go to state 46


state 31

    (21) mainfunction -> func . main agregaFunc PARIZQ PARDER fillMain bloque

    main            shift and go to state 47


state 32

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction . end cuadEnd PYC

    end             shift and go to state 48


state 33

    (8) paux2 -> function paux2 .

    func            reduce using rule 8 (paux2 -> function paux2 .)


state 34

    (31) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    ID              shift and go to state 49


state 35

    (36) ftype -> int guardarTipoFunc .

    func            reduce using rule 36 (ftype -> int guardarTipoFunc .)


state 36

    (37) ftype -> float guardarTipoFunc .

    func            reduce using rule 37 (ftype -> float guardarTipoFunc .)


state 37

    (38) ftype -> string guardarTipoFunc .

    func            reduce using rule 38 (ftype -> string guardarTipoFunc .)


state 38

    (39) ftype -> bool guardarTipoFunc .

    func            reduce using rule 39 (ftype -> bool guardarTipoFunc .)


state 39

    (40) ftype -> void guardarTipoFunc .

    func            reduce using rule 40 (ftype -> void guardarTipoFunc .)


state 40

    (10) vars -> var type vaux . PYC

    PYC             shift and go to state 50


state 41

    (12) vaux -> ID . agregaVar nextvar
    (13) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (17) agregaVar -> .

    CORIZQ          shift and go to state 52
    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 51

state 42

    (27) type -> int guardarTipoVar .

    ID              reduce using rule 27 (type -> int guardarTipoVar .)


state 43

    (28) type -> float guardarTipoVar .

    ID              reduce using rule 28 (type -> float guardarTipoVar .)


state 44

    (29) type -> string guardarTipoVar .

    ID              reduce using rule 29 (type -> string guardarTipoVar .)


state 45

    (30) type -> bool guardarTipoVar .

    ID              reduce using rule 30 (type -> bool guardarTipoVar .)


state 46

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 53

state 47

    (21) mainfunction -> func main . agregaFunc PARIZQ PARDER fillMain bloque
    (35) agregaFunc -> .

    PARIZQ          reduce using rule 35 (agregaFunc -> .)

    agregaFunc                     shift and go to state 54

state 48

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 55

state 49

    (31) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (35) agregaFunc -> .

    PARIZQ          reduce using rule 35 (agregaFunc -> .)

    agregaFunc                     shift and go to state 56

state 50

    (10) vars -> var type vaux PYC .

    var             reduce using rule 10 (vars -> var type vaux PYC .)
    int             reduce using rule 10 (vars -> var type vaux PYC .)
    float           reduce using rule 10 (vars -> var type vaux PYC .)
    string          reduce using rule 10 (vars -> var type vaux PYC .)
    bool            reduce using rule 10 (vars -> var type vaux PYC .)
    void            reduce using rule 10 (vars -> var type vaux PYC .)
    func            reduce using rule 10 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 10 (vars -> var type vaux PYC .)


state 51

    (12) vaux -> ID agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (164) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 164 (empty -> .)

    nextvar                        shift and go to state 57
    empty                          shift and go to state 59

state 52

    (13) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 60


state 53

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd . PYC

    PYC             shift and go to state 61


state 54

    (21) mainfunction -> func main agregaFunc . PARIZQ PARDER fillMain bloque

    PARIZQ          shift and go to state 62


state 55

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd . PYC

    PYC             shift and go to state 63


state 56

    (31) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    PARIZQ          shift and go to state 64


state 57

    (12) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID agregaVar nextvar .)


state 58

    (15) nextvar -> COMA . vaux
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 65

state 59

    (16) nextvar -> empty .

    PYC             reduce using rule 16 (nextvar -> empty .)


state 60

    (13) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 66
    COMA            shift and go to state 67


state 61

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .

    $end            reduce using rule 2 (programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .)


state 62

    (21) mainfunction -> func main agregaFunc PARIZQ . PARDER fillMain bloque

    PARDER          shift and go to state 68


state 63

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .

    $end            reduce using rule 1 (programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .)


state 64

    (31) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux agregaDir bloque cuadEndf
    (41) funcaux -> . type ID agregaPar masParam
    (42) funcaux -> . type ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (164) empty -> .
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    PARDER          reduce using rule 164 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 69
    empty                          shift and go to state 70
    type                           shift and go to state 71

state 65

    (15) nextvar -> COMA vaux .

    PYC             reduce using rule 15 (nextvar -> COMA vaux .)


state 66

    (13) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 72

state 67

    (14) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 73


state 68

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER . fillMain bloque
    (22) fillMain -> .

    LLAVEIZQ        reduce using rule 22 (fillMain -> .)

    fillMain                       shift and go to state 74

state 69

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux agregaDir bloque cuadEndf

    PARDER          shift and go to state 75


state 70

    (32) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux agregaDir bloque cuadEndf

    PARDER          shift and go to state 76


state 71

    (41) funcaux -> type . ID agregaPar masParam
    (42) funcaux -> type . ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> type . ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam

    ID              shift and go to state 77


state 72

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (164) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 164 (empty -> .)

    nextvar                        shift and go to state 78
    empty                          shift and go to state 59

state 73

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 79


state 74

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER fillMain . bloque
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 80

state 75

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux agregaDir bloque cuadEndf
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (164) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 164 (empty -> .)

  ! var             [ reduce using rule 164 (empty -> .) ]

    varsaux                        shift and go to state 82
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 76

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux agregaDir bloque cuadEndf
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (164) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 164 (empty -> .)

  ! var             [ reduce using rule 164 (empty -> .) ]

    empty                          shift and go to state 12
    varsaux                        shift and go to state 83
    vars                           shift and go to state 11

state 77

    (41) funcaux -> type ID . agregaPar masParam
    (42) funcaux -> type ID . CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> type ID . CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (18) agregaPar -> .

    CORIZQ          shift and go to state 85
    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 84

state 78

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 13 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 79

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 86

state 80

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque .

    end             reduce using rule 21 (mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque .)


state 81

    (23) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (24) bloque -> LLAVEIZQ . empty LLAVEDER
    (25) bloqueaux -> . estatuto bloqueaux
    (26) bloqueaux -> . estatuto
    (164) empty -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada PYC
    (49) estatuto -> . condicion
    (50) estatuto -> . whileloop
    (51) estatuto -> . forloop
    (52) estatuto -> . lectura
    (53) estatuto -> . estReturn
    (54) estatuto -> . llamadaEspVoid
    (55) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (56) asignacion -> . ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC
    (57) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (64) escritura -> . write PARIZQ escaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (86) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (89) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (92) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (96) lectura -> . read PARIZQ ID checkID cuadRead PARDER PYC
    (98) estReturn -> . return PARIZQ retAux PARDER PYC
    (141) llamadaEspVoid -> . ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC

    LLAVEDER        reduce using rule 164 (empty -> .)
    ID              shift and go to state 99
    write           shift and go to state 100
    if              shift and go to state 101
    while           shift and go to state 102
    for             shift and go to state 103
    read            shift and go to state 104
    return          shift and go to state 105

    bloqueaux                      shift and go to state 87
    empty                          shift and go to state 88
    estatuto                       shift and go to state 89
    asignacion                     shift and go to state 90
    escritura                      shift and go to state 91
    llamada                        shift and go to state 92
    condicion                      shift and go to state 93
    whileloop                      shift and go to state 94
    forloop                        shift and go to state 95
    lectura                        shift and go to state 96
    estReturn                      shift and go to state 97
    llamadaEspVoid                 shift and go to state 98

state 82

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . agregaDir bloque cuadEndf
    (33) agregaDir -> .

    LLAVEIZQ        reduce using rule 33 (agregaDir -> .)

    agregaDir                      shift and go to state 106

state 83

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . agregaDir bloque cuadEndf
    (33) agregaDir -> .

    LLAVEIZQ        reduce using rule 33 (agregaDir -> .)

    agregaDir                      shift and go to state 107

state 84

    (41) funcaux -> type ID agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (164) empty -> .

    COMA            shift and go to state 109
    PARDER          reduce using rule 164 (empty -> .)

    masParam                       shift and go to state 108
    empty                          shift and go to state 110

state 85

    (42) funcaux -> type ID CORIZQ . CTEINT CORDER agregaPar masParam
    (43) funcaux -> type ID CORIZQ . CTEINT COMA CTEINT CORDER agregaPar masParam

    CTEINT          shift and go to state 111


state 86

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (164) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 164 (empty -> .)

    nextvar                        shift and go to state 112
    empty                          shift and go to state 59

state 87

    (23) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 113


state 88

    (24) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 114


state 89

    (25) bloqueaux -> estatuto . bloqueaux
    (26) bloqueaux -> estatuto .
    (25) bloqueaux -> . estatuto bloqueaux
    (26) bloqueaux -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada PYC
    (49) estatuto -> . condicion
    (50) estatuto -> . whileloop
    (51) estatuto -> . forloop
    (52) estatuto -> . lectura
    (53) estatuto -> . estReturn
    (54) estatuto -> . llamadaEspVoid
    (55) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (56) asignacion -> . ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC
    (57) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (64) escritura -> . write PARIZQ escaux PARDER PYC
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (86) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (89) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (92) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (96) lectura -> . read PARIZQ ID checkID cuadRead PARDER PYC
    (98) estReturn -> . return PARIZQ retAux PARDER PYC
    (141) llamadaEspVoid -> . ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC

    LLAVEDER        reduce using rule 26 (bloqueaux -> estatuto .)
    ID              shift and go to state 99
    write           shift and go to state 100
    if              shift and go to state 101
    while           shift and go to state 102
    for             shift and go to state 103
    read            shift and go to state 104
    return          shift and go to state 105

    estatuto                       shift and go to state 89
    bloqueaux                      shift and go to state 115
    asignacion                     shift and go to state 90
    escritura                      shift and go to state 91
    llamada                        shift and go to state 92
    condicion                      shift and go to state 93
    whileloop                      shift and go to state 94
    forloop                        shift and go to state 95
    lectura                        shift and go to state 96
    estReturn                      shift and go to state 97
    llamadaEspVoid                 shift and go to state 98

state 90

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    write           reduce using rule 46 (estatuto -> asignacion .)
    if              reduce using rule 46 (estatuto -> asignacion .)
    while           reduce using rule 46 (estatuto -> asignacion .)
    for             reduce using rule 46 (estatuto -> asignacion .)
    read            reduce using rule 46 (estatuto -> asignacion .)
    return          reduce using rule 46 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 46 (estatuto -> asignacion .)


state 91

    (47) estatuto -> escritura .

    ID              reduce using rule 47 (estatuto -> escritura .)
    write           reduce using rule 47 (estatuto -> escritura .)
    if              reduce using rule 47 (estatuto -> escritura .)
    while           reduce using rule 47 (estatuto -> escritura .)
    for             reduce using rule 47 (estatuto -> escritura .)
    read            reduce using rule 47 (estatuto -> escritura .)
    return          reduce using rule 47 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 47 (estatuto -> escritura .)


state 92

    (48) estatuto -> llamada . PYC

    PYC             shift and go to state 116


state 93

    (49) estatuto -> condicion .

    ID              reduce using rule 49 (estatuto -> condicion .)
    write           reduce using rule 49 (estatuto -> condicion .)
    if              reduce using rule 49 (estatuto -> condicion .)
    while           reduce using rule 49 (estatuto -> condicion .)
    for             reduce using rule 49 (estatuto -> condicion .)
    read            reduce using rule 49 (estatuto -> condicion .)
    return          reduce using rule 49 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 49 (estatuto -> condicion .)


state 94

    (50) estatuto -> whileloop .

    ID              reduce using rule 50 (estatuto -> whileloop .)
    write           reduce using rule 50 (estatuto -> whileloop .)
    if              reduce using rule 50 (estatuto -> whileloop .)
    while           reduce using rule 50 (estatuto -> whileloop .)
    for             reduce using rule 50 (estatuto -> whileloop .)
    read            reduce using rule 50 (estatuto -> whileloop .)
    return          reduce using rule 50 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 50 (estatuto -> whileloop .)


state 95

    (51) estatuto -> forloop .

    ID              reduce using rule 51 (estatuto -> forloop .)
    write           reduce using rule 51 (estatuto -> forloop .)
    if              reduce using rule 51 (estatuto -> forloop .)
    while           reduce using rule 51 (estatuto -> forloop .)
    for             reduce using rule 51 (estatuto -> forloop .)
    read            reduce using rule 51 (estatuto -> forloop .)
    return          reduce using rule 51 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 51 (estatuto -> forloop .)


state 96

    (52) estatuto -> lectura .

    ID              reduce using rule 52 (estatuto -> lectura .)
    write           reduce using rule 52 (estatuto -> lectura .)
    if              reduce using rule 52 (estatuto -> lectura .)
    while           reduce using rule 52 (estatuto -> lectura .)
    for             reduce using rule 52 (estatuto -> lectura .)
    read            reduce using rule 52 (estatuto -> lectura .)
    return          reduce using rule 52 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 52 (estatuto -> lectura .)


state 97

    (53) estatuto -> estReturn .

    ID              reduce using rule 53 (estatuto -> estReturn .)
    write           reduce using rule 53 (estatuto -> estReturn .)
    if              reduce using rule 53 (estatuto -> estReturn .)
    while           reduce using rule 53 (estatuto -> estReturn .)
    for             reduce using rule 53 (estatuto -> estReturn .)
    read            reduce using rule 53 (estatuto -> estReturn .)
    return          reduce using rule 53 (estatuto -> estReturn .)
    LLAVEDER        reduce using rule 53 (estatuto -> estReturn .)


state 98

    (54) estatuto -> llamadaEspVoid .

    ID              reduce using rule 54 (estatuto -> llamadaEspVoid .)
    write           reduce using rule 54 (estatuto -> llamadaEspVoid .)
    if              reduce using rule 54 (estatuto -> llamadaEspVoid .)
    while           reduce using rule 54 (estatuto -> llamadaEspVoid .)
    for             reduce using rule 54 (estatuto -> llamadaEspVoid .)
    read            reduce using rule 54 (estatuto -> llamadaEspVoid .)
    return          reduce using rule 54 (estatuto -> llamadaEspVoid .)
    LLAVEDER        reduce using rule 54 (estatuto -> llamadaEspVoid .)


state 99

    (55) asignacion -> ID . checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (56) asignacion -> ID . checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC
    (57) asignacion -> ID . checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (72) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (141) llamadaEspVoid -> ID . checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC
    (58) checkID -> .
    (81) checkFunc -> .
    (137) checkIDfac -> .

    CORIZQ          reduce using rule 58 (checkID -> .)
    ASIGNA          reduce using rule 58 (checkID -> .)
    PARIZQ          reduce using rule 81 (checkFunc -> .)
    PUNTO           reduce using rule 137 (checkIDfac -> .)

    checkID                        shift and go to state 117
    checkFunc                      shift and go to state 118
    checkIDfac                     shift and go to state 119

state 100

    (64) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 120


state 101

    (86) condicion -> if . PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf

    PARIZQ          shift and go to state 121


state 102

    (89) whileloop -> while . migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (90) migaja -> .

    PARIZQ          reduce using rule 90 (migaja -> .)

    migaja                         shift and go to state 122

state 103

    (92) forloop -> for . PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    PARIZQ          shift and go to state 123


state 104

    (96) lectura -> read . PARIZQ ID checkID cuadRead PARDER PYC

    PARIZQ          shift and go to state 124


state 105

    (98) estReturn -> return . PARIZQ retAux PARDER PYC

    PARIZQ          shift and go to state 125


state 106

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir . bloque cuadEndf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 126

state 107

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir . bloque cuadEndf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 127

state 108

    (41) funcaux -> type ID agregaPar masParam .

    PARDER          reduce using rule 41 (funcaux -> type ID agregaPar masParam .)


state 109

    (44) masParam -> COMA . funcaux
    (41) funcaux -> . type ID agregaPar masParam
    (42) funcaux -> . type ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 128
    type                           shift and go to state 71

state 110

    (45) masParam -> empty .

    PARDER          reduce using rule 45 (masParam -> empty .)


state 111

    (42) funcaux -> type ID CORIZQ CTEINT . CORDER agregaPar masParam
    (43) funcaux -> type ID CORIZQ CTEINT . COMA CTEINT CORDER agregaPar masParam

    CORDER          shift and go to state 129
    COMA            shift and go to state 130


state 112

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 14 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 113

    (23) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    return          reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 114

    (24) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    return          reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 115

    (25) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 25 (bloqueaux -> estatuto bloqueaux .)


state 116

    (48) estatuto -> llamada PYC .

    ID              reduce using rule 48 (estatuto -> llamada PYC .)
    write           reduce using rule 48 (estatuto -> llamada PYC .)
    if              reduce using rule 48 (estatuto -> llamada PYC .)
    while           reduce using rule 48 (estatuto -> llamada PYC .)
    for             reduce using rule 48 (estatuto -> llamada PYC .)
    read            reduce using rule 48 (estatuto -> llamada PYC .)
    return          reduce using rule 48 (estatuto -> llamada PYC .)
    LLAVEDER        reduce using rule 48 (estatuto -> llamada PYC .)


state 117

    (55) asignacion -> ID checkID . asignaux ASIGNA expresion cuadAsignacion PYC
    (56) asignacion -> ID checkID . asignaux ASIGNA llamada_esp cuadAsignacion PYC
    (57) asignacion -> ID checkID . asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (60) asignaux -> . CORIZQ expresion CORDER pushOTAsig
    (61) asignaux -> . CORIZQ expresion COMA expresion CORDER pushOTAsig
    (62) asignaux -> . empty
    (164) empty -> .

    CORIZQ          shift and go to state 132
    ASIGNA          reduce using rule 164 (empty -> .)

    asignaux                       shift and go to state 131
    empty                          shift and go to state 133

state 118

    (72) llamada -> ID checkFunc . cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID checkFunc . cuadEra PARIZQ PARDER cuadGoSub
    (82) cuadEra -> .

    PARIZQ          reduce using rule 82 (cuadEra -> .)

    cuadEra                        shift and go to state 134

state 119

    (141) llamadaEspVoid -> ID checkIDfac . PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC

    PUNTO           shift and go to state 135


state 120

    (64) escritura -> write PARIZQ . escaux PARDER PYC
    (65) escaux -> . expresion cuadEsc nextexp
    (66) escaux -> . CTESTRING cuadEsc nextexp
    (67) escaux -> . llamada_esp nextexp
    (68) escaux -> . llamada nextexp
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada

    CTESTRING       shift and go to state 139
    ID              shift and go to state 143
    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152

    escaux                         shift and go to state 137
    expresion                      shift and go to state 138
    llamada_esp                    shift and go to state 140
    llamada                        shift and go to state 141
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147

state 121

    (86) condicion -> if PARIZQ . expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 153
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 122

    (89) whileloop -> while migaja . PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile

    PARIZQ          shift and go to state 158


state 123

    (92) forloop -> for PARIZQ . expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 159
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 124

    (96) lectura -> read PARIZQ . ID checkID cuadRead PARDER PYC

    ID              shift and go to state 160


state 125

    (98) estReturn -> return PARIZQ . retAux PARDER PYC
    (99) retAux -> . expresion cuadRet
    (100) retAux -> . CTESTRING cuadRet
    (101) retAux -> . true cuadRet
    (102) retAux -> . false cuadRet
    (103) retAux -> . llamada cuadRet
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp

    CTESTRING       shift and go to state 163
    true            shift and go to state 164
    false           shift and go to state 165
    ID              shift and go to state 167
    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150

    retAux                         shift and go to state 161
    expresion                      shift and go to state 162
    llamada                        shift and go to state 166
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155

state 126

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque . cuadEndf
    (34) cuadEndf -> .

    int             reduce using rule 34 (cuadEndf -> .)
    float           reduce using rule 34 (cuadEndf -> .)
    string          reduce using rule 34 (cuadEndf -> .)
    bool            reduce using rule 34 (cuadEndf -> .)
    void            reduce using rule 34 (cuadEndf -> .)
    func            reduce using rule 34 (cuadEndf -> .)

    cuadEndf                       shift and go to state 168

state 127

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque . cuadEndf
    (34) cuadEndf -> .

    int             reduce using rule 34 (cuadEndf -> .)
    float           reduce using rule 34 (cuadEndf -> .)
    string          reduce using rule 34 (cuadEndf -> .)
    bool            reduce using rule 34 (cuadEndf -> .)
    void            reduce using rule 34 (cuadEndf -> .)
    func            reduce using rule 34 (cuadEndf -> .)

    cuadEndf                       shift and go to state 169

state 128

    (44) masParam -> COMA funcaux .

    PARDER          reduce using rule 44 (masParam -> COMA funcaux .)


state 129

    (42) funcaux -> type ID CORIZQ CTEINT CORDER . agregaPar masParam
    (18) agregaPar -> .

    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 170

state 130

    (43) funcaux -> type ID CORIZQ CTEINT COMA . CTEINT CORDER agregaPar masParam

    CTEINT          shift and go to state 171


state 131

    (55) asignacion -> ID checkID asignaux . ASIGNA expresion cuadAsignacion PYC
    (56) asignacion -> ID checkID asignaux . ASIGNA llamada_esp cuadAsignacion PYC
    (57) asignacion -> ID checkID asignaux . ASIGNA CTESTRING cuadAsignacion PYC

    ASIGNA          shift and go to state 172


state 132

    (60) asignaux -> CORIZQ . expresion CORDER pushOTAsig
    (61) asignaux -> CORIZQ . expresion COMA expresion CORDER pushOTAsig
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 173
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 133

    (62) asignaux -> empty .

    ASIGNA          reduce using rule 62 (asignaux -> empty .)


state 134

    (72) llamada -> ID checkFunc cuadEra . PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID checkFunc cuadEra . PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 174


state 135

    (141) llamadaEspVoid -> ID checkIDfac PUNTO . especialesVoid PARIZQ PARDER cuadEspVoid PYC
    (152) especialesVoid -> . graph guardaEsp
    (153) especialesVoid -> . printArray guardaEsp
    (154) especialesVoid -> . printMatrix guardaEsp

    graph           shift and go to state 176
    printArray      shift and go to state 177
    printMatrix     shift and go to state 178

    especialesVoid                 shift and go to state 175

state 136

    (125) factor -> PARIZQ . guardaFondo expresion PARDER quitaFondo
    (138) guardaFondo -> .

    PARIZQ          reduce using rule 138 (guardaFondo -> .)
    CTEINT          reduce using rule 138 (guardaFondo -> .)
    MENOS           reduce using rule 138 (guardaFondo -> .)
    CTEFLOAT        reduce using rule 138 (guardaFondo -> .)
    true            reduce using rule 138 (guardaFondo -> .)
    false           reduce using rule 138 (guardaFondo -> .)
    ID              reduce using rule 138 (guardaFondo -> .)
    CTESTRING       reduce using rule 138 (guardaFondo -> .)

    guardaFondo                    shift and go to state 179

state 137

    (64) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 180


state 138

    (65) escaux -> expresion . cuadEsc nextexp
    (69) cuadEsc -> .

    COMA            reduce using rule 69 (cuadEsc -> .)
    PARDER          reduce using rule 69 (cuadEsc -> .)

    cuadEsc                        shift and go to state 181

state 139

    (66) escaux -> CTESTRING . cuadEsc nextexp
    (135) factor -> CTESTRING . pushOT
    (69) cuadEsc -> .
    (157) pushOT -> .

  ! reduce/reduce conflict for COMA resolved using rule 69 (cuadEsc -> .)
  ! reduce/reduce conflict for PARDER resolved using rule 69 (cuadEsc -> .)
    COMA            reduce using rule 69 (cuadEsc -> .)
    PARDER          reduce using rule 69 (cuadEsc -> .)
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)

  ! COMA            [ reduce using rule 157 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 157 (pushOT -> .) ]

    cuadEsc                        shift and go to state 182
    pushOT                         shift and go to state 183

state 140

    (67) escaux -> llamada_esp . nextexp
    (134) factor -> llamada_esp .
    (70) nextexp -> . COMA escaux
    (71) nextexp -> . empty
    (164) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 134 (factor -> llamada_esp .)
    MULT            reduce using rule 134 (factor -> llamada_esp .)
    DIV             reduce using rule 134 (factor -> llamada_esp .)
    MAS             reduce using rule 134 (factor -> llamada_esp .)
    MENOS           reduce using rule 134 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 134 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 134 (factor -> llamada_esp .)
    EQUALS          reduce using rule 134 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 134 (factor -> llamada_esp .)
    AND             reduce using rule 134 (factor -> llamada_esp .)
    OR              reduce using rule 134 (factor -> llamada_esp .)
    PARDER          reduce using rule 134 (factor -> llamada_esp .)
    COMA            shift and go to state 185

  ! COMA            [ reduce using rule 134 (factor -> llamada_esp .) ]
  ! PARDER          [ reduce using rule 164 (empty -> .) ]

    nextexp                        shift and go to state 184
    empty                          shift and go to state 186

state 141

    (68) escaux -> llamada . nextexp
    (136) factor -> llamada .
    (70) nextexp -> . COMA escaux
    (71) nextexp -> . empty
    (164) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 136 (factor -> llamada .)
    MULT            reduce using rule 136 (factor -> llamada .)
    DIV             reduce using rule 136 (factor -> llamada .)
    MAS             reduce using rule 136 (factor -> llamada .)
    MENOS           reduce using rule 136 (factor -> llamada .)
    MAYORQUE        reduce using rule 136 (factor -> llamada .)
    MENORQUE        reduce using rule 136 (factor -> llamada .)
    EQUALS          reduce using rule 136 (factor -> llamada .)
    DIFERENTE       reduce using rule 136 (factor -> llamada .)
    AND             reduce using rule 136 (factor -> llamada .)
    OR              reduce using rule 136 (factor -> llamada .)
    PARDER          reduce using rule 136 (factor -> llamada .)
    COMA            shift and go to state 185

  ! COMA            [ reduce using rule 136 (factor -> llamada .) ]
  ! PARDER          [ reduce using rule 164 (empty -> .) ]

    nextexp                        shift and go to state 187
    empty                          shift and go to state 186

state 142

    (105) expresion -> andExpresion . cuadAnd
    (106) expresion -> andExpresion . cuadAnd OR pushOper andExpresion cuadAnd
    (107) cuadAnd -> .

    OR              reduce using rule 107 (cuadAnd -> .)
    COMA            reduce using rule 107 (cuadAnd -> .)
    PARDER          reduce using rule 107 (cuadAnd -> .)
    DOSPUNTOS       reduce using rule 107 (cuadAnd -> .)
    CORDER          reduce using rule 107 (cuadAnd -> .)
    PYC             reduce using rule 107 (cuadAnd -> .)

    cuadAnd                        shift and go to state 188

state 143

    (140) llamada_esp -> ID . checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (131) factor -> ID . checkIDfac pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (137) checkIDfac -> .
    (81) checkFunc -> .

    PUNTO           reduce using rule 137 (checkIDfac -> .)
    CORIZQ          reduce using rule 137 (checkIDfac -> .)
    MULT            reduce using rule 137 (checkIDfac -> .)
    DIV             reduce using rule 137 (checkIDfac -> .)
    MAS             reduce using rule 137 (checkIDfac -> .)
    MENOS           reduce using rule 137 (checkIDfac -> .)
    MAYORQUE        reduce using rule 137 (checkIDfac -> .)
    MENORQUE        reduce using rule 137 (checkIDfac -> .)
    EQUALS          reduce using rule 137 (checkIDfac -> .)
    DIFERENTE       reduce using rule 137 (checkIDfac -> .)
    AND             reduce using rule 137 (checkIDfac -> .)
    OR              reduce using rule 137 (checkIDfac -> .)
    COMA            reduce using rule 137 (checkIDfac -> .)
    PARDER          reduce using rule 137 (checkIDfac -> .)
    PARIZQ          reduce using rule 81 (checkFunc -> .)

    checkIDfac                     shift and go to state 189
    checkFunc                      shift and go to state 118

state 144

    (108) andExpresion -> relopExpresion . cuadRelop
    (109) andExpresion -> relopExpresion . cuadRelop AND pushOper relopExpresion cuadRelop
    (110) cuadRelop -> .

    AND             reduce using rule 110 (cuadRelop -> .)
    OR              reduce using rule 110 (cuadRelop -> .)
    COMA            reduce using rule 110 (cuadRelop -> .)
    PARDER          reduce using rule 110 (cuadRelop -> .)
    DOSPUNTOS       reduce using rule 110 (cuadRelop -> .)
    CORDER          reduce using rule 110 (cuadRelop -> .)
    PYC             reduce using rule 110 (cuadRelop -> .)

    cuadRelop                      shift and go to state 190

state 145

    (111) relopExpresion -> aritExpresion . cuadArit
    (112) relopExpresion -> aritExpresion . cuadArit relopAux aritExpresion cuadArit
    (160) cuadArit -> .

    MAYORQUE        reduce using rule 160 (cuadArit -> .)
    MENORQUE        reduce using rule 160 (cuadArit -> .)
    EQUALS          reduce using rule 160 (cuadArit -> .)
    DIFERENTE       reduce using rule 160 (cuadArit -> .)
    AND             reduce using rule 160 (cuadArit -> .)
    OR              reduce using rule 160 (cuadArit -> .)
    COMA            reduce using rule 160 (cuadArit -> .)
    PARDER          reduce using rule 160 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 160 (cuadArit -> .)
    CORDER          reduce using rule 160 (cuadArit -> .)
    PYC             reduce using rule 160 (cuadArit -> .)

    cuadArit                       shift and go to state 191

state 146

    (117) aritExpresion -> term .
    (118) aritExpresion -> term . cuadTerm aritAux aritExpresion cuadTerm
    (158) cuadTerm -> .

    MAYORQUE        reduce using rule 117 (aritExpresion -> term .)
    MENORQUE        reduce using rule 117 (aritExpresion -> term .)
    EQUALS          reduce using rule 117 (aritExpresion -> term .)
    DIFERENTE       reduce using rule 117 (aritExpresion -> term .)
    AND             reduce using rule 117 (aritExpresion -> term .)
    OR              reduce using rule 117 (aritExpresion -> term .)
    COMA            reduce using rule 117 (aritExpresion -> term .)
    PARDER          reduce using rule 117 (aritExpresion -> term .)
    DOSPUNTOS       reduce using rule 117 (aritExpresion -> term .)
    CORDER          reduce using rule 117 (aritExpresion -> term .)
    PYC             reduce using rule 117 (aritExpresion -> term .)
    MAS             reduce using rule 158 (cuadTerm -> .)
    MENOS           reduce using rule 158 (cuadTerm -> .)

    cuadTerm                       shift and go to state 192

state 147

    (121) term -> factor .
    (122) term -> factor . cuadFactor termAux term cuadFactor
    (159) cuadFactor -> .

    MAS             reduce using rule 121 (term -> factor .)
    MENOS           reduce using rule 121 (term -> factor .)
    MAYORQUE        reduce using rule 121 (term -> factor .)
    MENORQUE        reduce using rule 121 (term -> factor .)
    EQUALS          reduce using rule 121 (term -> factor .)
    DIFERENTE       reduce using rule 121 (term -> factor .)
    AND             reduce using rule 121 (term -> factor .)
    OR              reduce using rule 121 (term -> factor .)
    COMA            reduce using rule 121 (term -> factor .)
    PARDER          reduce using rule 121 (term -> factor .)
    DOSPUNTOS       reduce using rule 121 (term -> factor .)
    CORDER          reduce using rule 121 (term -> factor .)
    PYC             reduce using rule 121 (term -> factor .)
    MULT            reduce using rule 159 (cuadFactor -> .)
    DIV             reduce using rule 159 (cuadFactor -> .)

    cuadFactor                     shift and go to state 193

state 148

    (126) factor -> CTEINT . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 194

state 149

    (127) factor -> MENOS . CTEINT pushOT

    CTEINT          shift and go to state 195


state 150

    (128) factor -> CTEFLOAT . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 196

state 151

    (129) factor -> true . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 197

state 152

    (130) factor -> false . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 198

state 153

    (86) condicion -> if PARIZQ expresion . PARDER cuadGotof bloque condicionAux cuadFinIf

    PARDER          shift and go to state 199


state 154

    (131) factor -> ID . checkIDfac pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (140) llamada_esp -> ID . checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (137) checkIDfac -> .
    (81) checkFunc -> .

    CORIZQ          reduce using rule 137 (checkIDfac -> .)
    PUNTO           reduce using rule 137 (checkIDfac -> .)
    MULT            reduce using rule 137 (checkIDfac -> .)
    DIV             reduce using rule 137 (checkIDfac -> .)
    MAS             reduce using rule 137 (checkIDfac -> .)
    MENOS           reduce using rule 137 (checkIDfac -> .)
    MAYORQUE        reduce using rule 137 (checkIDfac -> .)
    MENORQUE        reduce using rule 137 (checkIDfac -> .)
    EQUALS          reduce using rule 137 (checkIDfac -> .)
    DIFERENTE       reduce using rule 137 (checkIDfac -> .)
    AND             reduce using rule 137 (checkIDfac -> .)
    OR              reduce using rule 137 (checkIDfac -> .)
    PARDER          reduce using rule 137 (checkIDfac -> .)
    DOSPUNTOS       reduce using rule 137 (checkIDfac -> .)
    CORDER          reduce using rule 137 (checkIDfac -> .)
    COMA            reduce using rule 137 (checkIDfac -> .)
    PYC             reduce using rule 137 (checkIDfac -> .)
    PARIZQ          reduce using rule 81 (checkFunc -> .)

    checkIDfac                     shift and go to state 200
    checkFunc                      shift and go to state 118

state 155

    (134) factor -> llamada_esp .

    MULT            reduce using rule 134 (factor -> llamada_esp .)
    DIV             reduce using rule 134 (factor -> llamada_esp .)
    MAS             reduce using rule 134 (factor -> llamada_esp .)
    MENOS           reduce using rule 134 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 134 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 134 (factor -> llamada_esp .)
    EQUALS          reduce using rule 134 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 134 (factor -> llamada_esp .)
    AND             reduce using rule 134 (factor -> llamada_esp .)
    OR              reduce using rule 134 (factor -> llamada_esp .)
    PARDER          reduce using rule 134 (factor -> llamada_esp .)
    DOSPUNTOS       reduce using rule 134 (factor -> llamada_esp .)
    CORDER          reduce using rule 134 (factor -> llamada_esp .)
    COMA            reduce using rule 134 (factor -> llamada_esp .)
    PYC             reduce using rule 134 (factor -> llamada_esp .)


state 156

    (135) factor -> CTESTRING . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 183

state 157

    (136) factor -> llamada .

    MULT            reduce using rule 136 (factor -> llamada .)
    DIV             reduce using rule 136 (factor -> llamada .)
    MAS             reduce using rule 136 (factor -> llamada .)
    MENOS           reduce using rule 136 (factor -> llamada .)
    MAYORQUE        reduce using rule 136 (factor -> llamada .)
    MENORQUE        reduce using rule 136 (factor -> llamada .)
    EQUALS          reduce using rule 136 (factor -> llamada .)
    DIFERENTE       reduce using rule 136 (factor -> llamada .)
    AND             reduce using rule 136 (factor -> llamada .)
    OR              reduce using rule 136 (factor -> llamada .)
    PARDER          reduce using rule 136 (factor -> llamada .)
    DOSPUNTOS       reduce using rule 136 (factor -> llamada .)
    CORDER          reduce using rule 136 (factor -> llamada .)
    COMA            reduce using rule 136 (factor -> llamada .)
    PYC             reduce using rule 136 (factor -> llamada .)


state 158

    (89) whileloop -> while migaja PARIZQ . expresion PARDER cuadGotof bloque cuadFinWhile
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 201
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 159

    (92) forloop -> for PARIZQ expresion . checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (93) checkExpFor -> .

    DOSPUNTOS       reduce using rule 93 (checkExpFor -> .)

    checkExpFor                    shift and go to state 202

state 160

    (96) lectura -> read PARIZQ ID . checkID cuadRead PARDER PYC
    (58) checkID -> .

    PARDER          reduce using rule 58 (checkID -> .)

    checkID                        shift and go to state 203

state 161

    (98) estReturn -> return PARIZQ retAux . PARDER PYC

    PARDER          shift and go to state 204


state 162

    (99) retAux -> expresion . cuadRet
    (104) cuadRet -> .

    PARDER          reduce using rule 104 (cuadRet -> .)

    cuadRet                        shift and go to state 205

state 163

    (100) retAux -> CTESTRING . cuadRet
    (135) factor -> CTESTRING . pushOT
    (104) cuadRet -> .
    (157) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 104 (cuadRet -> .)
    PARDER          reduce using rule 104 (cuadRet -> .)
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)

  ! PARDER          [ reduce using rule 157 (pushOT -> .) ]

    cuadRet                        shift and go to state 206
    pushOT                         shift and go to state 183

state 164

    (101) retAux -> true . cuadRet
    (129) factor -> true . pushOT
    (104) cuadRet -> .
    (157) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 104 (cuadRet -> .)
    PARDER          reduce using rule 104 (cuadRet -> .)
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)

  ! PARDER          [ reduce using rule 157 (pushOT -> .) ]

    cuadRet                        shift and go to state 207
    pushOT                         shift and go to state 197

state 165

    (102) retAux -> false . cuadRet
    (130) factor -> false . pushOT
    (104) cuadRet -> .
    (157) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 104 (cuadRet -> .)
    PARDER          reduce using rule 104 (cuadRet -> .)
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)

  ! PARDER          [ reduce using rule 157 (pushOT -> .) ]

    cuadRet                        shift and go to state 208
    pushOT                         shift and go to state 198

state 166

    (103) retAux -> llamada . cuadRet
    (136) factor -> llamada .
    (104) cuadRet -> .

  ! reduce/reduce conflict for PARDER resolved using rule 104 (cuadRet -> .)
    MULT            reduce using rule 136 (factor -> llamada .)
    DIV             reduce using rule 136 (factor -> llamada .)
    MAS             reduce using rule 136 (factor -> llamada .)
    MENOS           reduce using rule 136 (factor -> llamada .)
    MAYORQUE        reduce using rule 136 (factor -> llamada .)
    MENORQUE        reduce using rule 136 (factor -> llamada .)
    EQUALS          reduce using rule 136 (factor -> llamada .)
    DIFERENTE       reduce using rule 136 (factor -> llamada .)
    AND             reduce using rule 136 (factor -> llamada .)
    OR              reduce using rule 136 (factor -> llamada .)
    PARDER          reduce using rule 104 (cuadRet -> .)

  ! PARDER          [ reduce using rule 136 (factor -> llamada .) ]

    cuadRet                        shift and go to state 209

state 167

    (72) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (131) factor -> ID . checkIDfac pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (140) llamada_esp -> ID . checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (81) checkFunc -> .
    (137) checkIDfac -> .

    PARIZQ          reduce using rule 81 (checkFunc -> .)
    CORIZQ          reduce using rule 137 (checkIDfac -> .)
    PUNTO           reduce using rule 137 (checkIDfac -> .)
    MULT            reduce using rule 137 (checkIDfac -> .)
    DIV             reduce using rule 137 (checkIDfac -> .)
    MAS             reduce using rule 137 (checkIDfac -> .)
    MENOS           reduce using rule 137 (checkIDfac -> .)
    MAYORQUE        reduce using rule 137 (checkIDfac -> .)
    MENORQUE        reduce using rule 137 (checkIDfac -> .)
    EQUALS          reduce using rule 137 (checkIDfac -> .)
    DIFERENTE       reduce using rule 137 (checkIDfac -> .)
    AND             reduce using rule 137 (checkIDfac -> .)
    OR              reduce using rule 137 (checkIDfac -> .)
    PARDER          reduce using rule 137 (checkIDfac -> .)

    checkFunc                      shift and go to state 118
    checkIDfac                     shift and go to state 200

state 168

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .

    int             reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    float           reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    string          reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    bool            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    void            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    func            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)


state 169

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .

    int             reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    float           reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    string          reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    bool            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    void            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    func            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)


state 170

    (42) funcaux -> type ID CORIZQ CTEINT CORDER agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (164) empty -> .

    COMA            shift and go to state 109
    PARDER          reduce using rule 164 (empty -> .)

    masParam                       shift and go to state 210
    empty                          shift and go to state 110

state 171

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT . CORDER agregaPar masParam

    CORDER          shift and go to state 211


state 172

    (55) asignacion -> ID checkID asignaux ASIGNA . expresion cuadAsignacion PYC
    (56) asignacion -> ID checkID asignaux ASIGNA . llamada_esp cuadAsignacion PYC
    (57) asignacion -> ID checkID asignaux ASIGNA . CTESTRING cuadAsignacion PYC
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    CTESTRING       shift and go to state 215
    ID              shift and go to state 212
    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152

    expresion                      shift and go to state 213
    llamada_esp                    shift and go to state 214
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada                        shift and go to state 157

state 173

    (60) asignaux -> CORIZQ expresion . CORDER pushOTAsig
    (61) asignaux -> CORIZQ expresion . COMA expresion CORDER pushOTAsig

    CORDER          shift and go to state 216
    COMA            shift and go to state 217


state 174

    (72) llamada -> ID checkFunc cuadEra PARIZQ . guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID checkFunc cuadEra PARIZQ . PARDER cuadGoSub
    (138) guardaFondo -> .

    PARDER          shift and go to state 219
    CTESTRING       reduce using rule 138 (guardaFondo -> .)
    ID              reduce using rule 138 (guardaFondo -> .)
    PARIZQ          reduce using rule 138 (guardaFondo -> .)
    CTEINT          reduce using rule 138 (guardaFondo -> .)
    MENOS           reduce using rule 138 (guardaFondo -> .)
    CTEFLOAT        reduce using rule 138 (guardaFondo -> .)
    true            reduce using rule 138 (guardaFondo -> .)
    false           reduce using rule 138 (guardaFondo -> .)

    guardaFondo                    shift and go to state 218

state 175

    (141) llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid . PARIZQ PARDER cuadEspVoid PYC

    PARIZQ          shift and go to state 220


state 176

    (152) especialesVoid -> graph . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 221

state 177

    (153) especialesVoid -> printArray . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 222

state 178

    (154) especialesVoid -> printMatrix . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 223

state 179

    (125) factor -> PARIZQ guardaFondo . expresion PARDER quitaFondo
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 224
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 180

    (64) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 225


state 181

    (65) escaux -> expresion cuadEsc . nextexp
    (70) nextexp -> . COMA escaux
    (71) nextexp -> . empty
    (164) empty -> .

    COMA            shift and go to state 185
    PARDER          reduce using rule 164 (empty -> .)

    nextexp                        shift and go to state 226
    empty                          shift and go to state 186

state 182

    (66) escaux -> CTESTRING cuadEsc . nextexp
    (70) nextexp -> . COMA escaux
    (71) nextexp -> . empty
    (164) empty -> .

    COMA            shift and go to state 185
    PARDER          reduce using rule 164 (empty -> .)

    nextexp                        shift and go to state 227
    empty                          shift and go to state 186

state 183

    (135) factor -> CTESTRING pushOT .

    MULT            reduce using rule 135 (factor -> CTESTRING pushOT .)
    DIV             reduce using rule 135 (factor -> CTESTRING pushOT .)
    MAS             reduce using rule 135 (factor -> CTESTRING pushOT .)
    MENOS           reduce using rule 135 (factor -> CTESTRING pushOT .)
    MAYORQUE        reduce using rule 135 (factor -> CTESTRING pushOT .)
    MENORQUE        reduce using rule 135 (factor -> CTESTRING pushOT .)
    EQUALS          reduce using rule 135 (factor -> CTESTRING pushOT .)
    DIFERENTE       reduce using rule 135 (factor -> CTESTRING pushOT .)
    AND             reduce using rule 135 (factor -> CTESTRING pushOT .)
    OR              reduce using rule 135 (factor -> CTESTRING pushOT .)
    COMA            reduce using rule 135 (factor -> CTESTRING pushOT .)
    PARDER          reduce using rule 135 (factor -> CTESTRING pushOT .)
    DOSPUNTOS       reduce using rule 135 (factor -> CTESTRING pushOT .)
    CORDER          reduce using rule 135 (factor -> CTESTRING pushOT .)
    PYC             reduce using rule 135 (factor -> CTESTRING pushOT .)


state 184

    (67) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 67 (escaux -> llamada_esp nextexp .)


state 185

    (70) nextexp -> COMA . escaux
    (65) escaux -> . expresion cuadEsc nextexp
    (66) escaux -> . CTESTRING cuadEsc nextexp
    (67) escaux -> . llamada_esp nextexp
    (68) escaux -> . llamada nextexp
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada

    CTESTRING       shift and go to state 139
    ID              shift and go to state 143
    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152

    escaux                         shift and go to state 228
    expresion                      shift and go to state 138
    llamada_esp                    shift and go to state 140
    llamada                        shift and go to state 141
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147

state 186

    (71) nextexp -> empty .

    PARDER          reduce using rule 71 (nextexp -> empty .)


state 187

    (68) escaux -> llamada nextexp .

    PARDER          reduce using rule 68 (escaux -> llamada nextexp .)


state 188

    (105) expresion -> andExpresion cuadAnd .
    (106) expresion -> andExpresion cuadAnd . OR pushOper andExpresion cuadAnd

    COMA            reduce using rule 105 (expresion -> andExpresion cuadAnd .)
    PARDER          reduce using rule 105 (expresion -> andExpresion cuadAnd .)
    DOSPUNTOS       reduce using rule 105 (expresion -> andExpresion cuadAnd .)
    CORDER          reduce using rule 105 (expresion -> andExpresion cuadAnd .)
    PYC             reduce using rule 105 (expresion -> andExpresion cuadAnd .)
    OR              shift and go to state 229


state 189

    (140) llamada_esp -> ID checkIDfac . PUNTO especiales PARIZQ PARDER cuadEsp
    (131) factor -> ID checkIDfac . pushOT
    (132) factor -> ID checkIDfac . CORIZQ expresion CORDER pushOT
    (133) factor -> ID checkIDfac . CORIZQ expresion COMA expresion CORDER pushOT
    (157) pushOT -> .

    PUNTO           shift and go to state 230
    CORIZQ          shift and go to state 232
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 231

state 190

    (108) andExpresion -> relopExpresion cuadRelop .
    (109) andExpresion -> relopExpresion cuadRelop . AND pushOper relopExpresion cuadRelop

    OR              reduce using rule 108 (andExpresion -> relopExpresion cuadRelop .)
    COMA            reduce using rule 108 (andExpresion -> relopExpresion cuadRelop .)
    PARDER          reduce using rule 108 (andExpresion -> relopExpresion cuadRelop .)
    DOSPUNTOS       reduce using rule 108 (andExpresion -> relopExpresion cuadRelop .)
    CORDER          reduce using rule 108 (andExpresion -> relopExpresion cuadRelop .)
    PYC             reduce using rule 108 (andExpresion -> relopExpresion cuadRelop .)
    AND             shift and go to state 233


state 191

    (111) relopExpresion -> aritExpresion cuadArit .
    (112) relopExpresion -> aritExpresion cuadArit . relopAux aritExpresion cuadArit
    (113) relopAux -> . MAYORQUE pushOper
    (114) relopAux -> . MENORQUE pushOper
    (115) relopAux -> . EQUALS pushOper
    (116) relopAux -> . DIFERENTE pushOper

    AND             reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    OR              reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    COMA            reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    PARDER          reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    CORDER          reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    PYC             reduce using rule 111 (relopExpresion -> aritExpresion cuadArit .)
    MAYORQUE        shift and go to state 235
    MENORQUE        shift and go to state 236
    EQUALS          shift and go to state 237
    DIFERENTE       shift and go to state 238

    relopAux                       shift and go to state 234

state 192

    (118) aritExpresion -> term cuadTerm . aritAux aritExpresion cuadTerm
    (119) aritAux -> . MAS pushOper
    (120) aritAux -> . MENOS pushOper

    MAS             shift and go to state 240
    MENOS           shift and go to state 241

    aritAux                        shift and go to state 239

state 193

    (122) term -> factor cuadFactor . termAux term cuadFactor
    (123) termAux -> . MULT pushOper
    (124) termAux -> . DIV pushOper

    MULT            shift and go to state 243
    DIV             shift and go to state 244

    termAux                        shift and go to state 242

state 194

    (126) factor -> CTEINT pushOT .

    MULT            reduce using rule 126 (factor -> CTEINT pushOT .)
    DIV             reduce using rule 126 (factor -> CTEINT pushOT .)
    MAS             reduce using rule 126 (factor -> CTEINT pushOT .)
    MENOS           reduce using rule 126 (factor -> CTEINT pushOT .)
    MAYORQUE        reduce using rule 126 (factor -> CTEINT pushOT .)
    MENORQUE        reduce using rule 126 (factor -> CTEINT pushOT .)
    EQUALS          reduce using rule 126 (factor -> CTEINT pushOT .)
    DIFERENTE       reduce using rule 126 (factor -> CTEINT pushOT .)
    AND             reduce using rule 126 (factor -> CTEINT pushOT .)
    OR              reduce using rule 126 (factor -> CTEINT pushOT .)
    COMA            reduce using rule 126 (factor -> CTEINT pushOT .)
    PARDER          reduce using rule 126 (factor -> CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 126 (factor -> CTEINT pushOT .)
    CORDER          reduce using rule 126 (factor -> CTEINT pushOT .)
    PYC             reduce using rule 126 (factor -> CTEINT pushOT .)


state 195

    (127) factor -> MENOS CTEINT . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 245

state 196

    (128) factor -> CTEFLOAT pushOT .

    MULT            reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    DIV             reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    MAS             reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    MENOS           reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    MAYORQUE        reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    MENORQUE        reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    EQUALS          reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    DIFERENTE       reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    AND             reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    OR              reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    COMA            reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    PARDER          reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    DOSPUNTOS       reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    CORDER          reduce using rule 128 (factor -> CTEFLOAT pushOT .)
    PYC             reduce using rule 128 (factor -> CTEFLOAT pushOT .)


state 197

    (129) factor -> true pushOT .

    MULT            reduce using rule 129 (factor -> true pushOT .)
    DIV             reduce using rule 129 (factor -> true pushOT .)
    MAS             reduce using rule 129 (factor -> true pushOT .)
    MENOS           reduce using rule 129 (factor -> true pushOT .)
    MAYORQUE        reduce using rule 129 (factor -> true pushOT .)
    MENORQUE        reduce using rule 129 (factor -> true pushOT .)
    EQUALS          reduce using rule 129 (factor -> true pushOT .)
    DIFERENTE       reduce using rule 129 (factor -> true pushOT .)
    AND             reduce using rule 129 (factor -> true pushOT .)
    OR              reduce using rule 129 (factor -> true pushOT .)
    COMA            reduce using rule 129 (factor -> true pushOT .)
    PARDER          reduce using rule 129 (factor -> true pushOT .)
    DOSPUNTOS       reduce using rule 129 (factor -> true pushOT .)
    CORDER          reduce using rule 129 (factor -> true pushOT .)
    PYC             reduce using rule 129 (factor -> true pushOT .)


state 198

    (130) factor -> false pushOT .

    MULT            reduce using rule 130 (factor -> false pushOT .)
    DIV             reduce using rule 130 (factor -> false pushOT .)
    MAS             reduce using rule 130 (factor -> false pushOT .)
    MENOS           reduce using rule 130 (factor -> false pushOT .)
    MAYORQUE        reduce using rule 130 (factor -> false pushOT .)
    MENORQUE        reduce using rule 130 (factor -> false pushOT .)
    EQUALS          reduce using rule 130 (factor -> false pushOT .)
    DIFERENTE       reduce using rule 130 (factor -> false pushOT .)
    AND             reduce using rule 130 (factor -> false pushOT .)
    OR              reduce using rule 130 (factor -> false pushOT .)
    COMA            reduce using rule 130 (factor -> false pushOT .)
    PARDER          reduce using rule 130 (factor -> false pushOT .)
    DOSPUNTOS       reduce using rule 130 (factor -> false pushOT .)
    CORDER          reduce using rule 130 (factor -> false pushOT .)
    PYC             reduce using rule 130 (factor -> false pushOT .)


state 199

    (86) condicion -> if PARIZQ expresion PARDER . cuadGotof bloque condicionAux cuadFinIf
    (161) cuadGotof -> .

    LLAVEIZQ        reduce using rule 161 (cuadGotof -> .)

    cuadGotof                      shift and go to state 246

state 200

    (131) factor -> ID checkIDfac . pushOT
    (132) factor -> ID checkIDfac . CORIZQ expresion CORDER pushOT
    (133) factor -> ID checkIDfac . CORIZQ expresion COMA expresion CORDER pushOT
    (140) llamada_esp -> ID checkIDfac . PUNTO especiales PARIZQ PARDER cuadEsp
    (157) pushOT -> .

    CORIZQ          shift and go to state 232
    PUNTO           shift and go to state 230
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 231

state 201

    (89) whileloop -> while migaja PARIZQ expresion . PARDER cuadGotof bloque cuadFinWhile

    PARDER          shift and go to state 247


state 202

    (92) forloop -> for PARIZQ expresion checkExpFor . DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    DOSPUNTOS       shift and go to state 248


state 203

    (96) lectura -> read PARIZQ ID checkID . cuadRead PARDER PYC
    (97) cuadRead -> .

    PARDER          reduce using rule 97 (cuadRead -> .)

    cuadRead                       shift and go to state 249

state 204

    (98) estReturn -> return PARIZQ retAux PARDER . PYC

    PYC             shift and go to state 250


state 205

    (99) retAux -> expresion cuadRet .

    PARDER          reduce using rule 99 (retAux -> expresion cuadRet .)


state 206

    (100) retAux -> CTESTRING cuadRet .

    PARDER          reduce using rule 100 (retAux -> CTESTRING cuadRet .)


state 207

    (101) retAux -> true cuadRet .

    PARDER          reduce using rule 101 (retAux -> true cuadRet .)


state 208

    (102) retAux -> false cuadRet .

    PARDER          reduce using rule 102 (retAux -> false cuadRet .)


state 209

    (103) retAux -> llamada cuadRet .

    PARDER          reduce using rule 103 (retAux -> llamada cuadRet .)


state 210

    (42) funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam .

    PARDER          reduce using rule 42 (funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam .)


state 211

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER . agregaPar masParam
    (18) agregaPar -> .

    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 251

state 212

    (140) llamada_esp -> ID . checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (131) factor -> ID . checkIDfac pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (72) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> ID . checkFunc cuadEra PARIZQ PARDER cuadGoSub
    (137) checkIDfac -> .
    (81) checkFunc -> .

    PUNTO           reduce using rule 137 (checkIDfac -> .)
    CORIZQ          reduce using rule 137 (checkIDfac -> .)
    MULT            reduce using rule 137 (checkIDfac -> .)
    DIV             reduce using rule 137 (checkIDfac -> .)
    MAS             reduce using rule 137 (checkIDfac -> .)
    MENOS           reduce using rule 137 (checkIDfac -> .)
    MAYORQUE        reduce using rule 137 (checkIDfac -> .)
    MENORQUE        reduce using rule 137 (checkIDfac -> .)
    EQUALS          reduce using rule 137 (checkIDfac -> .)
    DIFERENTE       reduce using rule 137 (checkIDfac -> .)
    AND             reduce using rule 137 (checkIDfac -> .)
    OR              reduce using rule 137 (checkIDfac -> .)
    PYC             reduce using rule 137 (checkIDfac -> .)
    COMA            reduce using rule 137 (checkIDfac -> .)
    PARDER          reduce using rule 137 (checkIDfac -> .)
    PARIZQ          reduce using rule 81 (checkFunc -> .)

    checkIDfac                     shift and go to state 189
    checkFunc                      shift and go to state 118

state 213

    (55) asignacion -> ID checkID asignaux ASIGNA expresion . cuadAsignacion PYC
    (59) cuadAsignacion -> .

    PYC             reduce using rule 59 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 252

state 214

    (56) asignacion -> ID checkID asignaux ASIGNA llamada_esp . cuadAsignacion PYC
    (134) factor -> llamada_esp .
    (59) cuadAsignacion -> .

  ! reduce/reduce conflict for PYC resolved using rule 59 (cuadAsignacion -> .)
    MULT            reduce using rule 134 (factor -> llamada_esp .)
    DIV             reduce using rule 134 (factor -> llamada_esp .)
    MAS             reduce using rule 134 (factor -> llamada_esp .)
    MENOS           reduce using rule 134 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 134 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 134 (factor -> llamada_esp .)
    EQUALS          reduce using rule 134 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 134 (factor -> llamada_esp .)
    AND             reduce using rule 134 (factor -> llamada_esp .)
    OR              reduce using rule 134 (factor -> llamada_esp .)
    PYC             reduce using rule 59 (cuadAsignacion -> .)

  ! PYC             [ reduce using rule 134 (factor -> llamada_esp .) ]

    cuadAsignacion                 shift and go to state 253

state 215

    (57) asignacion -> ID checkID asignaux ASIGNA CTESTRING . cuadAsignacion PYC
    (135) factor -> CTESTRING . pushOT
    (59) cuadAsignacion -> .
    (157) pushOT -> .

  ! reduce/reduce conflict for PYC resolved using rule 59 (cuadAsignacion -> .)
    PYC             reduce using rule 59 (cuadAsignacion -> .)
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)

  ! PYC             [ reduce using rule 157 (pushOT -> .) ]

    cuadAsignacion                 shift and go to state 254
    pushOT                         shift and go to state 183

state 216

    (60) asignaux -> CORIZQ expresion CORDER . pushOTAsig
    (63) pushOTAsig -> .

    ASIGNA          reduce using rule 63 (pushOTAsig -> .)

    pushOTAsig                     shift and go to state 255

state 217

    (61) asignaux -> CORIZQ expresion COMA . expresion CORDER pushOTAsig
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 256
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 218

    (72) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo . llamaux verPars PARDER cuadGoSub quitaFondo
    (76) llamaux -> . expresion cuadPar nextparametro
    (77) llamaux -> . llamada_esp cuadPar nextparametro
    (78) llamaux -> . CTESTRING cuadPar nextparametro
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    CTESTRING       shift and go to state 260
    ID              shift and go to state 212
    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152

    llamaux                        shift and go to state 257
    expresion                      shift and go to state 258
    llamada_esp                    shift and go to state 259
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada                        shift and go to state 157

state 219

    (73) llamada -> ID checkFunc cuadEra PARIZQ PARDER . cuadGoSub
    (85) cuadGoSub -> .

    PYC             reduce using rule 85 (cuadGoSub -> .)
    COMA            reduce using rule 85 (cuadGoSub -> .)
    PARDER          reduce using rule 85 (cuadGoSub -> .)
    MULT            reduce using rule 85 (cuadGoSub -> .)
    DIV             reduce using rule 85 (cuadGoSub -> .)
    MAS             reduce using rule 85 (cuadGoSub -> .)
    MENOS           reduce using rule 85 (cuadGoSub -> .)
    MAYORQUE        reduce using rule 85 (cuadGoSub -> .)
    MENORQUE        reduce using rule 85 (cuadGoSub -> .)
    EQUALS          reduce using rule 85 (cuadGoSub -> .)
    DIFERENTE       reduce using rule 85 (cuadGoSub -> .)
    AND             reduce using rule 85 (cuadGoSub -> .)
    OR              reduce using rule 85 (cuadGoSub -> .)
    DOSPUNTOS       reduce using rule 85 (cuadGoSub -> .)
    CORDER          reduce using rule 85 (cuadGoSub -> .)

    cuadGoSub                      shift and go to state 261

state 220

    (141) llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ . PARDER cuadEspVoid PYC

    PARDER          shift and go to state 262


state 221

    (152) especialesVoid -> graph guardaEsp .

    PARIZQ          reduce using rule 152 (especialesVoid -> graph guardaEsp .)


state 222

    (153) especialesVoid -> printArray guardaEsp .

    PARIZQ          reduce using rule 153 (especialesVoid -> printArray guardaEsp .)


state 223

    (154) especialesVoid -> printMatrix guardaEsp .

    PARIZQ          reduce using rule 154 (especialesVoid -> printMatrix guardaEsp .)


state 224

    (125) factor -> PARIZQ guardaFondo expresion . PARDER quitaFondo

    PARDER          shift and go to state 263


state 225

    (64) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    return          reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 64 (escritura -> write PARIZQ escaux PARDER PYC .)


state 226

    (65) escaux -> expresion cuadEsc nextexp .

    PARDER          reduce using rule 65 (escaux -> expresion cuadEsc nextexp .)


state 227

    (66) escaux -> CTESTRING cuadEsc nextexp .

    PARDER          reduce using rule 66 (escaux -> CTESTRING cuadEsc nextexp .)


state 228

    (70) nextexp -> COMA escaux .

    PARDER          reduce using rule 70 (nextexp -> COMA escaux .)


state 229

    (106) expresion -> andExpresion cuadAnd OR . pushOper andExpresion cuadAnd
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 264

state 230

    (140) llamada_esp -> ID checkIDfac PUNTO . especiales PARIZQ PARDER cuadEsp
    (144) especiales -> . length guardaEsp
    (145) especiales -> . max guardaEsp
    (146) especiales -> . min guardaEsp
    (147) especiales -> . avg guardaEsp
    (148) especiales -> . median guardaEsp
    (149) especiales -> . mode guardaEsp
    (150) especiales -> . variance guardaEsp
    (151) especiales -> . stdev guardaEsp

    length          shift and go to state 266
    max             shift and go to state 267
    min             shift and go to state 268
    avg             shift and go to state 269
    median          shift and go to state 270
    mode            shift and go to state 271
    variance        shift and go to state 272
    stdev           shift and go to state 273

    especiales                     shift and go to state 265

state 231

    (131) factor -> ID checkIDfac pushOT .

    MULT            reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    DIV             reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    MAS             reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    MENOS           reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    MAYORQUE        reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    MENORQUE        reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    EQUALS          reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    DIFERENTE       reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    AND             reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    OR              reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    COMA            reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    PARDER          reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    DOSPUNTOS       reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    CORDER          reduce using rule 131 (factor -> ID checkIDfac pushOT .)
    PYC             reduce using rule 131 (factor -> ID checkIDfac pushOT .)


state 232

    (132) factor -> ID checkIDfac CORIZQ . expresion CORDER pushOT
    (133) factor -> ID checkIDfac CORIZQ . expresion COMA expresion CORDER pushOT
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 274
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 233

    (109) andExpresion -> relopExpresion cuadRelop AND . pushOper relopExpresion cuadRelop
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 275

state 234

    (112) relopExpresion -> aritExpresion cuadArit relopAux . aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    aritExpresion                  shift and go to state 276
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 235

    (113) relopAux -> MAYORQUE . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 277

state 236

    (114) relopAux -> MENORQUE . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 278

state 237

    (115) relopAux -> EQUALS . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 279

state 238

    (116) relopAux -> DIFERENTE . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 280

state 239

    (118) aritExpresion -> term cuadTerm aritAux . aritExpresion cuadTerm
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    term                           shift and go to state 146
    aritExpresion                  shift and go to state 281
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 240

    (119) aritAux -> MAS . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 282

state 241

    (120) aritAux -> MENOS . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 283

state 242

    (122) term -> factor cuadFactor termAux . term cuadFactor
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    factor                         shift and go to state 147
    term                           shift and go to state 284
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 243

    (123) termAux -> MULT . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 285

state 244

    (124) termAux -> DIV . pushOper
    (156) pushOper -> .

    PARIZQ          reduce using rule 156 (pushOper -> .)
    CTEINT          reduce using rule 156 (pushOper -> .)
    MENOS           reduce using rule 156 (pushOper -> .)
    CTEFLOAT        reduce using rule 156 (pushOper -> .)
    true            reduce using rule 156 (pushOper -> .)
    false           reduce using rule 156 (pushOper -> .)
    ID              reduce using rule 156 (pushOper -> .)
    CTESTRING       reduce using rule 156 (pushOper -> .)

    pushOper                       shift and go to state 286

state 245

    (127) factor -> MENOS CTEINT pushOT .

    MULT            reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    DIV             reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    MAS             reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    MENOS           reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    MAYORQUE        reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    MENORQUE        reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    EQUALS          reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    DIFERENTE       reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    AND             reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    OR              reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    COMA            reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    PARDER          reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    CORDER          reduce using rule 127 (factor -> MENOS CTEINT pushOT .)
    PYC             reduce using rule 127 (factor -> MENOS CTEINT pushOT .)


state 246

    (86) condicion -> if PARIZQ expresion PARDER cuadGotof . bloque condicionAux cuadFinIf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 287

state 247

    (89) whileloop -> while migaja PARIZQ expresion PARDER . cuadGotof bloque cuadFinWhile
    (161) cuadGotof -> .

    LLAVEIZQ        reduce using rule 161 (cuadGotof -> .)

    cuadGotof                      shift and go to state 288

state 248

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS . expresion checkExpFor PARDER gotoFor bloque returnFor
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 289
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 249

    (96) lectura -> read PARIZQ ID checkID cuadRead . PARDER PYC

    PARDER          shift and go to state 290


state 250

    (98) estReturn -> return PARIZQ retAux PARDER PYC .

    ID              reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    write           reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    if              reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    while           reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    for             reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    read            reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    return          reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)
    LLAVEDER        reduce using rule 98 (estReturn -> return PARIZQ retAux PARDER PYC .)


state 251

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (164) empty -> .

    COMA            shift and go to state 109
    PARDER          reduce using rule 164 (empty -> .)

    masParam                       shift and go to state 291
    empty                          shift and go to state 110

state 252

    (55) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion . PYC

    PYC             shift and go to state 292


state 253

    (56) asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion . PYC

    PYC             shift and go to state 293


state 254

    (57) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion . PYC

    PYC             shift and go to state 294


state 255

    (60) asignaux -> CORIZQ expresion CORDER pushOTAsig .

    ASIGNA          reduce using rule 60 (asignaux -> CORIZQ expresion CORDER pushOTAsig .)


state 256

    (61) asignaux -> CORIZQ expresion COMA expresion . CORDER pushOTAsig

    CORDER          shift and go to state 295


state 257

    (72) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux . verPars PARDER cuadGoSub quitaFondo
    (84) verPars -> .

    PARDER          reduce using rule 84 (verPars -> .)

    verPars                        shift and go to state 296

state 258

    (76) llamaux -> expresion . cuadPar nextparametro
    (83) cuadPar -> .

    COMA            reduce using rule 83 (cuadPar -> .)
    PARDER          reduce using rule 83 (cuadPar -> .)

    cuadPar                        shift and go to state 297

state 259

    (77) llamaux -> llamada_esp . cuadPar nextparametro
    (134) factor -> llamada_esp .
    (83) cuadPar -> .

  ! reduce/reduce conflict for COMA resolved using rule 83 (cuadPar -> .)
  ! reduce/reduce conflict for PARDER resolved using rule 83 (cuadPar -> .)
    MULT            reduce using rule 134 (factor -> llamada_esp .)
    DIV             reduce using rule 134 (factor -> llamada_esp .)
    MAS             reduce using rule 134 (factor -> llamada_esp .)
    MENOS           reduce using rule 134 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 134 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 134 (factor -> llamada_esp .)
    EQUALS          reduce using rule 134 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 134 (factor -> llamada_esp .)
    AND             reduce using rule 134 (factor -> llamada_esp .)
    OR              reduce using rule 134 (factor -> llamada_esp .)
    COMA            reduce using rule 83 (cuadPar -> .)
    PARDER          reduce using rule 83 (cuadPar -> .)

  ! COMA            [ reduce using rule 134 (factor -> llamada_esp .) ]
  ! PARDER          [ reduce using rule 134 (factor -> llamada_esp .) ]

    cuadPar                        shift and go to state 298

state 260

    (78) llamaux -> CTESTRING . cuadPar nextparametro
    (135) factor -> CTESTRING . pushOT
    (83) cuadPar -> .
    (157) pushOT -> .

  ! reduce/reduce conflict for COMA resolved using rule 83 (cuadPar -> .)
  ! reduce/reduce conflict for PARDER resolved using rule 83 (cuadPar -> .)
    COMA            reduce using rule 83 (cuadPar -> .)
    PARDER          reduce using rule 83 (cuadPar -> .)
    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)

  ! COMA            [ reduce using rule 157 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 157 (pushOT -> .) ]

    cuadPar                        shift and go to state 299
    pushOT                         shift and go to state 183

state 261

    (73) llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .

    PYC             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    COMA            reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    PARDER          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    MULT            reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    DIV             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    MAS             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    MENOS           reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    MAYORQUE        reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    MENORQUE        reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    EQUALS          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    DIFERENTE       reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    AND             reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    OR              reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    DOSPUNTOS       reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)
    CORDER          reduce using rule 73 (llamada -> ID checkFunc cuadEra PARIZQ PARDER cuadGoSub .)


state 262

    (141) llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER . cuadEspVoid PYC
    (142) cuadEspVoid -> .

    PYC             reduce using rule 142 (cuadEspVoid -> .)

    cuadEspVoid                    shift and go to state 300

state 263

    (125) factor -> PARIZQ guardaFondo expresion PARDER . quitaFondo
    (139) quitaFondo -> .

    MULT            reduce using rule 139 (quitaFondo -> .)
    DIV             reduce using rule 139 (quitaFondo -> .)
    MAS             reduce using rule 139 (quitaFondo -> .)
    MENOS           reduce using rule 139 (quitaFondo -> .)
    MAYORQUE        reduce using rule 139 (quitaFondo -> .)
    MENORQUE        reduce using rule 139 (quitaFondo -> .)
    EQUALS          reduce using rule 139 (quitaFondo -> .)
    DIFERENTE       reduce using rule 139 (quitaFondo -> .)
    AND             reduce using rule 139 (quitaFondo -> .)
    OR              reduce using rule 139 (quitaFondo -> .)
    COMA            reduce using rule 139 (quitaFondo -> .)
    PARDER          reduce using rule 139 (quitaFondo -> .)
    DOSPUNTOS       reduce using rule 139 (quitaFondo -> .)
    CORDER          reduce using rule 139 (quitaFondo -> .)
    PYC             reduce using rule 139 (quitaFondo -> .)

    quitaFondo                     shift and go to state 301

state 264

    (106) expresion -> andExpresion cuadAnd OR pushOper . andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    andExpresion                   shift and go to state 302
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 265

    (140) llamada_esp -> ID checkIDfac PUNTO especiales . PARIZQ PARDER cuadEsp

    PARIZQ          shift and go to state 303


state 266

    (144) especiales -> length . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 304

state 267

    (145) especiales -> max . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 305

state 268

    (146) especiales -> min . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 306

state 269

    (147) especiales -> avg . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 307

state 270

    (148) especiales -> median . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 308

state 271

    (149) especiales -> mode . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 309

state 272

    (150) especiales -> variance . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 310

state 273

    (151) especiales -> stdev . guardaEsp
    (155) guardaEsp -> .

    PARIZQ          reduce using rule 155 (guardaEsp -> .)

    guardaEsp                      shift and go to state 311

state 274

    (132) factor -> ID checkIDfac CORIZQ expresion . CORDER pushOT
    (133) factor -> ID checkIDfac CORIZQ expresion . COMA expresion CORDER pushOT

    CORDER          shift and go to state 312
    COMA            shift and go to state 313


state 275

    (109) andExpresion -> relopExpresion cuadRelop AND pushOper . relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    relopExpresion                 shift and go to state 314
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 276

    (112) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion . cuadArit
    (160) cuadArit -> .

    AND             reduce using rule 160 (cuadArit -> .)
    OR              reduce using rule 160 (cuadArit -> .)
    COMA            reduce using rule 160 (cuadArit -> .)
    PARDER          reduce using rule 160 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 160 (cuadArit -> .)
    CORDER          reduce using rule 160 (cuadArit -> .)
    PYC             reduce using rule 160 (cuadArit -> .)

    cuadArit                       shift and go to state 315

state 277

    (113) relopAux -> MAYORQUE pushOper .

    PARIZQ          reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    CTEINT          reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    MENOS           reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    CTEFLOAT        reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    true            reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    false           reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    ID              reduce using rule 113 (relopAux -> MAYORQUE pushOper .)
    CTESTRING       reduce using rule 113 (relopAux -> MAYORQUE pushOper .)


state 278

    (114) relopAux -> MENORQUE pushOper .

    PARIZQ          reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    CTEINT          reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    MENOS           reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    CTEFLOAT        reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    true            reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    false           reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    ID              reduce using rule 114 (relopAux -> MENORQUE pushOper .)
    CTESTRING       reduce using rule 114 (relopAux -> MENORQUE pushOper .)


state 279

    (115) relopAux -> EQUALS pushOper .

    PARIZQ          reduce using rule 115 (relopAux -> EQUALS pushOper .)
    CTEINT          reduce using rule 115 (relopAux -> EQUALS pushOper .)
    MENOS           reduce using rule 115 (relopAux -> EQUALS pushOper .)
    CTEFLOAT        reduce using rule 115 (relopAux -> EQUALS pushOper .)
    true            reduce using rule 115 (relopAux -> EQUALS pushOper .)
    false           reduce using rule 115 (relopAux -> EQUALS pushOper .)
    ID              reduce using rule 115 (relopAux -> EQUALS pushOper .)
    CTESTRING       reduce using rule 115 (relopAux -> EQUALS pushOper .)


state 280

    (116) relopAux -> DIFERENTE pushOper .

    PARIZQ          reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    CTEINT          reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    MENOS           reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    CTEFLOAT        reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    true            reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    false           reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    ID              reduce using rule 116 (relopAux -> DIFERENTE pushOper .)
    CTESTRING       reduce using rule 116 (relopAux -> DIFERENTE pushOper .)


state 281

    (118) aritExpresion -> term cuadTerm aritAux aritExpresion . cuadTerm
    (158) cuadTerm -> .

    MAYORQUE        reduce using rule 158 (cuadTerm -> .)
    MENORQUE        reduce using rule 158 (cuadTerm -> .)
    EQUALS          reduce using rule 158 (cuadTerm -> .)
    DIFERENTE       reduce using rule 158 (cuadTerm -> .)
    AND             reduce using rule 158 (cuadTerm -> .)
    OR              reduce using rule 158 (cuadTerm -> .)
    COMA            reduce using rule 158 (cuadTerm -> .)
    PARDER          reduce using rule 158 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 158 (cuadTerm -> .)
    CORDER          reduce using rule 158 (cuadTerm -> .)
    PYC             reduce using rule 158 (cuadTerm -> .)

    cuadTerm                       shift and go to state 316

state 282

    (119) aritAux -> MAS pushOper .

    PARIZQ          reduce using rule 119 (aritAux -> MAS pushOper .)
    CTEINT          reduce using rule 119 (aritAux -> MAS pushOper .)
    MENOS           reduce using rule 119 (aritAux -> MAS pushOper .)
    CTEFLOAT        reduce using rule 119 (aritAux -> MAS pushOper .)
    true            reduce using rule 119 (aritAux -> MAS pushOper .)
    false           reduce using rule 119 (aritAux -> MAS pushOper .)
    ID              reduce using rule 119 (aritAux -> MAS pushOper .)
    CTESTRING       reduce using rule 119 (aritAux -> MAS pushOper .)


state 283

    (120) aritAux -> MENOS pushOper .

    PARIZQ          reduce using rule 120 (aritAux -> MENOS pushOper .)
    CTEINT          reduce using rule 120 (aritAux -> MENOS pushOper .)
    MENOS           reduce using rule 120 (aritAux -> MENOS pushOper .)
    CTEFLOAT        reduce using rule 120 (aritAux -> MENOS pushOper .)
    true            reduce using rule 120 (aritAux -> MENOS pushOper .)
    false           reduce using rule 120 (aritAux -> MENOS pushOper .)
    ID              reduce using rule 120 (aritAux -> MENOS pushOper .)
    CTESTRING       reduce using rule 120 (aritAux -> MENOS pushOper .)


state 284

    (122) term -> factor cuadFactor termAux term . cuadFactor
    (159) cuadFactor -> .

    MAS             reduce using rule 159 (cuadFactor -> .)
    MENOS           reduce using rule 159 (cuadFactor -> .)
    MAYORQUE        reduce using rule 159 (cuadFactor -> .)
    MENORQUE        reduce using rule 159 (cuadFactor -> .)
    EQUALS          reduce using rule 159 (cuadFactor -> .)
    DIFERENTE       reduce using rule 159 (cuadFactor -> .)
    AND             reduce using rule 159 (cuadFactor -> .)
    OR              reduce using rule 159 (cuadFactor -> .)
    COMA            reduce using rule 159 (cuadFactor -> .)
    PARDER          reduce using rule 159 (cuadFactor -> .)
    DOSPUNTOS       reduce using rule 159 (cuadFactor -> .)
    CORDER          reduce using rule 159 (cuadFactor -> .)
    PYC             reduce using rule 159 (cuadFactor -> .)

    cuadFactor                     shift and go to state 317

state 285

    (123) termAux -> MULT pushOper .

    PARIZQ          reduce using rule 123 (termAux -> MULT pushOper .)
    CTEINT          reduce using rule 123 (termAux -> MULT pushOper .)
    MENOS           reduce using rule 123 (termAux -> MULT pushOper .)
    CTEFLOAT        reduce using rule 123 (termAux -> MULT pushOper .)
    true            reduce using rule 123 (termAux -> MULT pushOper .)
    false           reduce using rule 123 (termAux -> MULT pushOper .)
    ID              reduce using rule 123 (termAux -> MULT pushOper .)
    CTESTRING       reduce using rule 123 (termAux -> MULT pushOper .)


state 286

    (124) termAux -> DIV pushOper .

    PARIZQ          reduce using rule 124 (termAux -> DIV pushOper .)
    CTEINT          reduce using rule 124 (termAux -> DIV pushOper .)
    MENOS           reduce using rule 124 (termAux -> DIV pushOper .)
    CTEFLOAT        reduce using rule 124 (termAux -> DIV pushOper .)
    true            reduce using rule 124 (termAux -> DIV pushOper .)
    false           reduce using rule 124 (termAux -> DIV pushOper .)
    ID              reduce using rule 124 (termAux -> DIV pushOper .)
    CTESTRING       reduce using rule 124 (termAux -> DIV pushOper .)


state 287

    (86) condicion -> if PARIZQ expresion PARDER cuadGotof bloque . condicionAux cuadFinIf
    (87) condicionAux -> . else cuadGoto bloque
    (88) condicionAux -> . empty
    (164) empty -> .

    else            shift and go to state 319
    ID              reduce using rule 164 (empty -> .)
    write           reduce using rule 164 (empty -> .)
    if              reduce using rule 164 (empty -> .)
    while           reduce using rule 164 (empty -> .)
    for             reduce using rule 164 (empty -> .)
    read            reduce using rule 164 (empty -> .)
    return          reduce using rule 164 (empty -> .)
    LLAVEDER        reduce using rule 164 (empty -> .)

    condicionAux                   shift and go to state 318
    empty                          shift and go to state 320

state 288

    (89) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof . bloque cuadFinWhile
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 321

state 289

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion . checkExpFor PARDER gotoFor bloque returnFor
    (93) checkExpFor -> .

    PARDER          reduce using rule 93 (checkExpFor -> .)

    checkExpFor                    shift and go to state 322

state 290

    (96) lectura -> read PARIZQ ID checkID cuadRead PARDER . PYC

    PYC             shift and go to state 323


state 291

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam .

    PARDER          reduce using rule 43 (funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam .)


state 292

    (55) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .

    ID              reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    write           reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    if              reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    while           reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    for             reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    read            reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    return          reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)


state 293

    (56) asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .

    ID              reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    write           reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    if              reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    while           reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    for             reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    read            reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    return          reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA llamada_esp cuadAsignacion PYC .)


state 294

    (57) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .

    ID              reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    write           reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    if              reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    while           reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    for             reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    read            reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    return          reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 57 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)


state 295

    (61) asignaux -> CORIZQ expresion COMA expresion CORDER . pushOTAsig
    (63) pushOTAsig -> .

    ASIGNA          reduce using rule 63 (pushOTAsig -> .)

    pushOTAsig                     shift and go to state 324

state 296

    (72) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars . PARDER cuadGoSub quitaFondo

    PARDER          shift and go to state 325


state 297

    (76) llamaux -> expresion cuadPar . nextparametro
    (79) nextparametro -> . COMA llamaux
    (80) nextparametro -> . empty
    (164) empty -> .

    COMA            shift and go to state 327
    PARDER          reduce using rule 164 (empty -> .)

    nextparametro                  shift and go to state 326
    empty                          shift and go to state 328

state 298

    (77) llamaux -> llamada_esp cuadPar . nextparametro
    (79) nextparametro -> . COMA llamaux
    (80) nextparametro -> . empty
    (164) empty -> .

    COMA            shift and go to state 327
    PARDER          reduce using rule 164 (empty -> .)

    nextparametro                  shift and go to state 329
    empty                          shift and go to state 328

state 299

    (78) llamaux -> CTESTRING cuadPar . nextparametro
    (79) nextparametro -> . COMA llamaux
    (80) nextparametro -> . empty
    (164) empty -> .

    COMA            shift and go to state 327
    PARDER          reduce using rule 164 (empty -> .)

    nextparametro                  shift and go to state 330
    empty                          shift and go to state 328

state 300

    (141) llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid . PYC

    PYC             shift and go to state 331


state 301

    (125) factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .

    MULT            reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DIV             reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAS             reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENOS           reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAYORQUE        reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENORQUE        reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    EQUALS          reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DIFERENTE       reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    AND             reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    OR              reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    COMA            reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    PARDER          reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DOSPUNTOS       reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    CORDER          reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    PYC             reduce using rule 125 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)


state 302

    (106) expresion -> andExpresion cuadAnd OR pushOper andExpresion . cuadAnd
    (107) cuadAnd -> .

    COMA            reduce using rule 107 (cuadAnd -> .)
    PARDER          reduce using rule 107 (cuadAnd -> .)
    DOSPUNTOS       reduce using rule 107 (cuadAnd -> .)
    CORDER          reduce using rule 107 (cuadAnd -> .)
    PYC             reduce using rule 107 (cuadAnd -> .)

    cuadAnd                        shift and go to state 332

state 303

    (140) llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ . PARDER cuadEsp

    PARDER          shift and go to state 333


state 304

    (144) especiales -> length guardaEsp .

    PARIZQ          reduce using rule 144 (especiales -> length guardaEsp .)


state 305

    (145) especiales -> max guardaEsp .

    PARIZQ          reduce using rule 145 (especiales -> max guardaEsp .)


state 306

    (146) especiales -> min guardaEsp .

    PARIZQ          reduce using rule 146 (especiales -> min guardaEsp .)


state 307

    (147) especiales -> avg guardaEsp .

    PARIZQ          reduce using rule 147 (especiales -> avg guardaEsp .)


state 308

    (148) especiales -> median guardaEsp .

    PARIZQ          reduce using rule 148 (especiales -> median guardaEsp .)


state 309

    (149) especiales -> mode guardaEsp .

    PARIZQ          reduce using rule 149 (especiales -> mode guardaEsp .)


state 310

    (150) especiales -> variance guardaEsp .

    PARIZQ          reduce using rule 150 (especiales -> variance guardaEsp .)


state 311

    (151) especiales -> stdev guardaEsp .

    PARIZQ          reduce using rule 151 (especiales -> stdev guardaEsp .)


state 312

    (132) factor -> ID checkIDfac CORIZQ expresion CORDER . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 334

state 313

    (133) factor -> ID checkIDfac CORIZQ expresion COMA . expresion CORDER pushOT
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152
    ID              shift and go to state 154
    CTESTRING       shift and go to state 156

    expresion                      shift and go to state 335
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada_esp                    shift and go to state 155
    llamada                        shift and go to state 157

state 314

    (109) andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion . cuadRelop
    (110) cuadRelop -> .

    OR              reduce using rule 110 (cuadRelop -> .)
    COMA            reduce using rule 110 (cuadRelop -> .)
    PARDER          reduce using rule 110 (cuadRelop -> .)
    DOSPUNTOS       reduce using rule 110 (cuadRelop -> .)
    CORDER          reduce using rule 110 (cuadRelop -> .)
    PYC             reduce using rule 110 (cuadRelop -> .)

    cuadRelop                      shift and go to state 336

state 315

    (112) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .

    AND             reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    OR              reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    COMA            reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARDER          reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CORDER          reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PYC             reduce using rule 112 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)


state 316

    (118) aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .

    MAYORQUE        reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    MENORQUE        reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    EQUALS          reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    DIFERENTE       reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    AND             reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    OR              reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    COMA            reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    PARDER          reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    DOSPUNTOS       reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    CORDER          reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    PYC             reduce using rule 118 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)


state 317

    (122) term -> factor cuadFactor termAux term cuadFactor .

    MAS             reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    MENOS           reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    MAYORQUE        reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    MENORQUE        reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    EQUALS          reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    DIFERENTE       reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    AND             reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    OR              reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    COMA            reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    PARDER          reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    DOSPUNTOS       reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    CORDER          reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)
    PYC             reduce using rule 122 (term -> factor cuadFactor termAux term cuadFactor .)


state 318

    (86) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux . cuadFinIf
    (162) cuadFinIf -> .

    ID              reduce using rule 162 (cuadFinIf -> .)
    write           reduce using rule 162 (cuadFinIf -> .)
    if              reduce using rule 162 (cuadFinIf -> .)
    while           reduce using rule 162 (cuadFinIf -> .)
    for             reduce using rule 162 (cuadFinIf -> .)
    read            reduce using rule 162 (cuadFinIf -> .)
    return          reduce using rule 162 (cuadFinIf -> .)
    LLAVEDER        reduce using rule 162 (cuadFinIf -> .)

    cuadFinIf                      shift and go to state 337

state 319

    (87) condicionAux -> else . cuadGoto bloque
    (163) cuadGoto -> .

    LLAVEIZQ        reduce using rule 163 (cuadGoto -> .)

    cuadGoto                       shift and go to state 338

state 320

    (88) condicionAux -> empty .

    ID              reduce using rule 88 (condicionAux -> empty .)
    write           reduce using rule 88 (condicionAux -> empty .)
    if              reduce using rule 88 (condicionAux -> empty .)
    while           reduce using rule 88 (condicionAux -> empty .)
    for             reduce using rule 88 (condicionAux -> empty .)
    read            reduce using rule 88 (condicionAux -> empty .)
    return          reduce using rule 88 (condicionAux -> empty .)
    LLAVEDER        reduce using rule 88 (condicionAux -> empty .)


state 321

    (89) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque . cuadFinWhile
    (91) cuadFinWhile -> .

    ID              reduce using rule 91 (cuadFinWhile -> .)
    write           reduce using rule 91 (cuadFinWhile -> .)
    if              reduce using rule 91 (cuadFinWhile -> .)
    while           reduce using rule 91 (cuadFinWhile -> .)
    for             reduce using rule 91 (cuadFinWhile -> .)
    read            reduce using rule 91 (cuadFinWhile -> .)
    return          reduce using rule 91 (cuadFinWhile -> .)
    LLAVEDER        reduce using rule 91 (cuadFinWhile -> .)

    cuadFinWhile                   shift and go to state 339

state 322

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor . PARDER gotoFor bloque returnFor

    PARDER          shift and go to state 340


state 323

    (96) lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .

    ID              reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    write           reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    if              reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    while           reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    for             reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    read            reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    return          reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    LLAVEDER        reduce using rule 96 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)


state 324

    (61) asignaux -> CORIZQ expresion COMA expresion CORDER pushOTAsig .

    ASIGNA          reduce using rule 61 (asignaux -> CORIZQ expresion COMA expresion CORDER pushOTAsig .)


state 325

    (72) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER . cuadGoSub quitaFondo
    (85) cuadGoSub -> .

    PYC             reduce using rule 85 (cuadGoSub -> .)
    COMA            reduce using rule 85 (cuadGoSub -> .)
    PARDER          reduce using rule 85 (cuadGoSub -> .)
    MULT            reduce using rule 85 (cuadGoSub -> .)
    DIV             reduce using rule 85 (cuadGoSub -> .)
    MAS             reduce using rule 85 (cuadGoSub -> .)
    MENOS           reduce using rule 85 (cuadGoSub -> .)
    MAYORQUE        reduce using rule 85 (cuadGoSub -> .)
    MENORQUE        reduce using rule 85 (cuadGoSub -> .)
    EQUALS          reduce using rule 85 (cuadGoSub -> .)
    DIFERENTE       reduce using rule 85 (cuadGoSub -> .)
    AND             reduce using rule 85 (cuadGoSub -> .)
    OR              reduce using rule 85 (cuadGoSub -> .)
    DOSPUNTOS       reduce using rule 85 (cuadGoSub -> .)
    CORDER          reduce using rule 85 (cuadGoSub -> .)

    cuadGoSub                      shift and go to state 341

state 326

    (76) llamaux -> expresion cuadPar nextparametro .

    PARDER          reduce using rule 76 (llamaux -> expresion cuadPar nextparametro .)


state 327

    (79) nextparametro -> COMA . llamaux
    (76) llamaux -> . expresion cuadPar nextparametro
    (77) llamaux -> . llamada_esp cuadPar nextparametro
    (78) llamaux -> . CTESTRING cuadPar nextparametro
    (105) expresion -> . andExpresion cuadAnd
    (106) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (140) llamada_esp -> . ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp
    (108) andExpresion -> . relopExpresion cuadRelop
    (109) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (111) relopExpresion -> . aritExpresion cuadArit
    (112) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (117) aritExpresion -> . term
    (118) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (121) term -> . factor
    (122) term -> . factor cuadFactor termAux term cuadFactor
    (125) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (126) factor -> . CTEINT pushOT
    (127) factor -> . MENOS CTEINT pushOT
    (128) factor -> . CTEFLOAT pushOT
    (129) factor -> . true pushOT
    (130) factor -> . false pushOT
    (131) factor -> . ID checkIDfac pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (133) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (134) factor -> . llamada_esp
    (135) factor -> . CTESTRING pushOT
    (136) factor -> . llamada
    (72) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (73) llamada -> . ID checkFunc cuadEra PARIZQ PARDER cuadGoSub

    CTESTRING       shift and go to state 260
    ID              shift and go to state 212
    PARIZQ          shift and go to state 136
    CTEINT          shift and go to state 148
    MENOS           shift and go to state 149
    CTEFLOAT        shift and go to state 150
    true            shift and go to state 151
    false           shift and go to state 152

    llamaux                        shift and go to state 342
    expresion                      shift and go to state 258
    llamada_esp                    shift and go to state 259
    andExpresion                   shift and go to state 142
    relopExpresion                 shift and go to state 144
    aritExpresion                  shift and go to state 145
    term                           shift and go to state 146
    factor                         shift and go to state 147
    llamada                        shift and go to state 157

state 328

    (80) nextparametro -> empty .

    PARDER          reduce using rule 80 (nextparametro -> empty .)


state 329

    (77) llamaux -> llamada_esp cuadPar nextparametro .

    PARDER          reduce using rule 77 (llamaux -> llamada_esp cuadPar nextparametro .)


state 330

    (78) llamaux -> CTESTRING cuadPar nextparametro .

    PARDER          reduce using rule 78 (llamaux -> CTESTRING cuadPar nextparametro .)


state 331

    (141) llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .

    ID              reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    write           reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    if              reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    while           reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    for             reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    read            reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    return          reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)
    LLAVEDER        reduce using rule 141 (llamadaEspVoid -> ID checkIDfac PUNTO especialesVoid PARIZQ PARDER cuadEspVoid PYC .)


state 332

    (106) expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .

    COMA            reduce using rule 106 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    PARDER          reduce using rule 106 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    DOSPUNTOS       reduce using rule 106 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    CORDER          reduce using rule 106 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    PYC             reduce using rule 106 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)


state 333

    (140) llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER . cuadEsp
    (143) cuadEsp -> .

    COMA            reduce using rule 143 (cuadEsp -> .)
    PARDER          reduce using rule 143 (cuadEsp -> .)
    MULT            reduce using rule 143 (cuadEsp -> .)
    DIV             reduce using rule 143 (cuadEsp -> .)
    MAS             reduce using rule 143 (cuadEsp -> .)
    MENOS           reduce using rule 143 (cuadEsp -> .)
    MAYORQUE        reduce using rule 143 (cuadEsp -> .)
    MENORQUE        reduce using rule 143 (cuadEsp -> .)
    EQUALS          reduce using rule 143 (cuadEsp -> .)
    DIFERENTE       reduce using rule 143 (cuadEsp -> .)
    AND             reduce using rule 143 (cuadEsp -> .)
    OR              reduce using rule 143 (cuadEsp -> .)
    DOSPUNTOS       reduce using rule 143 (cuadEsp -> .)
    CORDER          reduce using rule 143 (cuadEsp -> .)
    PYC             reduce using rule 143 (cuadEsp -> .)

    cuadEsp                        shift and go to state 343

state 334

    (132) factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .

    MULT            reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    DIV             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MAS             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MENOS           reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MAYORQUE        reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MENORQUE        reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    EQUALS          reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    DIFERENTE       reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    AND             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    OR              reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    COMA            reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    PARDER          reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    DOSPUNTOS       reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    CORDER          reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    PYC             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)


state 335

    (133) factor -> ID checkIDfac CORIZQ expresion COMA expresion . CORDER pushOT

    CORDER          shift and go to state 344


state 336

    (109) andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .

    OR              reduce using rule 109 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    COMA            reduce using rule 109 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    PARDER          reduce using rule 109 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    DOSPUNTOS       reduce using rule 109 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    CORDER          reduce using rule 109 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    PYC             reduce using rule 109 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)


state 337

    (86) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .

    ID              reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    write           reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    if              reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    while           reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    for             reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    read            reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    return          reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    LLAVEDER        reduce using rule 86 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)


state 338

    (87) condicionAux -> else cuadGoto . bloque
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 345

state 339

    (89) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .

    ID              reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    write           reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    if              reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    while           reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    for             reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    read            reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    return          reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    LLAVEDER        reduce using rule 89 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)


state 340

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER . gotoFor bloque returnFor
    (94) gotoFor -> .

    LLAVEIZQ        reduce using rule 94 (gotoFor -> .)

    gotoFor                        shift and go to state 346

state 341

    (72) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub . quitaFondo
    (139) quitaFondo -> .

    PYC             reduce using rule 139 (quitaFondo -> .)
    COMA            reduce using rule 139 (quitaFondo -> .)
    PARDER          reduce using rule 139 (quitaFondo -> .)
    MULT            reduce using rule 139 (quitaFondo -> .)
    DIV             reduce using rule 139 (quitaFondo -> .)
    MAS             reduce using rule 139 (quitaFondo -> .)
    MENOS           reduce using rule 139 (quitaFondo -> .)
    MAYORQUE        reduce using rule 139 (quitaFondo -> .)
    MENORQUE        reduce using rule 139 (quitaFondo -> .)
    EQUALS          reduce using rule 139 (quitaFondo -> .)
    DIFERENTE       reduce using rule 139 (quitaFondo -> .)
    AND             reduce using rule 139 (quitaFondo -> .)
    OR              reduce using rule 139 (quitaFondo -> .)
    DOSPUNTOS       reduce using rule 139 (quitaFondo -> .)
    CORDER          reduce using rule 139 (quitaFondo -> .)

    quitaFondo                     shift and go to state 347

state 342

    (79) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 79 (nextparametro -> COMA llamaux .)


state 343

    (140) llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .

    COMA            reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    PARDER          reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    MULT            reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    DIV             reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    MAS             reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    MENOS           reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    MAYORQUE        reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    MENORQUE        reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    EQUALS          reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    DIFERENTE       reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    AND             reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    OR              reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    DOSPUNTOS       reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    CORDER          reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)
    PYC             reduce using rule 140 (llamada_esp -> ID checkIDfac PUNTO especiales PARIZQ PARDER cuadEsp .)


state 344

    (133) factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER . pushOT
    (157) pushOT -> .

    MULT            reduce using rule 157 (pushOT -> .)
    DIV             reduce using rule 157 (pushOT -> .)
    MAS             reduce using rule 157 (pushOT -> .)
    MENOS           reduce using rule 157 (pushOT -> .)
    MAYORQUE        reduce using rule 157 (pushOT -> .)
    MENORQUE        reduce using rule 157 (pushOT -> .)
    EQUALS          reduce using rule 157 (pushOT -> .)
    DIFERENTE       reduce using rule 157 (pushOT -> .)
    AND             reduce using rule 157 (pushOT -> .)
    OR              reduce using rule 157 (pushOT -> .)
    COMA            reduce using rule 157 (pushOT -> .)
    PARDER          reduce using rule 157 (pushOT -> .)
    DOSPUNTOS       reduce using rule 157 (pushOT -> .)
    CORDER          reduce using rule 157 (pushOT -> .)
    PYC             reduce using rule 157 (pushOT -> .)

    pushOT                         shift and go to state 348

state 345

    (87) condicionAux -> else cuadGoto bloque .

    ID              reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    write           reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    if              reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    while           reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    for             reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    read            reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    return          reduce using rule 87 (condicionAux -> else cuadGoto bloque .)
    LLAVEDER        reduce using rule 87 (condicionAux -> else cuadGoto bloque .)


state 346

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor . bloque returnFor
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 349

state 347

    (72) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .

    PYC             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    COMA            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    PARDER          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MULT            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    DIV             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MAS             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MENOS           reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MAYORQUE        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MENORQUE        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    EQUALS          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    DIFERENTE       reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    AND             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    OR              reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    DOSPUNTOS       reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    CORDER          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)


state 348

    (133) factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .

    MULT            reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    DIV             reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MAS             reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MENOS           reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MAYORQUE        reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MENORQUE        reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    EQUALS          reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    DIFERENTE       reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    AND             reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    OR              reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    COMA            reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    PARDER          reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    DOSPUNTOS       reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    CORDER          reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    PYC             reduce using rule 133 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)


state 349

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque . returnFor
    (95) returnFor -> .

    ID              reduce using rule 95 (returnFor -> .)
    write           reduce using rule 95 (returnFor -> .)
    if              reduce using rule 95 (returnFor -> .)
    while           reduce using rule 95 (returnFor -> .)
    for             reduce using rule 95 (returnFor -> .)
    read            reduce using rule 95 (returnFor -> .)
    return          reduce using rule 95 (returnFor -> .)
    LLAVEDER        reduce using rule 95 (returnFor -> .)

    returnFor                      shift and go to state 350

state 350

    (92) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .

    ID              reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    write           reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    if              reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    while           reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    for             reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    read            reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    return          reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    LLAVEDER        reduce using rule 92 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for var in state 8 resolved as shift
WARNING: shift/reduce conflict for var in state 11 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for var in state 76 resolved as shift
WARNING: shift/reduce conflict for COMA in state 140 resolved as shift
WARNING: shift/reduce conflict for COMA in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 12
WARNING: reduce/reduce conflict in state 139 resolved using rule (cuadEsc -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (factor -> llamada_esp)
WARNING: rejected rule (empty -> <empty>) in state 140
WARNING: reduce/reduce conflict in state 141 resolved using rule (factor -> llamada)
WARNING: rejected rule (empty -> <empty>) in state 141
WARNING: reduce/reduce conflict in state 163 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 164 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 164
WARNING: reduce/reduce conflict in state 165 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (factor -> llamada) in state 166
WARNING: reduce/reduce conflict in state 214 resolved using rule (cuadAsignacion -> <empty>)
WARNING: rejected rule (factor -> llamada_esp) in state 214
WARNING: reduce/reduce conflict in state 215 resolved using rule (cuadAsignacion -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 215
WARNING: reduce/reduce conflict in state 259 resolved using rule (cuadPar -> <empty>)
WARNING: rejected rule (factor -> llamada_esp) in state 259
WARNING: reduce/reduce conflict in state 260 resolved using rule (cuadPar -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 260
