Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    boolprint

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program ID PYC paux paux2 mainfunction
Rule 2     programa -> program ID PYC empty mainfunction
Rule 3     paux -> vars
Rule 4     paux -> empty
Rule 5     paux2 -> function
Rule 6     paux2 -> empty
Rule 7     vars -> var type vaux PYC vars
Rule 8     vars -> empty
Rule 9     vaux -> ID
Rule 10    vaux -> ID CORIZQ CTEINT CORDER nextvar
Rule 11    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER nextvar
Rule 12    nextvar -> COMA vaux
Rule 13    nextvar -> empty
Rule 14    mainfunction -> func main PARIZQ PARDER vars bloque
Rule 15    mainfunction -> func main PARIZQ PARDER bloque
Rule 16    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 17    bloque -> LLAVEIZQ empty LLAVEDER
Rule 18    bloqueaux -> estatuto bloqueaux
Rule 19    bloqueaux -> estatuto
Rule 20    type -> int
Rule 21    type -> float
Rule 22    type -> string
Rule 23    type -> bool
Rule 24    function -> type ID PARIZQ funcaux PARDER vars bloque
Rule 25    function -> type ID PARIZQ empty PARDER vars bloque
Rule 26    funcaux -> type ID
Rule 27    funcaux -> type ID COMA funcaux
Rule 28    estatuto -> asignacion
Rule 29    estatuto -> escritura
Rule 30    estatuto -> llamada
Rule 31    estatuto -> condicion
Rule 32    estatuto -> whileloop
Rule 33    estatuto -> forloop
Rule 34    estatuto -> lectura
Rule 35    asignacion -> ID asignaux ASIGNA hyper_exp PYC
Rule 36    asignaux -> CORIZQ expresion CORDER
Rule 37    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 38    asignaux -> empty
Rule 39    escritura -> print PARIZQ escaux PARDER PYC
Rule 40    escaux -> expresion nextexp
Rule 41    escaux -> CTESTRING nextexp
Rule 42    escaux -> empty
Rule 43    nextexp -> COMA escaux
Rule 44    nextexp -> empty
Rule 45    llamada -> ID PARIZQ expresion nextexp PARDER
Rule 46    llamada -> ID PARIZQ PARDER
Rule 47    condicion -> if PARIZQ expresion PARDER bloque
Rule 48    condicion -> if PARIZQ expresion PARDER bloque else bloque
Rule 49    whileloop -> while PARIZQ expresion PARDER bloque
Rule 50    forloop -> for PARIZQ CTEINT DOSPUNTOS CTEINT PARDER bloque
Rule 51    lectura -> input PARIZQ ID PARDER PYC
Rule 52    expresion -> term
Rule 53    expresion -> term MAS term
Rule 54    expresion -> term MENOS term
Rule 55    term -> fact
Rule 56    term -> fact MULT fact
Rule 57    term -> fact DIV fact
Rule 58    fact -> varcte
Rule 59    fact -> varcte PARIZQ hyper_exp PARDER fact
Rule 60    varcte -> CTEINT
Rule 61    varcte -> CTEFLOAT
Rule 62    varcte -> ID
Rule 63    hyper_exp -> super_exp
Rule 64    hyper_exp -> super_exp AND super_exp
Rule 65    hyper_exp -> super_exp OR super_exp
Rule 66    super_exp -> expresion
Rule 67    super_exp -> expresion MAYORQUE expresion
Rule 68    super_exp -> expresion MENORQUE expresion
Rule 69    super_exp -> expresion EQUALS expresion
Rule 70    super_exp -> expresion DIFERENTE expresion
Rule 71    empty -> <empty>

Terminals, with rules where they appear

AND                  : 64
ASIGNA               : 35
COMA                 : 11 12 27 37 43
CORDER               : 10 11 36 37
CORIZQ               : 10 11 36 37
CTEFLOAT             : 61
CTEINT               : 10 11 11 50 50 60
CTESTRING            : 41
DIFERENTE            : 70
DIV                  : 57
DOSPUNTOS            : 50
EQUALS               : 69
ID                   : 1 2 9 10 11 24 25 26 27 35 45 46 51 62
LLAVEDER             : 16 17
LLAVEIZQ             : 16 17
MAS                  : 53
MAYORQUE             : 67
MENORQUE             : 68
MENOS                : 54
MULT                 : 56
OR                   : 65
PARDER               : 14 15 24 25 39 45 46 47 48 49 50 51 59
PARIZQ               : 14 15 24 25 39 45 46 47 48 49 50 51 59
PYC                  : 1 2 7 35 39 51
boolprint            : 
else                 : 48
error                : 
float                : 21
for                  : 50
func                 : 14 15
if                   : 47 48
input                : 51
int                  : 20
main                 : 14 15
program              : 1 2
string               : 22
var                  : 7
while                : 49

Nonterminals, with rules where they appear

asignacion           : 28
asignaux             : 35
bloque               : 14 15 24 25 47 48 48 49 50
bloqueaux            : 16 18
bool                 : 23
condicion            : 31
empty                : 2 4 6 8 13 17 25 38 42 44
escaux               : 39 43
escritura            : 29
estatuto             : 18 19
expresion            : 36 37 37 40 45 47 48 49 66 67 67 68 68 69 69 70 70
fact                 : 55 56 56 57 57 59
forloop              : 33
funcaux              : 24 27
function             : 5
hyper_exp            : 35 59
lectura              : 34
llamada              : 30
mainfunction         : 1 2
nextexp              : 40 41 45
nextvar              : 10 11
paux                 : 1
paux2                : 1
print                : 39
programa             : 0
super_exp            : 63 64 64 65 65
term                 : 52 53 53 54 54
type                 : 7 24 25 26 27
varcte               : 58 59
vars                 : 3 7 14 24 25
vaux                 : 7 12
whileloop            : 32

