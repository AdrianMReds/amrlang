Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC
Rule 2     programa -> program auxprograma ID PYC empty mainfunction end PYC
Rule 3     auxprograma -> <empty>
Rule 4     varsaux -> vars varsaux
Rule 5     varsaux -> empty
Rule 6     paux2 -> function paux2
Rule 7     paux2 -> empty
Rule 8     vars -> var type vaux PYC
Rule 9     vars -> empty
Rule 10    vaux -> ID agregaVar nextvar
Rule 11    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 12    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 13    nextvar -> COMA vaux
Rule 14    nextvar -> empty
Rule 15    agregaVar -> <empty>
Rule 16    guardarTipoVar -> <empty>
Rule 17    guardarTipoFunc -> <empty>
Rule 18    mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque
Rule 19    mainfunction -> func main agregaFunc PARIZQ PARDER bloque
Rule 20    agregaFunc -> <empty>
Rule 21    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 22    bloque -> LLAVEIZQ empty LLAVEDER
Rule 23    bloqueaux -> estatuto bloqueaux
Rule 24    bloqueaux -> estatuto
Rule 25    type -> int guardarTipoVar
Rule 26    type -> float guardarTipoVar
Rule 27    type -> string guardarTipoVar
Rule 28    type -> bool guardarTipoVar
Rule 29    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
Rule 30    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
Rule 31    ftype -> int guardarTipoFunc
Rule 32    ftype -> float guardarTipoFunc
Rule 33    ftype -> string guardarTipoFunc
Rule 34    ftype -> bool guardarTipoFunc
Rule 35    ftype -> void guardarTipoFunc
Rule 36    funcaux -> type ID agregaVar
Rule 37    funcaux -> type ID agregaVar COMA funcaux
Rule 38    estatuto -> asignacion
Rule 39    estatuto -> escritura
Rule 40    estatuto -> llamada
Rule 41    estatuto -> condicion
Rule 42    estatuto -> whileloop
Rule 43    estatuto -> forloop
Rule 44    estatuto -> lectura
Rule 45    asignacion -> ID asignaux ASIGNA expresion PYC
Rule 46    asignacion -> ID asignaux ASIGNA llamada_esp PYC
Rule 47    asignacion -> ID asignaux ASIGNA CTESTRING PYC
Rule 48    asignaux -> CORIZQ expresion CORDER
Rule 49    asignaux -> CORIZQ expresion COMA expresion CORDER
Rule 50    asignaux -> empty
Rule 51    escritura -> write PARIZQ escaux PARDER PYC
Rule 52    escaux -> expresion nextexp
Rule 53    escaux -> CTESTRING nextexp
Rule 54    escaux -> llamada_esp nextexp
Rule 55    nextexp -> COMA escaux
Rule 56    nextexp -> empty
Rule 57    llamada -> ID PARIZQ expresion llamaux PARDER
Rule 58    llamada -> ID PARIZQ llamada_esp llamaux PARDER
Rule 59    llamada -> ID PARIZQ PARDER
Rule 60    llamaux -> expresion nextparametro
Rule 61    llamaux -> llamada_esp nextparametro
Rule 62    nextparametro -> COMA llamaux
Rule 63    nextparametro -> empty
Rule 64    condicion -> if PARIZQ expresion PARDER bloque
Rule 65    condicion -> if PARIZQ expresion PARDER bloque else bloque
Rule 66    whileloop -> while PARIZQ expresion PARDER bloque
Rule 67    forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
Rule 68    lectura -> read PARIZQ ID PARDER PYC
Rule 69    expresion -> andExpresion
Rule 70    expresion -> andExpresion OR andExpresion
Rule 71    andExpresion -> relopExpresion
Rule 72    andExpresion -> relopExpresion AND relopExpresion
Rule 73    relopExpresion -> aritExpresion
Rule 74    relopExpresion -> aritExpresion MAYORQUE aritExpresion
Rule 75    relopExpresion -> aritExpresion MENORQUE aritExpresion
Rule 76    relopExpresion -> aritExpresion MAYORIGUAL aritExpresion
Rule 77    relopExpresion -> aritExpresion MENORIGUAL aritExpresion
Rule 78    relopExpresion -> aritExpresion EQUALS aritExpresion
Rule 79    relopExpresion -> aritExpresion DIFERENTE aritExpresion
Rule 80    aritExpresion -> term
Rule 81    aritExpresion -> term MAS term
Rule 82    aritExpresion -> term MENOS term
Rule 83    term -> factor
Rule 84    term -> factor MULT factor
Rule 85    term -> factor DIV factor
Rule 86    factor -> PARIZQ expresion PARDER
Rule 87    factor -> CTEINT
Rule 88    factor -> CTEFLOAT
Rule 89    factor -> ID
Rule 90    factor -> llamada_esp
Rule 91    llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 92    especiales -> length
Rule 93    especiales -> max
Rule 94    especiales -> min
Rule 95    especiales -> avg
Rule 96    especiales -> median
Rule 97    especiales -> mode
Rule 98    especiales -> variance
Rule 99    especiales -> stdev
Rule 100   empty -> <empty>

Terminals, with rules where they appear

AND                  : 72
ASIGNA               : 45 46 47
COMA                 : 12 13 37 49 55 62
CORDER               : 11 12 48 49
CORIZQ               : 11 12 48 49
CTEFLOAT             : 88
CTEINT               : 11 12 12 87
CTESTRING            : 47 53
DIFERENTE            : 79
DIV                  : 85
DOSPUNTOS            : 67
EQUALS               : 78
ID                   : 1 2 10 11 12 29 30 36 37 45 46 47 57 58 59 68 89 91
LLAVEDER             : 21 22
LLAVEIZQ             : 21 22
MAS                  : 81
MAYORIGUAL           : 76
MAYORQUE             : 74
MENORIGUAL           : 77
MENORQUE             : 75
MENOS                : 82
MULT                 : 84
OR                   : 70
PARDER               : 18 19 29 30 51 57 58 59 64 65 66 67 68 86 91
PARIZQ               : 18 19 29 30 51 57 58 59 64 65 66 67 68 86 91
PUNTO                : 91
PYC                  : 1 1 2 2 8 45 46 47 51 68
avg                  : 95
bool                 : 28 34
else                 : 65
end                  : 1 2
error                : 
float                : 26 32
for                  : 67
func                 : 18 19 29 30
if                   : 64 65
int                  : 25 31
length               : 92
main                 : 18 19
max                  : 93
median               : 96
min                  : 94
mode                 : 97
program              : 1 2
read                 : 68
stdev                : 99
string               : 27 33
var                  : 8
variance             : 98
void                 : 35
while                : 66
write                : 51

Nonterminals, with rules where they appear

agregaFunc           : 18 19 29 30
agregaVar            : 10 11 12 36 37
andExpresion         : 69 70 70
aritExpresion        : 73 74 74 75 75 76 76 77 77 78 78 79 79
asignacion           : 38
asignaux             : 45 46 47
auxprograma          : 1 2
bloque               : 18 19 29 30 64 65 65 66 67
bloqueaux            : 21 23
condicion            : 41
empty                : 2 5 7 9 14 22 30 50 56 63
escaux               : 51 55
escritura            : 39
especiales           : 91
estatuto             : 23 24
expresion            : 45 48 49 49 52 57 60 64 65 66 67 67 86
factor               : 83 84 84 85 85
forloop              : 43
ftype                : 29 30
funcaux              : 29 37
function             : 6
guardarTipoFunc      : 31 32 33 34 35
guardarTipoVar       : 25 26 27 28
lectura              : 44
llamada              : 40
llamada_esp          : 46 54 58 61 90
llamaux              : 57 58 62
mainfunction         : 1 2
nextexp              : 52 53 54
nextparametro        : 60 61
nextvar              : 10 11 12
paux2                : 1 6
programa             : 0
relopExpresion       : 71 72 72
term                 : 80 81 81 82 82
type                 : 8 36 37
vars                 : 4
varsaux              : 1 4 18 29 30
vaux                 : 8 13
whileloop            : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> . program auxprograma ID PYC empty mainfunction end PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . ID auxprograma PYC varsaux paux2 mainfunction end PYC
    (2) programa -> program . auxprograma ID PYC empty mainfunction end PYC
    (3) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 3

  ! ID              [ reduce using rule 3 (auxprograma -> .) ]

    auxprograma                    shift and go to state 4

state 3

    (1) programa -> program ID . auxprograma PYC varsaux paux2 mainfunction end PYC
    (3) auxprograma -> .

    PYC             reduce using rule 3 (auxprograma -> .)

    auxprograma                    shift and go to state 5

state 4

    (2) programa -> program auxprograma . ID PYC empty mainfunction end PYC

    ID              shift and go to state 6


state 5

    (1) programa -> program ID auxprograma . PYC varsaux paux2 mainfunction end PYC

    PYC             shift and go to state 7


state 6

    (2) programa -> program auxprograma ID . PYC empty mainfunction end PYC

    PYC             shift and go to state 8


state 7

    (1) programa -> program ID auxprograma PYC . varsaux paux2 mainfunction end PYC
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (100) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 100 (empty -> .)
    float           reduce using rule 100 (empty -> .)
    string          reduce using rule 100 (empty -> .)
    bool            reduce using rule 100 (empty -> .)
    void            reduce using rule 100 (empty -> .)
    func            reduce using rule 100 (empty -> .)

  ! var             [ reduce using rule 100 (empty -> .) ]

    varsaux                        shift and go to state 9
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 8

    (2) programa -> program auxprograma ID PYC . empty mainfunction end PYC
    (100) empty -> .

    func            reduce using rule 100 (empty -> .)

    empty                          shift and go to state 13

state 9

    (1) programa -> program ID auxprograma PYC varsaux . paux2 mainfunction end PYC
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (100) empty -> .
    (31) ftype -> . int guardarTipoFunc
    (32) ftype -> . float guardarTipoFunc
    (33) ftype -> . string guardarTipoFunc
    (34) ftype -> . bool guardarTipoFunc
    (35) ftype -> . void guardarTipoFunc

    func            reduce using rule 100 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    paux2                          shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 10

    (4) varsaux -> vars . varsaux
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (100) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    int             reduce using rule 100 (empty -> .)
    float           reduce using rule 100 (empty -> .)
    string          reduce using rule 100 (empty -> .)
    bool            reduce using rule 100 (empty -> .)
    void            reduce using rule 100 (empty -> .)
    func            reduce using rule 100 (empty -> .)
    LLAVEIZQ        reduce using rule 100 (empty -> .)

  ! var             [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 10
    varsaux                        shift and go to state 23
    empty                          shift and go to state 11

state 11

    (5) varsaux -> empty .
    (9) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 5 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 5 (varsaux -> empty .)
    int             reduce using rule 5 (varsaux -> empty .)
    float           reduce using rule 5 (varsaux -> empty .)
    string          reduce using rule 5 (varsaux -> empty .)
    bool            reduce using rule 5 (varsaux -> empty .)
    void            reduce using rule 5 (varsaux -> empty .)
    func            reduce using rule 5 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 5 (varsaux -> empty .)
    var             reduce using rule 9 (vars -> empty .)

  ! int             [ reduce using rule 9 (vars -> empty .) ]
  ! float           [ reduce using rule 9 (vars -> empty .) ]
  ! string          [ reduce using rule 9 (vars -> empty .) ]
  ! bool            [ reduce using rule 9 (vars -> empty .) ]
  ! void            [ reduce using rule 9 (vars -> empty .) ]
  ! func            [ reduce using rule 9 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 9 (vars -> empty .) ]


state 12

    (8) vars -> var . type vaux PYC
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 24

state 13

    (2) programa -> program auxprograma ID PYC empty . mainfunction end PYC
    (18) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 29

state 14

    (1) programa -> program ID auxprograma PYC varsaux paux2 . mainfunction end PYC
    (18) mainfunction -> . func main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> . func main agregaFunc PARIZQ PARDER bloque

    func            shift and go to state 30

    mainfunction                   shift and go to state 31

state 15

    (6) paux2 -> function . paux2
    (6) paux2 -> . function paux2
    (7) paux2 -> . empty
    (29) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque
    (100) empty -> .
    (31) ftype -> . int guardarTipoFunc
    (32) ftype -> . float guardarTipoFunc
    (33) ftype -> . string guardarTipoFunc
    (34) ftype -> . bool guardarTipoFunc
    (35) ftype -> . void guardarTipoFunc

    func            reduce using rule 100 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21
    void            shift and go to state 22

    function                       shift and go to state 15
    paux2                          shift and go to state 32
    empty                          shift and go to state 16
    ftype                          shift and go to state 17

state 16

    (7) paux2 -> empty .

    func            reduce using rule 7 (paux2 -> empty .)


state 17

    (29) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux bloque

    func            shift and go to state 33


state 18

    (31) ftype -> int . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 34

state 19

    (32) ftype -> float . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (33) ftype -> string . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (34) ftype -> bool . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (35) ftype -> void . guardarTipoFunc
    (17) guardarTipoFunc -> .

    func            reduce using rule 17 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (4) varsaux -> vars varsaux .

    int             reduce using rule 4 (varsaux -> vars varsaux .)
    float           reduce using rule 4 (varsaux -> vars varsaux .)
    string          reduce using rule 4 (varsaux -> vars varsaux .)
    bool            reduce using rule 4 (varsaux -> vars varsaux .)
    void            reduce using rule 4 (varsaux -> vars varsaux .)
    func            reduce using rule 4 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 4 (varsaux -> vars varsaux .)


state 24

    (8) vars -> var type . vaux PYC
    (10) vaux -> . ID agregaVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 39

state 25

    (25) type -> int . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 41

state 26

    (26) type -> float . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (27) type -> string . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (28) type -> bool . guardarTipoVar
    (16) guardarTipoVar -> .

    ID              reduce using rule 16 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (2) programa -> program auxprograma ID PYC empty mainfunction . end PYC

    end             shift and go to state 45


state 30

    (18) mainfunction -> func . main agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func . main agregaFunc PARIZQ PARDER bloque

    main            shift and go to state 46


state 31

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction . end PYC

    end             shift and go to state 47


state 32

    (6) paux2 -> function paux2 .

    func            reduce using rule 6 (paux2 -> function paux2 .)


state 33

    (29) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux bloque

    ID              shift and go to state 48


state 34

    (31) ftype -> int guardarTipoFunc .

    func            reduce using rule 31 (ftype -> int guardarTipoFunc .)


state 35

    (32) ftype -> float guardarTipoFunc .

    func            reduce using rule 32 (ftype -> float guardarTipoFunc .)


state 36

    (33) ftype -> string guardarTipoFunc .

    func            reduce using rule 33 (ftype -> string guardarTipoFunc .)


state 37

    (34) ftype -> bool guardarTipoFunc .

    func            reduce using rule 34 (ftype -> bool guardarTipoFunc .)


state 38

    (35) ftype -> void guardarTipoFunc .

    func            reduce using rule 35 (ftype -> void guardarTipoFunc .)


state 39

    (8) vars -> var type vaux . PYC

    PYC             shift and go to state 49


state 40

    (10) vaux -> ID . agregaVar nextvar
    (11) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (15) agregaVar -> .

    CORIZQ          shift and go to state 51
    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 50

state 41

    (25) type -> int guardarTipoVar .

    ID              reduce using rule 25 (type -> int guardarTipoVar .)


state 42

    (26) type -> float guardarTipoVar .

    ID              reduce using rule 26 (type -> float guardarTipoVar .)


state 43

    (27) type -> string guardarTipoVar .

    ID              reduce using rule 27 (type -> string guardarTipoVar .)


state 44

    (28) type -> bool guardarTipoVar .

    ID              reduce using rule 28 (type -> bool guardarTipoVar .)


state 45

    (2) programa -> program auxprograma ID PYC empty mainfunction end . PYC

    PYC             shift and go to state 52


state 46

    (18) mainfunction -> func main . agregaFunc PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func main . agregaFunc PARIZQ PARDER bloque
    (20) agregaFunc -> .

    PARIZQ          reduce using rule 20 (agregaFunc -> .)

    agregaFunc                     shift and go to state 53

state 47

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end . PYC

    PYC             shift and go to state 54


state 48

    (29) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux bloque
    (20) agregaFunc -> .

    PARIZQ          reduce using rule 20 (agregaFunc -> .)

    agregaFunc                     shift and go to state 55

state 49

    (8) vars -> var type vaux PYC .

    var             reduce using rule 8 (vars -> var type vaux PYC .)
    int             reduce using rule 8 (vars -> var type vaux PYC .)
    float           reduce using rule 8 (vars -> var type vaux PYC .)
    string          reduce using rule 8 (vars -> var type vaux PYC .)
    bool            reduce using rule 8 (vars -> var type vaux PYC .)
    void            reduce using rule 8 (vars -> var type vaux PYC .)
    func            reduce using rule 8 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 8 (vars -> var type vaux PYC .)


state 50

    (10) vaux -> ID agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (100) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 100 (empty -> .)

    nextvar                        shift and go to state 56
    empty                          shift and go to state 58

state 51

    (11) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (12) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 59


state 52

    (2) programa -> program auxprograma ID PYC empty mainfunction end PYC .

    $end            reduce using rule 2 (programa -> program auxprograma ID PYC empty mainfunction end PYC .)


state 53

    (18) mainfunction -> func main agregaFunc . PARIZQ PARDER varsaux bloque
    (19) mainfunction -> func main agregaFunc . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 60


state 54

    (1) programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .

    $end            reduce using rule 1 (programa -> program ID auxprograma PYC varsaux paux2 mainfunction end PYC .)


state 55

    (29) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux bloque

    PARIZQ          shift and go to state 61


state 56

    (10) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 10 (vaux -> ID agregaVar nextvar .)


state 57

    (13) nextvar -> COMA . vaux
    (10) vaux -> . ID agregaVar nextvar
    (11) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (12) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 40

    vaux                           shift and go to state 62

state 58

    (14) nextvar -> empty .

    PYC             reduce using rule 14 (nextvar -> empty .)


state 59

    (11) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (12) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 63
    COMA            shift and go to state 64


state 60

    (18) mainfunction -> func main agregaFunc PARIZQ . PARDER varsaux bloque
    (19) mainfunction -> func main agregaFunc PARIZQ . PARDER bloque

    PARDER          shift and go to state 65


state 61

    (29) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux bloque
    (30) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux bloque
    (36) funcaux -> . type ID agregaVar
    (37) funcaux -> . type ID agregaVar COMA funcaux
    (100) empty -> .
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    PARDER          reduce using rule 100 (empty -> .)
    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    funcaux                        shift and go to state 66
    empty                          shift and go to state 67
    type                           shift and go to state 68

state 62

    (13) nextvar -> COMA vaux .

    PYC             reduce using rule 13 (nextvar -> COMA vaux .)


state 63

    (11) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 69

state 64

    (12) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 70


state 65

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER . varsaux bloque
    (19) mainfunction -> func main agregaFunc PARIZQ PARDER . bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (100) empty -> .

  ! shift/reduce conflict for LLAVEIZQ resolved as shift
  ! shift/reduce conflict for var resolved as shift
    LLAVEIZQ        shift and go to state 73
    var             shift and go to state 12

  ! LLAVEIZQ        [ reduce using rule 100 (empty -> .) ]
  ! var             [ reduce using rule 100 (empty -> .) ]

    varsaux                        shift and go to state 71
    bloque                         shift and go to state 72
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 66

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux bloque

    PARDER          shift and go to state 74


state 67

    (30) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux bloque

    PARDER          shift and go to state 75


state 68

    (36) funcaux -> type . ID agregaVar
    (37) funcaux -> type . ID agregaVar COMA funcaux

    ID              shift and go to state 76


state 69

    (11) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (100) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 100 (empty -> .)

    nextvar                        shift and go to state 77
    empty                          shift and go to state 58

state 70

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 78


state 71

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 79

state 72

    (19) mainfunction -> func main agregaFunc PARIZQ PARDER bloque .

    end             reduce using rule 19 (mainfunction -> func main agregaFunc PARIZQ PARDER bloque .)


state 73

    (21) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (22) bloque -> LLAVEIZQ . empty LLAVEDER
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (100) empty -> .
    (38) estatuto -> . asignacion
    (39) estatuto -> . escritura
    (40) estatuto -> . llamada
    (41) estatuto -> . condicion
    (42) estatuto -> . whileloop
    (43) estatuto -> . forloop
    (44) estatuto -> . lectura
    (45) asignacion -> . ID asignaux ASIGNA expresion PYC
    (46) asignacion -> . ID asignaux ASIGNA llamada_esp PYC
    (47) asignacion -> . ID asignaux ASIGNA CTESTRING PYC
    (51) escritura -> . write PARIZQ escaux PARDER PYC
    (57) llamada -> . ID PARIZQ expresion llamaux PARDER
    (58) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (59) llamada -> . ID PARIZQ PARDER
    (64) condicion -> . if PARIZQ expresion PARDER bloque
    (65) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (66) whileloop -> . while PARIZQ expresion PARDER bloque
    (67) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (68) lectura -> . read PARIZQ ID PARDER PYC

    LLAVEDER        reduce using rule 100 (empty -> .)
    ID              shift and go to state 90
    write           shift and go to state 91
    if              shift and go to state 92
    while           shift and go to state 93
    for             shift and go to state 94
    read            shift and go to state 95

    bloqueaux                      shift and go to state 80
    empty                          shift and go to state 81
    estatuto                       shift and go to state 82
    asignacion                     shift and go to state 83
    escritura                      shift and go to state 84
    llamada                        shift and go to state 85
    condicion                      shift and go to state 86
    whileloop                      shift and go to state 87
    forloop                        shift and go to state 88
    lectura                        shift and go to state 89

state 74

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (100) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 100 (empty -> .)

  ! var             [ reduce using rule 100 (empty -> .) ]

    varsaux                        shift and go to state 96
    vars                           shift and go to state 10
    empty                          shift and go to state 11

state 75

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux bloque
    (4) varsaux -> . vars varsaux
    (5) varsaux -> . empty
    (8) vars -> . var type vaux PYC
    (9) vars -> . empty
    (100) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 12
    LLAVEIZQ        reduce using rule 100 (empty -> .)

  ! var             [ reduce using rule 100 (empty -> .) ]

    empty                          shift and go to state 11
    varsaux                        shift and go to state 97
    vars                           shift and go to state 10

state 76

    (36) funcaux -> type ID . agregaVar
    (37) funcaux -> type ID . agregaVar COMA funcaux
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PARDER          reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 98

state 77

    (11) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 11 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 78

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (15) agregaVar -> .

    COMA            reduce using rule 15 (agregaVar -> .)
    PYC             reduce using rule 15 (agregaVar -> .)

    agregaVar                      shift and go to state 99

state 79

    (18) mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .

    end             reduce using rule 18 (mainfunction -> func main agregaFunc PARIZQ PARDER varsaux bloque .)


state 80

    (21) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 100


state 81

    (22) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 101


state 82

    (23) bloqueaux -> estatuto . bloqueaux
    (24) bloqueaux -> estatuto .
    (23) bloqueaux -> . estatuto bloqueaux
    (24) bloqueaux -> . estatuto
    (38) estatuto -> . asignacion
    (39) estatuto -> . escritura
    (40) estatuto -> . llamada
    (41) estatuto -> . condicion
    (42) estatuto -> . whileloop
    (43) estatuto -> . forloop
    (44) estatuto -> . lectura
    (45) asignacion -> . ID asignaux ASIGNA expresion PYC
    (46) asignacion -> . ID asignaux ASIGNA llamada_esp PYC
    (47) asignacion -> . ID asignaux ASIGNA CTESTRING PYC
    (51) escritura -> . write PARIZQ escaux PARDER PYC
    (57) llamada -> . ID PARIZQ expresion llamaux PARDER
    (58) llamada -> . ID PARIZQ llamada_esp llamaux PARDER
    (59) llamada -> . ID PARIZQ PARDER
    (64) condicion -> . if PARIZQ expresion PARDER bloque
    (65) condicion -> . if PARIZQ expresion PARDER bloque else bloque
    (66) whileloop -> . while PARIZQ expresion PARDER bloque
    (67) forloop -> . for PARIZQ expresion DOSPUNTOS expresion PARDER bloque
    (68) lectura -> . read PARIZQ ID PARDER PYC

    LLAVEDER        reduce using rule 24 (bloqueaux -> estatuto .)
    ID              shift and go to state 90
    write           shift and go to state 91
    if              shift and go to state 92
    while           shift and go to state 93
    for             shift and go to state 94
    read            shift and go to state 95

    estatuto                       shift and go to state 82
    bloqueaux                      shift and go to state 102
    asignacion                     shift and go to state 83
    escritura                      shift and go to state 84
    llamada                        shift and go to state 85
    condicion                      shift and go to state 86
    whileloop                      shift and go to state 87
    forloop                        shift and go to state 88
    lectura                        shift and go to state 89

state 83

    (38) estatuto -> asignacion .

    ID              reduce using rule 38 (estatuto -> asignacion .)
    write           reduce using rule 38 (estatuto -> asignacion .)
    if              reduce using rule 38 (estatuto -> asignacion .)
    while           reduce using rule 38 (estatuto -> asignacion .)
    for             reduce using rule 38 (estatuto -> asignacion .)
    read            reduce using rule 38 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 38 (estatuto -> asignacion .)


state 84

    (39) estatuto -> escritura .

    ID              reduce using rule 39 (estatuto -> escritura .)
    write           reduce using rule 39 (estatuto -> escritura .)
    if              reduce using rule 39 (estatuto -> escritura .)
    while           reduce using rule 39 (estatuto -> escritura .)
    for             reduce using rule 39 (estatuto -> escritura .)
    read            reduce using rule 39 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 39 (estatuto -> escritura .)


state 85

    (40) estatuto -> llamada .

    ID              reduce using rule 40 (estatuto -> llamada .)
    write           reduce using rule 40 (estatuto -> llamada .)
    if              reduce using rule 40 (estatuto -> llamada .)
    while           reduce using rule 40 (estatuto -> llamada .)
    for             reduce using rule 40 (estatuto -> llamada .)
    read            reduce using rule 40 (estatuto -> llamada .)
    LLAVEDER        reduce using rule 40 (estatuto -> llamada .)


state 86

    (41) estatuto -> condicion .

    ID              reduce using rule 41 (estatuto -> condicion .)
    write           reduce using rule 41 (estatuto -> condicion .)
    if              reduce using rule 41 (estatuto -> condicion .)
    while           reduce using rule 41 (estatuto -> condicion .)
    for             reduce using rule 41 (estatuto -> condicion .)
    read            reduce using rule 41 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 41 (estatuto -> condicion .)


state 87

    (42) estatuto -> whileloop .

    ID              reduce using rule 42 (estatuto -> whileloop .)
    write           reduce using rule 42 (estatuto -> whileloop .)
    if              reduce using rule 42 (estatuto -> whileloop .)
    while           reduce using rule 42 (estatuto -> whileloop .)
    for             reduce using rule 42 (estatuto -> whileloop .)
    read            reduce using rule 42 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 42 (estatuto -> whileloop .)


state 88

    (43) estatuto -> forloop .

    ID              reduce using rule 43 (estatuto -> forloop .)
    write           reduce using rule 43 (estatuto -> forloop .)
    if              reduce using rule 43 (estatuto -> forloop .)
    while           reduce using rule 43 (estatuto -> forloop .)
    for             reduce using rule 43 (estatuto -> forloop .)
    read            reduce using rule 43 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 43 (estatuto -> forloop .)


state 89

    (44) estatuto -> lectura .

    ID              reduce using rule 44 (estatuto -> lectura .)
    write           reduce using rule 44 (estatuto -> lectura .)
    if              reduce using rule 44 (estatuto -> lectura .)
    while           reduce using rule 44 (estatuto -> lectura .)
    for             reduce using rule 44 (estatuto -> lectura .)
    read            reduce using rule 44 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 44 (estatuto -> lectura .)


state 90

    (45) asignacion -> ID . asignaux ASIGNA expresion PYC
    (46) asignacion -> ID . asignaux ASIGNA llamada_esp PYC
    (47) asignacion -> ID . asignaux ASIGNA CTESTRING PYC
    (57) llamada -> ID . PARIZQ expresion llamaux PARDER
    (58) llamada -> ID . PARIZQ llamada_esp llamaux PARDER
    (59) llamada -> ID . PARIZQ PARDER
    (48) asignaux -> . CORIZQ expresion CORDER
    (49) asignaux -> . CORIZQ expresion COMA expresion CORDER
    (50) asignaux -> . empty
    (100) empty -> .

    PARIZQ          shift and go to state 104
    CORIZQ          shift and go to state 105
    ASIGNA          reduce using rule 100 (empty -> .)

    asignaux                       shift and go to state 103
    empty                          shift and go to state 106

state 91

    (51) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 107


state 92

    (64) condicion -> if . PARIZQ expresion PARDER bloque
    (65) condicion -> if . PARIZQ expresion PARDER bloque else bloque

    PARIZQ          shift and go to state 108


state 93

    (66) whileloop -> while . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 109


state 94

    (67) forloop -> for . PARIZQ expresion DOSPUNTOS expresion PARDER bloque

    PARIZQ          shift and go to state 110


state 95

    (68) lectura -> read . PARIZQ ID PARDER PYC

    PARIZQ          shift and go to state 111


state 96

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 112

state 97

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 113

state 98

    (36) funcaux -> type ID agregaVar .
    (37) funcaux -> type ID agregaVar . COMA funcaux

    PARDER          reduce using rule 36 (funcaux -> type ID agregaVar .)
    COMA            shift and go to state 114


state 99

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (13) nextvar -> . COMA vaux
    (14) nextvar -> . empty
    (100) empty -> .

    COMA            shift and go to state 57
    PYC             reduce using rule 100 (empty -> .)

    nextvar                        shift and go to state 115
    empty                          shift and go to state 58

state 100

    (21) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 21 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 101

    (22) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 22 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 102

    (23) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 23 (bloqueaux -> estatuto bloqueaux .)


state 103

    (45) asignacion -> ID asignaux . ASIGNA expresion PYC
    (46) asignacion -> ID asignaux . ASIGNA llamada_esp PYC
    (47) asignacion -> ID asignaux . ASIGNA CTESTRING PYC

    ASIGNA          shift and go to state 116


state 104

    (57) llamada -> ID PARIZQ . expresion llamaux PARDER
    (58) llamada -> ID PARIZQ . llamada_esp llamaux PARDER
    (59) llamada -> ID PARIZQ . PARDER
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

    PARDER          shift and go to state 120
    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

    expresion                      shift and go to state 119
    llamada_esp                    shift and go to state 121
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 105

    (48) asignaux -> CORIZQ . expresion CORDER
    (49) asignaux -> CORIZQ . expresion COMA expresion CORDER
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 129
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 106

    (50) asignaux -> empty .

    ASIGNA          reduce using rule 50 (asignaux -> empty .)


state 107

    (51) escritura -> write PARIZQ . escaux PARDER PYC
    (52) escaux -> . expresion nextexp
    (53) escaux -> . CTESTRING nextexp
    (54) escaux -> . llamada_esp nextexp
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

    CTESTRING       shift and go to state 134
    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

    escaux                         shift and go to state 132
    expresion                      shift and go to state 133
    llamada_esp                    shift and go to state 135
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 108

    (64) condicion -> if PARIZQ . expresion PARDER bloque
    (65) condicion -> if PARIZQ . expresion PARDER bloque else bloque
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 136
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 109

    (66) whileloop -> while PARIZQ . expresion PARDER bloque
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 137
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 110

    (67) forloop -> for PARIZQ . expresion DOSPUNTOS expresion PARDER bloque
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 138
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 111

    (68) lectura -> read PARIZQ . ID PARDER PYC

    ID              shift and go to state 139


state 112

    (29) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .

    int             reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    float           reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    string          reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    bool            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    void            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)
    func            reduce using rule 29 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux bloque .)


state 113

    (30) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .

    int             reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    float           reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    string          reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    bool            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    void            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)
    func            reduce using rule 30 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux bloque .)


state 114

    (37) funcaux -> type ID agregaVar COMA . funcaux
    (36) funcaux -> . type ID agregaVar
    (37) funcaux -> . type ID agregaVar COMA funcaux
    (25) type -> . int guardarTipoVar
    (26) type -> . float guardarTipoVar
    (27) type -> . string guardarTipoVar
    (28) type -> . bool guardarTipoVar

    int             shift and go to state 25
    float           shift and go to state 26
    string          shift and go to state 27
    bool            shift and go to state 28

    type                           shift and go to state 68
    funcaux                        shift and go to state 140

state 115

    (12) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 116

    (45) asignacion -> ID asignaux ASIGNA . expresion PYC
    (46) asignacion -> ID asignaux ASIGNA . llamada_esp PYC
    (47) asignacion -> ID asignaux ASIGNA . CTESTRING PYC
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

    CTESTRING       shift and go to state 143
    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

    expresion                      shift and go to state 141
    llamada_esp                    shift and go to state 142
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 117

    (91) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (89) factor -> ID .

    PUNTO           shift and go to state 144
    MULT            reduce using rule 89 (factor -> ID .)
    DIV             reduce using rule 89 (factor -> ID .)
    MAS             reduce using rule 89 (factor -> ID .)
    MENOS           reduce using rule 89 (factor -> ID .)
    MAYORQUE        reduce using rule 89 (factor -> ID .)
    MENORQUE        reduce using rule 89 (factor -> ID .)
    MAYORIGUAL      reduce using rule 89 (factor -> ID .)
    MENORIGUAL      reduce using rule 89 (factor -> ID .)
    EQUALS          reduce using rule 89 (factor -> ID .)
    DIFERENTE       reduce using rule 89 (factor -> ID .)
    AND             reduce using rule 89 (factor -> ID .)
    OR              reduce using rule 89 (factor -> ID .)
    ID              reduce using rule 89 (factor -> ID .)
    PARIZQ          reduce using rule 89 (factor -> ID .)
    CTEINT          reduce using rule 89 (factor -> ID .)
    CTEFLOAT        reduce using rule 89 (factor -> ID .)
    COMA            reduce using rule 89 (factor -> ID .)
    PARDER          reduce using rule 89 (factor -> ID .)
    PYC             reduce using rule 89 (factor -> ID .)


state 118

    (86) factor -> PARIZQ . expresion PARDER
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 145
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 119

    (57) llamada -> ID PARIZQ expresion . llamaux PARDER
    (60) llamaux -> . expresion nextparametro
    (61) llamaux -> . llamada_esp nextparametro
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

    expresion                      shift and go to state 146
    llamaux                        shift and go to state 147
    llamada_esp                    shift and go to state 148
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 120

    (59) llamada -> ID PARIZQ PARDER .

    ID              reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    write           reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    if              reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    while           reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    for             reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    read            reduce using rule 59 (llamada -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 59 (llamada -> ID PARIZQ PARDER .)


state 121

    (58) llamada -> ID PARIZQ llamada_esp . llamaux PARDER
    (90) factor -> llamada_esp .
    (60) llamaux -> . expresion nextparametro
    (61) llamaux -> . llamada_esp nextparametro
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
    MULT            reduce using rule 90 (factor -> llamada_esp .)
    DIV             reduce using rule 90 (factor -> llamada_esp .)
    MAS             reduce using rule 90 (factor -> llamada_esp .)
    MENOS           reduce using rule 90 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MAYORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    MENORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    EQUALS          reduce using rule 90 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 90 (factor -> llamada_esp .)
    AND             reduce using rule 90 (factor -> llamada_esp .)
    OR              reduce using rule 90 (factor -> llamada_esp .)
    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

  ! ID              [ reduce using rule 90 (factor -> llamada_esp .) ]
  ! PARIZQ          [ reduce using rule 90 (factor -> llamada_esp .) ]
  ! CTEINT          [ reduce using rule 90 (factor -> llamada_esp .) ]
  ! CTEFLOAT        [ reduce using rule 90 (factor -> llamada_esp .) ]

    llamada_esp                    shift and go to state 148
    llamaux                        shift and go to state 149
    expresion                      shift and go to state 146
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 122

    (69) expresion -> andExpresion .
    (70) expresion -> andExpresion . OR andExpresion

    ID              reduce using rule 69 (expresion -> andExpresion .)
    PARIZQ          reduce using rule 69 (expresion -> andExpresion .)
    CTEINT          reduce using rule 69 (expresion -> andExpresion .)
    CTEFLOAT        reduce using rule 69 (expresion -> andExpresion .)
    CORDER          reduce using rule 69 (expresion -> andExpresion .)
    COMA            reduce using rule 69 (expresion -> andExpresion .)
    PARDER          reduce using rule 69 (expresion -> andExpresion .)
    DOSPUNTOS       reduce using rule 69 (expresion -> andExpresion .)
    PYC             reduce using rule 69 (expresion -> andExpresion .)
    OR              shift and go to state 150


state 123

    (71) andExpresion -> relopExpresion .
    (72) andExpresion -> relopExpresion . AND relopExpresion

    OR              reduce using rule 71 (andExpresion -> relopExpresion .)
    ID              reduce using rule 71 (andExpresion -> relopExpresion .)
    PARIZQ          reduce using rule 71 (andExpresion -> relopExpresion .)
    CTEINT          reduce using rule 71 (andExpresion -> relopExpresion .)
    CTEFLOAT        reduce using rule 71 (andExpresion -> relopExpresion .)
    CORDER          reduce using rule 71 (andExpresion -> relopExpresion .)
    COMA            reduce using rule 71 (andExpresion -> relopExpresion .)
    PARDER          reduce using rule 71 (andExpresion -> relopExpresion .)
    DOSPUNTOS       reduce using rule 71 (andExpresion -> relopExpresion .)
    PYC             reduce using rule 71 (andExpresion -> relopExpresion .)
    AND             shift and go to state 151


state 124

    (73) relopExpresion -> aritExpresion .
    (74) relopExpresion -> aritExpresion . MAYORQUE aritExpresion
    (75) relopExpresion -> aritExpresion . MENORQUE aritExpresion
    (76) relopExpresion -> aritExpresion . MAYORIGUAL aritExpresion
    (77) relopExpresion -> aritExpresion . MENORIGUAL aritExpresion
    (78) relopExpresion -> aritExpresion . EQUALS aritExpresion
    (79) relopExpresion -> aritExpresion . DIFERENTE aritExpresion

    AND             reduce using rule 73 (relopExpresion -> aritExpresion .)
    OR              reduce using rule 73 (relopExpresion -> aritExpresion .)
    ID              reduce using rule 73 (relopExpresion -> aritExpresion .)
    PARIZQ          reduce using rule 73 (relopExpresion -> aritExpresion .)
    CTEINT          reduce using rule 73 (relopExpresion -> aritExpresion .)
    CTEFLOAT        reduce using rule 73 (relopExpresion -> aritExpresion .)
    CORDER          reduce using rule 73 (relopExpresion -> aritExpresion .)
    COMA            reduce using rule 73 (relopExpresion -> aritExpresion .)
    PARDER          reduce using rule 73 (relopExpresion -> aritExpresion .)
    DOSPUNTOS       reduce using rule 73 (relopExpresion -> aritExpresion .)
    PYC             reduce using rule 73 (relopExpresion -> aritExpresion .)
    MAYORQUE        shift and go to state 152
    MENORQUE        shift and go to state 153
    MAYORIGUAL      shift and go to state 154
    MENORIGUAL      shift and go to state 155
    EQUALS          shift and go to state 156
    DIFERENTE       shift and go to state 157


state 125

    (80) aritExpresion -> term .
    (81) aritExpresion -> term . MAS term
    (82) aritExpresion -> term . MENOS term

    MAYORQUE        reduce using rule 80 (aritExpresion -> term .)
    MENORQUE        reduce using rule 80 (aritExpresion -> term .)
    MAYORIGUAL      reduce using rule 80 (aritExpresion -> term .)
    MENORIGUAL      reduce using rule 80 (aritExpresion -> term .)
    EQUALS          reduce using rule 80 (aritExpresion -> term .)
    DIFERENTE       reduce using rule 80 (aritExpresion -> term .)
    AND             reduce using rule 80 (aritExpresion -> term .)
    OR              reduce using rule 80 (aritExpresion -> term .)
    ID              reduce using rule 80 (aritExpresion -> term .)
    PARIZQ          reduce using rule 80 (aritExpresion -> term .)
    CTEINT          reduce using rule 80 (aritExpresion -> term .)
    CTEFLOAT        reduce using rule 80 (aritExpresion -> term .)
    CORDER          reduce using rule 80 (aritExpresion -> term .)
    COMA            reduce using rule 80 (aritExpresion -> term .)
    PARDER          reduce using rule 80 (aritExpresion -> term .)
    DOSPUNTOS       reduce using rule 80 (aritExpresion -> term .)
    PYC             reduce using rule 80 (aritExpresion -> term .)
    MAS             shift and go to state 158
    MENOS           shift and go to state 159


state 126

    (83) term -> factor .
    (84) term -> factor . MULT factor
    (85) term -> factor . DIV factor

    MAS             reduce using rule 83 (term -> factor .)
    MENOS           reduce using rule 83 (term -> factor .)
    MAYORQUE        reduce using rule 83 (term -> factor .)
    MENORQUE        reduce using rule 83 (term -> factor .)
    MAYORIGUAL      reduce using rule 83 (term -> factor .)
    MENORIGUAL      reduce using rule 83 (term -> factor .)
    EQUALS          reduce using rule 83 (term -> factor .)
    DIFERENTE       reduce using rule 83 (term -> factor .)
    AND             reduce using rule 83 (term -> factor .)
    OR              reduce using rule 83 (term -> factor .)
    ID              reduce using rule 83 (term -> factor .)
    PARIZQ          reduce using rule 83 (term -> factor .)
    CTEINT          reduce using rule 83 (term -> factor .)
    CTEFLOAT        reduce using rule 83 (term -> factor .)
    CORDER          reduce using rule 83 (term -> factor .)
    COMA            reduce using rule 83 (term -> factor .)
    PARDER          reduce using rule 83 (term -> factor .)
    DOSPUNTOS       reduce using rule 83 (term -> factor .)
    PYC             reduce using rule 83 (term -> factor .)
    MULT            shift and go to state 160
    DIV             shift and go to state 161


state 127

    (87) factor -> CTEINT .

    MULT            reduce using rule 87 (factor -> CTEINT .)
    DIV             reduce using rule 87 (factor -> CTEINT .)
    MAS             reduce using rule 87 (factor -> CTEINT .)
    MENOS           reduce using rule 87 (factor -> CTEINT .)
    MAYORQUE        reduce using rule 87 (factor -> CTEINT .)
    MENORQUE        reduce using rule 87 (factor -> CTEINT .)
    MAYORIGUAL      reduce using rule 87 (factor -> CTEINT .)
    MENORIGUAL      reduce using rule 87 (factor -> CTEINT .)
    EQUALS          reduce using rule 87 (factor -> CTEINT .)
    DIFERENTE       reduce using rule 87 (factor -> CTEINT .)
    AND             reduce using rule 87 (factor -> CTEINT .)
    OR              reduce using rule 87 (factor -> CTEINT .)
    ID              reduce using rule 87 (factor -> CTEINT .)
    PARIZQ          reduce using rule 87 (factor -> CTEINT .)
    CTEINT          reduce using rule 87 (factor -> CTEINT .)
    CTEFLOAT        reduce using rule 87 (factor -> CTEINT .)
    CORDER          reduce using rule 87 (factor -> CTEINT .)
    COMA            reduce using rule 87 (factor -> CTEINT .)
    PARDER          reduce using rule 87 (factor -> CTEINT .)
    DOSPUNTOS       reduce using rule 87 (factor -> CTEINT .)
    PYC             reduce using rule 87 (factor -> CTEINT .)


state 128

    (88) factor -> CTEFLOAT .

    MULT            reduce using rule 88 (factor -> CTEFLOAT .)
    DIV             reduce using rule 88 (factor -> CTEFLOAT .)
    MAS             reduce using rule 88 (factor -> CTEFLOAT .)
    MENOS           reduce using rule 88 (factor -> CTEFLOAT .)
    MAYORQUE        reduce using rule 88 (factor -> CTEFLOAT .)
    MENORQUE        reduce using rule 88 (factor -> CTEFLOAT .)
    MAYORIGUAL      reduce using rule 88 (factor -> CTEFLOAT .)
    MENORIGUAL      reduce using rule 88 (factor -> CTEFLOAT .)
    EQUALS          reduce using rule 88 (factor -> CTEFLOAT .)
    DIFERENTE       reduce using rule 88 (factor -> CTEFLOAT .)
    AND             reduce using rule 88 (factor -> CTEFLOAT .)
    OR              reduce using rule 88 (factor -> CTEFLOAT .)
    ID              reduce using rule 88 (factor -> CTEFLOAT .)
    PARIZQ          reduce using rule 88 (factor -> CTEFLOAT .)
    CTEINT          reduce using rule 88 (factor -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 88 (factor -> CTEFLOAT .)
    CORDER          reduce using rule 88 (factor -> CTEFLOAT .)
    COMA            reduce using rule 88 (factor -> CTEFLOAT .)
    PARDER          reduce using rule 88 (factor -> CTEFLOAT .)
    DOSPUNTOS       reduce using rule 88 (factor -> CTEFLOAT .)
    PYC             reduce using rule 88 (factor -> CTEFLOAT .)


state 129

    (48) asignaux -> CORIZQ expresion . CORDER
    (49) asignaux -> CORIZQ expresion . COMA expresion CORDER

    CORDER          shift and go to state 162
    COMA            shift and go to state 163


state 130

    (89) factor -> ID .
    (91) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER

    MULT            reduce using rule 89 (factor -> ID .)
    DIV             reduce using rule 89 (factor -> ID .)
    MAS             reduce using rule 89 (factor -> ID .)
    MENOS           reduce using rule 89 (factor -> ID .)
    MAYORQUE        reduce using rule 89 (factor -> ID .)
    MENORQUE        reduce using rule 89 (factor -> ID .)
    MAYORIGUAL      reduce using rule 89 (factor -> ID .)
    MENORIGUAL      reduce using rule 89 (factor -> ID .)
    EQUALS          reduce using rule 89 (factor -> ID .)
    DIFERENTE       reduce using rule 89 (factor -> ID .)
    AND             reduce using rule 89 (factor -> ID .)
    OR              reduce using rule 89 (factor -> ID .)
    CORDER          reduce using rule 89 (factor -> ID .)
    COMA            reduce using rule 89 (factor -> ID .)
    PARDER          reduce using rule 89 (factor -> ID .)
    DOSPUNTOS       reduce using rule 89 (factor -> ID .)
    ID              reduce using rule 89 (factor -> ID .)
    PARIZQ          reduce using rule 89 (factor -> ID .)
    CTEINT          reduce using rule 89 (factor -> ID .)
    CTEFLOAT        reduce using rule 89 (factor -> ID .)
    PYC             reduce using rule 89 (factor -> ID .)
    PUNTO           shift and go to state 144


state 131

    (90) factor -> llamada_esp .

    MULT            reduce using rule 90 (factor -> llamada_esp .)
    DIV             reduce using rule 90 (factor -> llamada_esp .)
    MAS             reduce using rule 90 (factor -> llamada_esp .)
    MENOS           reduce using rule 90 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MAYORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    MENORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    EQUALS          reduce using rule 90 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 90 (factor -> llamada_esp .)
    AND             reduce using rule 90 (factor -> llamada_esp .)
    OR              reduce using rule 90 (factor -> llamada_esp .)
    CORDER          reduce using rule 90 (factor -> llamada_esp .)
    COMA            reduce using rule 90 (factor -> llamada_esp .)
    PARDER          reduce using rule 90 (factor -> llamada_esp .)
    DOSPUNTOS       reduce using rule 90 (factor -> llamada_esp .)
    ID              reduce using rule 90 (factor -> llamada_esp .)
    PARIZQ          reduce using rule 90 (factor -> llamada_esp .)
    CTEINT          reduce using rule 90 (factor -> llamada_esp .)
    CTEFLOAT        reduce using rule 90 (factor -> llamada_esp .)
    PYC             reduce using rule 90 (factor -> llamada_esp .)


state 132

    (51) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 164


state 133

    (52) escaux -> expresion . nextexp
    (55) nextexp -> . COMA escaux
    (56) nextexp -> . empty
    (100) empty -> .

    COMA            shift and go to state 166
    PARDER          reduce using rule 100 (empty -> .)

    nextexp                        shift and go to state 165
    empty                          shift and go to state 167

state 134

    (53) escaux -> CTESTRING . nextexp
    (55) nextexp -> . COMA escaux
    (56) nextexp -> . empty
    (100) empty -> .

    COMA            shift and go to state 166
    PARDER          reduce using rule 100 (empty -> .)

    nextexp                        shift and go to state 168
    empty                          shift and go to state 167

state 135

    (54) escaux -> llamada_esp . nextexp
    (90) factor -> llamada_esp .
    (55) nextexp -> . COMA escaux
    (56) nextexp -> . empty
    (100) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 90 (factor -> llamada_esp .)
    MULT            reduce using rule 90 (factor -> llamada_esp .)
    DIV             reduce using rule 90 (factor -> llamada_esp .)
    MAS             reduce using rule 90 (factor -> llamada_esp .)
    MENOS           reduce using rule 90 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MAYORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    MENORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    EQUALS          reduce using rule 90 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 90 (factor -> llamada_esp .)
    AND             reduce using rule 90 (factor -> llamada_esp .)
    OR              reduce using rule 90 (factor -> llamada_esp .)
    PARDER          reduce using rule 90 (factor -> llamada_esp .)
    COMA            shift and go to state 166

  ! COMA            [ reduce using rule 90 (factor -> llamada_esp .) ]
  ! PARDER          [ reduce using rule 100 (empty -> .) ]

    nextexp                        shift and go to state 169
    empty                          shift and go to state 167

state 136

    (64) condicion -> if PARIZQ expresion . PARDER bloque
    (65) condicion -> if PARIZQ expresion . PARDER bloque else bloque

    PARDER          shift and go to state 170


state 137

    (66) whileloop -> while PARIZQ expresion . PARDER bloque

    PARDER          shift and go to state 171


state 138

    (67) forloop -> for PARIZQ expresion . DOSPUNTOS expresion PARDER bloque

    DOSPUNTOS       shift and go to state 172


state 139

    (68) lectura -> read PARIZQ ID . PARDER PYC

    PARDER          shift and go to state 173


state 140

    (37) funcaux -> type ID agregaVar COMA funcaux .

    PARDER          reduce using rule 37 (funcaux -> type ID agregaVar COMA funcaux .)


state 141

    (45) asignacion -> ID asignaux ASIGNA expresion . PYC

    PYC             shift and go to state 174


state 142

    (46) asignacion -> ID asignaux ASIGNA llamada_esp . PYC
    (90) factor -> llamada_esp .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 175
    MULT            reduce using rule 90 (factor -> llamada_esp .)
    DIV             reduce using rule 90 (factor -> llamada_esp .)
    MAS             reduce using rule 90 (factor -> llamada_esp .)
    MENOS           reduce using rule 90 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MAYORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    MENORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    EQUALS          reduce using rule 90 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 90 (factor -> llamada_esp .)
    AND             reduce using rule 90 (factor -> llamada_esp .)
    OR              reduce using rule 90 (factor -> llamada_esp .)

  ! PYC             [ reduce using rule 90 (factor -> llamada_esp .) ]


state 143

    (47) asignacion -> ID asignaux ASIGNA CTESTRING . PYC

    PYC             shift and go to state 176


state 144

    (91) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (92) especiales -> . length
    (93) especiales -> . max
    (94) especiales -> . min
    (95) especiales -> . avg
    (96) especiales -> . median
    (97) especiales -> . mode
    (98) especiales -> . variance
    (99) especiales -> . stdev

    length          shift and go to state 178
    max             shift and go to state 179
    min             shift and go to state 180
    avg             shift and go to state 181
    median          shift and go to state 182
    mode            shift and go to state 183
    variance        shift and go to state 184
    stdev           shift and go to state 185

    especiales                     shift and go to state 177

state 145

    (86) factor -> PARIZQ expresion . PARDER

    PARDER          shift and go to state 186


state 146

    (60) llamaux -> expresion . nextparametro
    (62) nextparametro -> . COMA llamaux
    (63) nextparametro -> . empty
    (100) empty -> .

    COMA            shift and go to state 188
    PARDER          reduce using rule 100 (empty -> .)

    nextparametro                  shift and go to state 187
    empty                          shift and go to state 189

state 147

    (57) llamada -> ID PARIZQ expresion llamaux . PARDER

    PARDER          shift and go to state 190


state 148

    (61) llamaux -> llamada_esp . nextparametro
    (90) factor -> llamada_esp .
    (62) nextparametro -> . COMA llamaux
    (63) nextparametro -> . empty
    (100) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 90 (factor -> llamada_esp .)
    MULT            reduce using rule 90 (factor -> llamada_esp .)
    DIV             reduce using rule 90 (factor -> llamada_esp .)
    MAS             reduce using rule 90 (factor -> llamada_esp .)
    MENOS           reduce using rule 90 (factor -> llamada_esp .)
    MAYORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MENORQUE        reduce using rule 90 (factor -> llamada_esp .)
    MAYORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    MENORIGUAL      reduce using rule 90 (factor -> llamada_esp .)
    EQUALS          reduce using rule 90 (factor -> llamada_esp .)
    DIFERENTE       reduce using rule 90 (factor -> llamada_esp .)
    AND             reduce using rule 90 (factor -> llamada_esp .)
    OR              reduce using rule 90 (factor -> llamada_esp .)
    PARDER          reduce using rule 90 (factor -> llamada_esp .)
    COMA            shift and go to state 188

  ! COMA            [ reduce using rule 90 (factor -> llamada_esp .) ]
  ! PARDER          [ reduce using rule 100 (empty -> .) ]

    nextparametro                  shift and go to state 191
    empty                          shift and go to state 189

state 149

    (58) llamada -> ID PARIZQ llamada_esp llamaux . PARDER

    PARDER          shift and go to state 192


state 150

    (70) expresion -> andExpresion OR . andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    andExpresion                   shift and go to state 193
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 151

    (72) andExpresion -> relopExpresion AND . relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    relopExpresion                 shift and go to state 194
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 152

    (74) relopExpresion -> aritExpresion MAYORQUE . aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    aritExpresion                  shift and go to state 195
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 153

    (75) relopExpresion -> aritExpresion MENORQUE . aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    aritExpresion                  shift and go to state 196
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 154

    (76) relopExpresion -> aritExpresion MAYORIGUAL . aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    aritExpresion                  shift and go to state 197
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 155

    (77) relopExpresion -> aritExpresion MENORIGUAL . aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    aritExpresion                  shift and go to state 198
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 156

    (78) relopExpresion -> aritExpresion EQUALS . aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    aritExpresion                  shift and go to state 199
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 157

    (79) relopExpresion -> aritExpresion DIFERENTE . aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    aritExpresion                  shift and go to state 200
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 158

    (81) aritExpresion -> term MAS . term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    term                           shift and go to state 201
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 159

    (82) aritExpresion -> term MENOS . term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    term                           shift and go to state 202
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 160

    (84) term -> factor MULT . factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    factor                         shift and go to state 203
    llamada_esp                    shift and go to state 131

state 161

    (85) term -> factor DIV . factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    factor                         shift and go to state 204
    llamada_esp                    shift and go to state 131

state 162

    (48) asignaux -> CORIZQ expresion CORDER .

    ASIGNA          reduce using rule 48 (asignaux -> CORIZQ expresion CORDER .)


state 163

    (49) asignaux -> CORIZQ expresion COMA . expresion CORDER
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 205
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 164

    (51) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 206


state 165

    (52) escaux -> expresion nextexp .

    PARDER          reduce using rule 52 (escaux -> expresion nextexp .)


state 166

    (55) nextexp -> COMA . escaux
    (52) escaux -> . expresion nextexp
    (53) escaux -> . CTESTRING nextexp
    (54) escaux -> . llamada_esp nextexp
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

    CTESTRING       shift and go to state 134
    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

    escaux                         shift and go to state 207
    expresion                      shift and go to state 133
    llamada_esp                    shift and go to state 135
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 167

    (56) nextexp -> empty .

    PARDER          reduce using rule 56 (nextexp -> empty .)


state 168

    (53) escaux -> CTESTRING nextexp .

    PARDER          reduce using rule 53 (escaux -> CTESTRING nextexp .)


state 169

    (54) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 54 (escaux -> llamada_esp nextexp .)


state 170

    (64) condicion -> if PARIZQ expresion PARDER . bloque
    (65) condicion -> if PARIZQ expresion PARDER . bloque else bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 208

state 171

    (66) whileloop -> while PARIZQ expresion PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 209

state 172

    (67) forloop -> for PARIZQ expresion DOSPUNTOS . expresion PARDER bloque
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128
    ID              shift and go to state 130

    expresion                      shift and go to state 210
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126
    llamada_esp                    shift and go to state 131

state 173

    (68) lectura -> read PARIZQ ID PARDER . PYC

    PYC             shift and go to state 211


state 174

    (45) asignacion -> ID asignaux ASIGNA expresion PYC .

    ID              reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)
    write           reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)
    if              reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)
    while           reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)
    for             reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)
    read            reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)
    LLAVEDER        reduce using rule 45 (asignacion -> ID asignaux ASIGNA expresion PYC .)


state 175

    (46) asignacion -> ID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 46 (asignacion -> ID asignaux ASIGNA llamada_esp PYC .)


state 176

    (47) asignacion -> ID asignaux ASIGNA CTESTRING PYC .

    ID              reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    write           reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    if              reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    while           reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    for             reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    read            reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)
    LLAVEDER        reduce using rule 47 (asignacion -> ID asignaux ASIGNA CTESTRING PYC .)


state 177

    (91) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 212


state 178

    (92) especiales -> length .

    PARIZQ          reduce using rule 92 (especiales -> length .)


state 179

    (93) especiales -> max .

    PARIZQ          reduce using rule 93 (especiales -> max .)


state 180

    (94) especiales -> min .

    PARIZQ          reduce using rule 94 (especiales -> min .)


state 181

    (95) especiales -> avg .

    PARIZQ          reduce using rule 95 (especiales -> avg .)


state 182

    (96) especiales -> median .

    PARIZQ          reduce using rule 96 (especiales -> median .)


state 183

    (97) especiales -> mode .

    PARIZQ          reduce using rule 97 (especiales -> mode .)


state 184

    (98) especiales -> variance .

    PARIZQ          reduce using rule 98 (especiales -> variance .)


state 185

    (99) especiales -> stdev .

    PARIZQ          reduce using rule 99 (especiales -> stdev .)


state 186

    (86) factor -> PARIZQ expresion PARDER .

    MULT            reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    EQUALS          reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    ID              reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    CTEINT          reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    CTEFLOAT        reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 86 (factor -> PARIZQ expresion PARDER .)
    PYC             reduce using rule 86 (factor -> PARIZQ expresion PARDER .)


state 187

    (60) llamaux -> expresion nextparametro .

    PARDER          reduce using rule 60 (llamaux -> expresion nextparametro .)


state 188

    (62) nextparametro -> COMA . llamaux
    (60) llamaux -> . expresion nextparametro
    (61) llamaux -> . llamada_esp nextparametro
    (69) expresion -> . andExpresion
    (70) expresion -> . andExpresion OR andExpresion
    (91) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) andExpresion -> . relopExpresion
    (72) andExpresion -> . relopExpresion AND relopExpresion
    (73) relopExpresion -> . aritExpresion
    (74) relopExpresion -> . aritExpresion MAYORQUE aritExpresion
    (75) relopExpresion -> . aritExpresion MENORQUE aritExpresion
    (76) relopExpresion -> . aritExpresion MAYORIGUAL aritExpresion
    (77) relopExpresion -> . aritExpresion MENORIGUAL aritExpresion
    (78) relopExpresion -> . aritExpresion EQUALS aritExpresion
    (79) relopExpresion -> . aritExpresion DIFERENTE aritExpresion
    (80) aritExpresion -> . term
    (81) aritExpresion -> . term MAS term
    (82) aritExpresion -> . term MENOS term
    (83) term -> . factor
    (84) term -> . factor MULT factor
    (85) term -> . factor DIV factor
    (86) factor -> . PARIZQ expresion PARDER
    (87) factor -> . CTEINT
    (88) factor -> . CTEFLOAT
    (89) factor -> . ID
    (90) factor -> . llamada_esp

    ID              shift and go to state 117
    PARIZQ          shift and go to state 118
    CTEINT          shift and go to state 127
    CTEFLOAT        shift and go to state 128

    llamaux                        shift and go to state 213
    expresion                      shift and go to state 146
    llamada_esp                    shift and go to state 148
    andExpresion                   shift and go to state 122
    relopExpresion                 shift and go to state 123
    aritExpresion                  shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 126

state 189

    (63) nextparametro -> empty .

    PARDER          reduce using rule 63 (nextparametro -> empty .)


state 190

    (57) llamada -> ID PARIZQ expresion llamaux PARDER .

    ID              reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    write           reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    if              reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    while           reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    for             reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    read            reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)
    LLAVEDER        reduce using rule 57 (llamada -> ID PARIZQ expresion llamaux PARDER .)


state 191

    (61) llamaux -> llamada_esp nextparametro .

    PARDER          reduce using rule 61 (llamaux -> llamada_esp nextparametro .)


state 192

    (58) llamada -> ID PARIZQ llamada_esp llamaux PARDER .

    ID              reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    write           reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    if              reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    while           reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    for             reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    read            reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)
    LLAVEDER        reduce using rule 58 (llamada -> ID PARIZQ llamada_esp llamaux PARDER .)


state 193

    (70) expresion -> andExpresion OR andExpresion .

    ID              reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    PARIZQ          reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    CTEINT          reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    CTEFLOAT        reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    CORDER          reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    COMA            reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    PARDER          reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    DOSPUNTOS       reduce using rule 70 (expresion -> andExpresion OR andExpresion .)
    PYC             reduce using rule 70 (expresion -> andExpresion OR andExpresion .)


state 194

    (72) andExpresion -> relopExpresion AND relopExpresion .

    OR              reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    ID              reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    PARIZQ          reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    CTEINT          reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    CTEFLOAT        reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    CORDER          reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    COMA            reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    PARDER          reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    DOSPUNTOS       reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)
    PYC             reduce using rule 72 (andExpresion -> relopExpresion AND relopExpresion .)


state 195

    (74) relopExpresion -> aritExpresion MAYORQUE aritExpresion .

    AND             reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    OR              reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    ID              reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    PARIZQ          reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    CTEINT          reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    CTEFLOAT        reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    CORDER          reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    COMA            reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    PARDER          reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    DOSPUNTOS       reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)
    PYC             reduce using rule 74 (relopExpresion -> aritExpresion MAYORQUE aritExpresion .)


state 196

    (75) relopExpresion -> aritExpresion MENORQUE aritExpresion .

    AND             reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    OR              reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    ID              reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    PARIZQ          reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    CTEINT          reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    CTEFLOAT        reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    CORDER          reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    COMA            reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    PARDER          reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    DOSPUNTOS       reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)
    PYC             reduce using rule 75 (relopExpresion -> aritExpresion MENORQUE aritExpresion .)


state 197

    (76) relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .

    AND             reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    OR              reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    ID              reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    PARIZQ          reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    CTEINT          reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    CTEFLOAT        reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    CORDER          reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    COMA            reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    PARDER          reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    DOSPUNTOS       reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)
    PYC             reduce using rule 76 (relopExpresion -> aritExpresion MAYORIGUAL aritExpresion .)


state 198

    (77) relopExpresion -> aritExpresion MENORIGUAL aritExpresion .

    AND             reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    OR              reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    ID              reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    PARIZQ          reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    CTEINT          reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    CTEFLOAT        reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    CORDER          reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    COMA            reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    PARDER          reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    DOSPUNTOS       reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)
    PYC             reduce using rule 77 (relopExpresion -> aritExpresion MENORIGUAL aritExpresion .)


state 199

    (78) relopExpresion -> aritExpresion EQUALS aritExpresion .

    AND             reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    OR              reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    ID              reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    PARIZQ          reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    CTEINT          reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    CTEFLOAT        reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    CORDER          reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    COMA            reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    PARDER          reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    DOSPUNTOS       reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)
    PYC             reduce using rule 78 (relopExpresion -> aritExpresion EQUALS aritExpresion .)


state 200

    (79) relopExpresion -> aritExpresion DIFERENTE aritExpresion .

    AND             reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    OR              reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    ID              reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    PARIZQ          reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    CTEINT          reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    CTEFLOAT        reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    CORDER          reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    COMA            reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    PARDER          reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    DOSPUNTOS       reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)
    PYC             reduce using rule 79 (relopExpresion -> aritExpresion DIFERENTE aritExpresion .)


state 201

    (81) aritExpresion -> term MAS term .

    MAYORQUE        reduce using rule 81 (aritExpresion -> term MAS term .)
    MENORQUE        reduce using rule 81 (aritExpresion -> term MAS term .)
    MAYORIGUAL      reduce using rule 81 (aritExpresion -> term MAS term .)
    MENORIGUAL      reduce using rule 81 (aritExpresion -> term MAS term .)
    EQUALS          reduce using rule 81 (aritExpresion -> term MAS term .)
    DIFERENTE       reduce using rule 81 (aritExpresion -> term MAS term .)
    AND             reduce using rule 81 (aritExpresion -> term MAS term .)
    OR              reduce using rule 81 (aritExpresion -> term MAS term .)
    ID              reduce using rule 81 (aritExpresion -> term MAS term .)
    PARIZQ          reduce using rule 81 (aritExpresion -> term MAS term .)
    CTEINT          reduce using rule 81 (aritExpresion -> term MAS term .)
    CTEFLOAT        reduce using rule 81 (aritExpresion -> term MAS term .)
    CORDER          reduce using rule 81 (aritExpresion -> term MAS term .)
    COMA            reduce using rule 81 (aritExpresion -> term MAS term .)
    PARDER          reduce using rule 81 (aritExpresion -> term MAS term .)
    DOSPUNTOS       reduce using rule 81 (aritExpresion -> term MAS term .)
    PYC             reduce using rule 81 (aritExpresion -> term MAS term .)


state 202

    (82) aritExpresion -> term MENOS term .

    MAYORQUE        reduce using rule 82 (aritExpresion -> term MENOS term .)
    MENORQUE        reduce using rule 82 (aritExpresion -> term MENOS term .)
    MAYORIGUAL      reduce using rule 82 (aritExpresion -> term MENOS term .)
    MENORIGUAL      reduce using rule 82 (aritExpresion -> term MENOS term .)
    EQUALS          reduce using rule 82 (aritExpresion -> term MENOS term .)
    DIFERENTE       reduce using rule 82 (aritExpresion -> term MENOS term .)
    AND             reduce using rule 82 (aritExpresion -> term MENOS term .)
    OR              reduce using rule 82 (aritExpresion -> term MENOS term .)
    ID              reduce using rule 82 (aritExpresion -> term MENOS term .)
    PARIZQ          reduce using rule 82 (aritExpresion -> term MENOS term .)
    CTEINT          reduce using rule 82 (aritExpresion -> term MENOS term .)
    CTEFLOAT        reduce using rule 82 (aritExpresion -> term MENOS term .)
    CORDER          reduce using rule 82 (aritExpresion -> term MENOS term .)
    COMA            reduce using rule 82 (aritExpresion -> term MENOS term .)
    PARDER          reduce using rule 82 (aritExpresion -> term MENOS term .)
    DOSPUNTOS       reduce using rule 82 (aritExpresion -> term MENOS term .)
    PYC             reduce using rule 82 (aritExpresion -> term MENOS term .)


state 203

    (84) term -> factor MULT factor .

    MAS             reduce using rule 84 (term -> factor MULT factor .)
    MENOS           reduce using rule 84 (term -> factor MULT factor .)
    MAYORQUE        reduce using rule 84 (term -> factor MULT factor .)
    MENORQUE        reduce using rule 84 (term -> factor MULT factor .)
    MAYORIGUAL      reduce using rule 84 (term -> factor MULT factor .)
    MENORIGUAL      reduce using rule 84 (term -> factor MULT factor .)
    EQUALS          reduce using rule 84 (term -> factor MULT factor .)
    DIFERENTE       reduce using rule 84 (term -> factor MULT factor .)
    AND             reduce using rule 84 (term -> factor MULT factor .)
    OR              reduce using rule 84 (term -> factor MULT factor .)
    ID              reduce using rule 84 (term -> factor MULT factor .)
    PARIZQ          reduce using rule 84 (term -> factor MULT factor .)
    CTEINT          reduce using rule 84 (term -> factor MULT factor .)
    CTEFLOAT        reduce using rule 84 (term -> factor MULT factor .)
    CORDER          reduce using rule 84 (term -> factor MULT factor .)
    COMA            reduce using rule 84 (term -> factor MULT factor .)
    PARDER          reduce using rule 84 (term -> factor MULT factor .)
    DOSPUNTOS       reduce using rule 84 (term -> factor MULT factor .)
    PYC             reduce using rule 84 (term -> factor MULT factor .)


state 204

    (85) term -> factor DIV factor .

    MAS             reduce using rule 85 (term -> factor DIV factor .)
    MENOS           reduce using rule 85 (term -> factor DIV factor .)
    MAYORQUE        reduce using rule 85 (term -> factor DIV factor .)
    MENORQUE        reduce using rule 85 (term -> factor DIV factor .)
    MAYORIGUAL      reduce using rule 85 (term -> factor DIV factor .)
    MENORIGUAL      reduce using rule 85 (term -> factor DIV factor .)
    EQUALS          reduce using rule 85 (term -> factor DIV factor .)
    DIFERENTE       reduce using rule 85 (term -> factor DIV factor .)
    AND             reduce using rule 85 (term -> factor DIV factor .)
    OR              reduce using rule 85 (term -> factor DIV factor .)
    ID              reduce using rule 85 (term -> factor DIV factor .)
    PARIZQ          reduce using rule 85 (term -> factor DIV factor .)
    CTEINT          reduce using rule 85 (term -> factor DIV factor .)
    CTEFLOAT        reduce using rule 85 (term -> factor DIV factor .)
    CORDER          reduce using rule 85 (term -> factor DIV factor .)
    COMA            reduce using rule 85 (term -> factor DIV factor .)
    PARDER          reduce using rule 85 (term -> factor DIV factor .)
    DOSPUNTOS       reduce using rule 85 (term -> factor DIV factor .)
    PYC             reduce using rule 85 (term -> factor DIV factor .)


state 205

    (49) asignaux -> CORIZQ expresion COMA expresion . CORDER

    CORDER          shift and go to state 214


state 206

    (51) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 51 (escritura -> write PARIZQ escaux PARDER PYC .)


state 207

    (55) nextexp -> COMA escaux .

    PARDER          reduce using rule 55 (nextexp -> COMA escaux .)


state 208

    (64) condicion -> if PARIZQ expresion PARDER bloque .
    (65) condicion -> if PARIZQ expresion PARDER bloque . else bloque

    ID              reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    write           reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    if              reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    while           reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    for             reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    read            reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 64 (condicion -> if PARIZQ expresion PARDER bloque .)
    else            shift and go to state 215


state 209

    (66) whileloop -> while PARIZQ expresion PARDER bloque .

    ID              reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    write           reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    if              reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    while           reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    for             reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    read            reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)
    LLAVEDER        reduce using rule 66 (whileloop -> while PARIZQ expresion PARDER bloque .)


state 210

    (67) forloop -> for PARIZQ expresion DOSPUNTOS expresion . PARDER bloque

    PARDER          shift and go to state 216


state 211

    (68) lectura -> read PARIZQ ID PARDER PYC .

    ID              reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    write           reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    if              reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    while           reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    for             reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    read            reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)
    LLAVEDER        reduce using rule 68 (lectura -> read PARIZQ ID PARDER PYC .)


state 212

    (91) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 217


state 213

    (62) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 62 (nextparametro -> COMA llamaux .)


state 214

    (49) asignaux -> CORIZQ expresion COMA expresion CORDER .

    ASIGNA          reduce using rule 49 (asignaux -> CORIZQ expresion COMA expresion CORDER .)


state 215

    (65) condicion -> if PARIZQ expresion PARDER bloque else . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 218

state 216

    (67) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER . bloque
    (21) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (22) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 73

    bloque                         shift and go to state 219

state 217

    (91) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    ID              reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARIZQ          reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEINT          reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CTEFLOAT        reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MULT            reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIV             reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAS             reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENOS           reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORQUE        reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORQUE        reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    EQUALS          reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIFERENTE       reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    AND             reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    OR              reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CORDER          reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    COMA            reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 91 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 218

    (65) condicion -> if PARIZQ expresion PARDER bloque else bloque .

    ID              reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    write           reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    if              reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    while           reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    for             reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    read            reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)
    LLAVEDER        reduce using rule 65 (condicion -> if PARIZQ expresion PARDER bloque else bloque .)


state 219

    (67) forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .

    ID              reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    write           reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    if              reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    while           reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    for             reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    read            reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)
    LLAVEDER        reduce using rule 67 (forloop -> for PARIZQ expresion DOSPUNTOS expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 7 resolved as shift
WARNING: shift/reduce conflict for var in state 10 resolved as shift
WARNING: shift/reduce conflict for LLAVEIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for var in state 65 resolved as shift
WARNING: shift/reduce conflict for var in state 74 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 121 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 121 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 121 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 121 resolved as shift
WARNING: shift/reduce conflict for COMA in state 135 resolved as shift
WARNING: shift/reduce conflict for PYC in state 142 resolved as shift
WARNING: shift/reduce conflict for COMA in state 148 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 11
WARNING: reduce/reduce conflict in state 135 resolved using rule (factor -> llamada_esp)
WARNING: rejected rule (empty -> <empty>) in state 135
WARNING: reduce/reduce conflict in state 148 resolved using rule (factor -> llamada_esp)
WARNING: rejected rule (empty -> <empty>) in state 148
