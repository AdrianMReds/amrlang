Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTEBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
Rule 2     programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
Rule 3     cuadGotoMain -> <empty>
Rule 4     cuadEnd -> <empty>
Rule 5     auxprograma -> <empty>
Rule 6     varsaux -> vars varsaux
Rule 7     varsaux -> empty
Rule 8     paux2 -> function paux2
Rule 9     paux2 -> empty
Rule 10    vars -> var type vaux PYC
Rule 11    vars -> empty
Rule 12    vaux -> ID agregaVar nextvar
Rule 13    vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar
Rule 14    vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
Rule 15    nextvar -> COMA vaux
Rule 16    nextvar -> empty
Rule 17    agregaVar -> <empty>
Rule 18    agregaPar -> <empty>
Rule 19    guardarTipoVar -> <empty>
Rule 20    guardarTipoFunc -> <empty>
Rule 21    mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque
Rule 22    fillMain -> <empty>
Rule 23    bloque -> LLAVEIZQ bloqueaux LLAVEDER
Rule 24    bloque -> LLAVEIZQ empty LLAVEDER
Rule 25    bloqueaux -> estatuto bloqueaux
Rule 26    bloqueaux -> estatuto
Rule 27    type -> int guardarTipoVar
Rule 28    type -> float guardarTipoVar
Rule 29    type -> string guardarTipoVar
Rule 30    type -> bool guardarTipoVar
Rule 31    function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
Rule 32    function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
Rule 33    agregaDir -> <empty>
Rule 34    cuadEndf -> <empty>
Rule 35    agregaFunc -> <empty>
Rule 36    ftype -> int guardarTipoFunc
Rule 37    ftype -> float guardarTipoFunc
Rule 38    ftype -> string guardarTipoFunc
Rule 39    ftype -> bool guardarTipoFunc
Rule 40    ftype -> void guardarTipoFunc
Rule 41    funcaux -> type ID agregaPar masParam
Rule 42    funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam
Rule 43    funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
Rule 44    masParam -> COMA funcaux
Rule 45    masParam -> empty
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> escritura
Rule 48    estatuto -> llamada PYC
Rule 49    estatuto -> condicion
Rule 50    estatuto -> whileloop
Rule 51    estatuto -> forloop
Rule 52    estatuto -> lectura
Rule 53    estatuto -> estReturn
Rule 54    asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
Rule 55    asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC
Rule 56    asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
Rule 57    checkID -> <empty>
Rule 58    cuadAsignacion -> <empty>
Rule 59    asignaux -> CORIZQ expresion CORDER pushOTAsig
Rule 60    asignaux -> CORIZQ expresion COMA expresion CORDER pushOTAsig
Rule 61    asignaux -> empty
Rule 62    pushOTAsig -> <empty>
Rule 63    escritura -> write PARIZQ escaux PARDER PYC
Rule 64    escaux -> expresion cuadEsc nextexp
Rule 65    escaux -> CTESTRING cuadEsc nextexp
Rule 66    escaux -> llamada_esp nextexp
Rule 67    escaux -> llamada nextexp
Rule 68    cuadEsc -> <empty>
Rule 69    nextexp -> COMA escaux
Rule 70    nextexp -> empty
Rule 71    llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
Rule 72    llamada -> ID checkFunc cuadEra PARIZQ PARDER
Rule 73    pycopc -> PYC
Rule 74    pycopc -> empty
Rule 75    llamaux -> expresion cuadPar nextparametro
Rule 76    llamaux -> llamada_esp cuadPar nextparametro
Rule 77    llamaux -> CTESTRING cuadPar nextparametro
Rule 78    nextparametro -> COMA llamaux
Rule 79    nextparametro -> empty
Rule 80    checkFunc -> <empty>
Rule 81    cuadEra -> <empty>
Rule 82    cuadPar -> <empty>
Rule 83    verPars -> <empty>
Rule 84    cuadGoSub -> <empty>
Rule 85    condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
Rule 86    condicionAux -> else cuadGoto bloque
Rule 87    condicionAux -> empty
Rule 88    whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
Rule 89    migaja -> <empty>
Rule 90    cuadFinWhile -> <empty>
Rule 91    forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
Rule 92    checkExpFor -> <empty>
Rule 93    gotoFor -> <empty>
Rule 94    returnFor -> <empty>
Rule 95    lectura -> read PARIZQ ID checkID cuadRead PARDER PYC
Rule 96    cuadRead -> <empty>
Rule 97    estReturn -> return PARIZQ retAux PARDER PYC
Rule 98    retAux -> expresion cuadRet
Rule 99    retAux -> CTESTRING cuadRet
Rule 100   retAux -> true cuadRet
Rule 101   retAux -> false cuadRet
Rule 102   retAux -> llamada cuadRet
Rule 103   cuadRet -> <empty>
Rule 104   expresion -> andExpresion cuadAnd
Rule 105   expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd
Rule 106   cuadAnd -> <empty>
Rule 107   andExpresion -> relopExpresion cuadRelop
Rule 108   andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
Rule 109   cuadRelop -> <empty>
Rule 110   relopExpresion -> aritExpresion cuadArit
Rule 111   relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit
Rule 112   relopAux -> MAYORQUE pushOper
Rule 113   relopAux -> MENORQUE pushOper
Rule 114   relopAux -> EQUALS pushOper
Rule 115   relopAux -> DIFERENTE pushOper
Rule 116   aritExpresion -> term
Rule 117   aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm
Rule 118   aritAux -> MAS pushOper
Rule 119   aritAux -> MENOS pushOper
Rule 120   term -> factor
Rule 121   term -> factor cuadFactor termAux term cuadFactor
Rule 122   termAux -> MULT pushOper
Rule 123   termAux -> DIV pushOper
Rule 124   factor -> PARIZQ guardaFondo expresion PARDER quitaFondo
Rule 125   factor -> CTEINT pushOT
Rule 126   factor -> MENOS CTEINT pushOT
Rule 127   factor -> CTEFLOAT pushOT
Rule 128   factor -> true pushOT
Rule 129   factor -> false pushOT
Rule 130   factor -> ID checkIDfac pushOT
Rule 131   factor -> ID checkIDfac CORIZQ expresion CORDER pushOT
Rule 132   factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
Rule 133   factor -> llamada_esp pushOT
Rule 134   factor -> CTESTRING pushOT
Rule 135   factor -> llamada
Rule 136   checkIDfac -> <empty>
Rule 137   guardaFondo -> <empty>
Rule 138   quitaFondo -> <empty>
Rule 139   llamada_esp -> ID PUNTO especiales PARIZQ PARDER
Rule 140   especiales -> length
Rule 141   especiales -> max
Rule 142   especiales -> min
Rule 143   especiales -> avg
Rule 144   especiales -> median
Rule 145   especiales -> mode
Rule 146   especiales -> variance
Rule 147   especiales -> stdev
Rule 148   especiales -> graph
Rule 149   pushOper -> <empty>
Rule 150   pushOT -> <empty>
Rule 151   cuadTerm -> <empty>
Rule 152   cuadFactor -> <empty>
Rule 153   cuadArit -> <empty>
Rule 154   cuadGotof -> <empty>
Rule 155   cuadFinIf -> <empty>
Rule 156   cuadGoto -> <empty>
Rule 157   empty -> <empty>

Terminals, with rules where they appear

AND                  : 108
ASIGNA               : 54 55 56
COMA                 : 14 15 43 44 60 69 78 132
CORDER               : 13 14 42 43 59 60 131 132
CORIZQ               : 13 14 42 43 59 60 131 132
CTEBOOL              : 
CTEFLOAT             : 127
CTEINT               : 13 14 14 42 43 43 125 126
CTESTRING            : 56 65 77 99 134
DIFERENTE            : 115
DIV                  : 123
DOSPUNTOS            : 91
EQUALS               : 114
ID                   : 1 2 12 13 14 31 32 41 42 43 54 55 56 71 72 95 130 131 132 139
LLAVEDER             : 23 24
LLAVEIZQ             : 23 24
MAS                  : 118
MAYORQUE             : 112
MENORQUE             : 113
MENOS                : 119 126
MULT                 : 122
OR                   : 105
PARDER               : 21 31 32 63 71 72 85 88 91 95 97 124 139
PARIZQ               : 21 31 32 63 71 72 85 88 91 95 97 124 139
PUNTO                : 139
PYC                  : 1 1 2 2 10 48 54 55 56 63 73 95 97
avg                  : 143
bool                 : 30 39
else                 : 86
end                  : 1 2
error                : 
false                : 101 129
float                : 28 37
for                  : 91
func                 : 21 31 32
graph                : 148
if                   : 85
int                  : 27 36
length               : 140
main                 : 21
max                  : 141
median               : 144
min                  : 142
mode                 : 145
program              : 1 2
read                 : 95
return               : 97
stdev                : 147
string               : 29 38
true                 : 100 128
var                  : 10
variance             : 146
void                 : 40
while                : 88
write                : 63

Nonterminals, with rules where they appear

agregaDir            : 31 32
agregaFunc           : 21 31 32
agregaPar            : 41 42 43
agregaVar            : 12 13 14
andExpresion         : 104 105 105
aritAux              : 117
aritExpresion        : 110 111 111 117
asignacion           : 46
asignaux             : 54 55 56
auxprograma          : 1 2
bloque               : 21 31 32 85 86 88 91
bloqueaux            : 23 25
checkExpFor          : 91 91
checkFunc            : 71 72
checkID              : 54 55 56 95
checkIDfac           : 130 131 132
condicion            : 49
condicionAux         : 85
cuadAnd              : 104 105 105
cuadArit             : 110 111 111
cuadAsignacion       : 54 56
cuadEnd              : 1 2
cuadEndf             : 31 32
cuadEra              : 71 72
cuadEsc              : 64 65
cuadFactor           : 121 121
cuadFinIf            : 85
cuadFinWhile         : 88
cuadGoSub            : 71
cuadGoto             : 86
cuadGotoMain         : 1 2
cuadGotof            : 85 88
cuadPar              : 75 76 77
cuadRead             : 95
cuadRelop            : 107 108 108
cuadRet              : 98 99 100 101 102
cuadTerm             : 117 117
empty                : 2 7 9 11 16 24 32 45 61 70 74 79 87
escaux               : 63 69
escritura            : 47
especiales           : 139
estReturn            : 53
estatuto             : 25 26
expresion            : 54 59 60 60 64 75 85 88 91 91 98 124 131 132 132
factor               : 120 121
fillMain             : 21
forloop              : 51
ftype                : 31 32
funcaux              : 31 44
function             : 8
gotoFor              : 91
guardaFondo          : 71 124
guardarTipoFunc      : 36 37 38 39 40
guardarTipoVar       : 27 28 29 30
lectura              : 52
llamada              : 48 67 102 135
llamada_esp          : 55 66 76 133
llamaux              : 71 78
mainfunction         : 1 2
masParam             : 41 42 43
migaja               : 88
nextexp              : 64 65 66 67
nextparametro        : 75 76 77
nextvar              : 12 13 14
paux2                : 1 8
programa             : 0
pushOT               : 125 126 127 128 129 130 131 132 133 134
pushOTAsig           : 59 60
pushOper             : 105 108 112 113 114 115 118 119 122 123
pycopc               : 
quitaFondo           : 71 124
relopAux             : 111
relopExpresion       : 107 108 108
retAux               : 97
returnFor            : 91
term                 : 116 117 121
termAux              : 121
type                 : 10 41 42 43
vars                 : 6
varsaux              : 1 6 31 32
vaux                 : 10 15
verPars              : 71
whileloop            : 50

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> . program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC

    program         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> program . cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program . cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (3) cuadGotoMain -> .

    ID              reduce using rule 3 (cuadGotoMain -> .)

    cuadGotoMain                   shift and go to state 3

state 3

    (1) programa -> program cuadGotoMain . ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (2) programa -> program cuadGotoMain . auxprograma ID PYC empty mainfunction end cuadEnd PYC
    (5) auxprograma -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4

  ! ID              [ reduce using rule 5 (auxprograma -> .) ]

    auxprograma                    shift and go to state 5

state 4

    (1) programa -> program cuadGotoMain ID . auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC
    (5) auxprograma -> .

    PYC             reduce using rule 5 (auxprograma -> .)

    auxprograma                    shift and go to state 6

state 5

    (2) programa -> program cuadGotoMain auxprograma . ID PYC empty mainfunction end cuadEnd PYC

    ID              shift and go to state 7


state 6

    (1) programa -> program cuadGotoMain ID auxprograma . PYC varsaux paux2 mainfunction end cuadEnd PYC

    PYC             shift and go to state 8


state 7

    (2) programa -> program cuadGotoMain auxprograma ID . PYC empty mainfunction end cuadEnd PYC

    PYC             shift and go to state 9


state 8

    (1) programa -> program cuadGotoMain ID auxprograma PYC . varsaux paux2 mainfunction end cuadEnd PYC
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (157) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 157 (empty -> .)
    float           reduce using rule 157 (empty -> .)
    string          reduce using rule 157 (empty -> .)
    bool            reduce using rule 157 (empty -> .)
    void            reduce using rule 157 (empty -> .)
    func            reduce using rule 157 (empty -> .)

  ! var             [ reduce using rule 157 (empty -> .) ]

    varsaux                        shift and go to state 10
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 9

    (2) programa -> program cuadGotoMain auxprograma ID PYC . empty mainfunction end cuadEnd PYC
    (157) empty -> .

    func            reduce using rule 157 (empty -> .)

    empty                          shift and go to state 14

state 10

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux . paux2 mainfunction end cuadEnd PYC
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (31) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (157) empty -> .
    (36) ftype -> . int guardarTipoFunc
    (37) ftype -> . float guardarTipoFunc
    (38) ftype -> . string guardarTipoFunc
    (39) ftype -> . bool guardarTipoFunc
    (40) ftype -> . void guardarTipoFunc

    func            reduce using rule 157 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    paux2                          shift and go to state 15
    function                       shift and go to state 16
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 11

    (6) varsaux -> vars . varsaux
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (157) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    int             reduce using rule 157 (empty -> .)
    float           reduce using rule 157 (empty -> .)
    string          reduce using rule 157 (empty -> .)
    bool            reduce using rule 157 (empty -> .)
    void            reduce using rule 157 (empty -> .)
    func            reduce using rule 157 (empty -> .)
    LLAVEIZQ        reduce using rule 157 (empty -> .)

  ! var             [ reduce using rule 157 (empty -> .) ]

    vars                           shift and go to state 11
    varsaux                        shift and go to state 24
    empty                          shift and go to state 12

state 12

    (7) varsaux -> empty .
    (11) vars -> empty .

  ! reduce/reduce conflict for int resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for float resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for string resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for bool resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for void resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for func resolved using rule 7 (varsaux -> empty .)
  ! reduce/reduce conflict for LLAVEIZQ resolved using rule 7 (varsaux -> empty .)
    int             reduce using rule 7 (varsaux -> empty .)
    float           reduce using rule 7 (varsaux -> empty .)
    string          reduce using rule 7 (varsaux -> empty .)
    bool            reduce using rule 7 (varsaux -> empty .)
    void            reduce using rule 7 (varsaux -> empty .)
    func            reduce using rule 7 (varsaux -> empty .)
    LLAVEIZQ        reduce using rule 7 (varsaux -> empty .)
    var             reduce using rule 11 (vars -> empty .)

  ! int             [ reduce using rule 11 (vars -> empty .) ]
  ! float           [ reduce using rule 11 (vars -> empty .) ]
  ! string          [ reduce using rule 11 (vars -> empty .) ]
  ! bool            [ reduce using rule 11 (vars -> empty .) ]
  ! void            [ reduce using rule 11 (vars -> empty .) ]
  ! func            [ reduce using rule 11 (vars -> empty .) ]
  ! LLAVEIZQ        [ reduce using rule 11 (vars -> empty .) ]


state 13

    (10) vars -> var . type vaux PYC
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    type                           shift and go to state 25

state 14

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty . mainfunction end cuadEnd PYC
    (21) mainfunction -> . func main agregaFunc PARIZQ PARDER fillMain bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 30

state 15

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 . mainfunction end cuadEnd PYC
    (21) mainfunction -> . func main agregaFunc PARIZQ PARDER fillMain bloque

    func            shift and go to state 31

    mainfunction                   shift and go to state 32

state 16

    (8) paux2 -> function . paux2
    (8) paux2 -> . function paux2
    (9) paux2 -> . empty
    (31) function -> . ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> . ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (157) empty -> .
    (36) ftype -> . int guardarTipoFunc
    (37) ftype -> . float guardarTipoFunc
    (38) ftype -> . string guardarTipoFunc
    (39) ftype -> . bool guardarTipoFunc
    (40) ftype -> . void guardarTipoFunc

    func            reduce using rule 157 (empty -> .)
    int             shift and go to state 19
    float           shift and go to state 20
    string          shift and go to state 21
    bool            shift and go to state 22
    void            shift and go to state 23

    function                       shift and go to state 16
    paux2                          shift and go to state 33
    empty                          shift and go to state 17
    ftype                          shift and go to state 18

state 17

    (9) paux2 -> empty .

    func            reduce using rule 9 (paux2 -> empty .)


state 18

    (31) function -> ftype . func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype . func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    func            shift and go to state 34


state 19

    (36) ftype -> int . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 35

state 20

    (37) ftype -> float . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 36

state 21

    (38) ftype -> string . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 37

state 22

    (39) ftype -> bool . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 38

state 23

    (40) ftype -> void . guardarTipoFunc
    (20) guardarTipoFunc -> .

    func            reduce using rule 20 (guardarTipoFunc -> .)

    guardarTipoFunc                shift and go to state 39

state 24

    (6) varsaux -> vars varsaux .

    int             reduce using rule 6 (varsaux -> vars varsaux .)
    float           reduce using rule 6 (varsaux -> vars varsaux .)
    string          reduce using rule 6 (varsaux -> vars varsaux .)
    bool            reduce using rule 6 (varsaux -> vars varsaux .)
    void            reduce using rule 6 (varsaux -> vars varsaux .)
    func            reduce using rule 6 (varsaux -> vars varsaux .)
    LLAVEIZQ        reduce using rule 6 (varsaux -> vars varsaux .)


state 25

    (10) vars -> var type . vaux PYC
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 40

state 26

    (27) type -> int . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 42

state 27

    (28) type -> float . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 43

state 28

    (29) type -> string . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 44

state 29

    (30) type -> bool . guardarTipoVar
    (19) guardarTipoVar -> .

    ID              reduce using rule 19 (guardarTipoVar -> .)

    guardarTipoVar                 shift and go to state 45

state 30

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction . end cuadEnd PYC

    end             shift and go to state 46


state 31

    (21) mainfunction -> func . main agregaFunc PARIZQ PARDER fillMain bloque

    main            shift and go to state 47


state 32

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction . end cuadEnd PYC

    end             shift and go to state 48


state 33

    (8) paux2 -> function paux2 .

    func            reduce using rule 8 (paux2 -> function paux2 .)


state 34

    (31) function -> ftype func . ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func . ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    ID              shift and go to state 49


state 35

    (36) ftype -> int guardarTipoFunc .

    func            reduce using rule 36 (ftype -> int guardarTipoFunc .)


state 36

    (37) ftype -> float guardarTipoFunc .

    func            reduce using rule 37 (ftype -> float guardarTipoFunc .)


state 37

    (38) ftype -> string guardarTipoFunc .

    func            reduce using rule 38 (ftype -> string guardarTipoFunc .)


state 38

    (39) ftype -> bool guardarTipoFunc .

    func            reduce using rule 39 (ftype -> bool guardarTipoFunc .)


state 39

    (40) ftype -> void guardarTipoFunc .

    func            reduce using rule 40 (ftype -> void guardarTipoFunc .)


state 40

    (10) vars -> var type vaux . PYC

    PYC             shift and go to state 50


state 41

    (12) vaux -> ID . agregaVar nextvar
    (13) vaux -> ID . CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID . CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar
    (17) agregaVar -> .

    CORIZQ          shift and go to state 52
    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 51

state 42

    (27) type -> int guardarTipoVar .

    ID              reduce using rule 27 (type -> int guardarTipoVar .)


state 43

    (28) type -> float guardarTipoVar .

    ID              reduce using rule 28 (type -> float guardarTipoVar .)


state 44

    (29) type -> string guardarTipoVar .

    ID              reduce using rule 29 (type -> string guardarTipoVar .)


state 45

    (30) type -> bool guardarTipoVar .

    ID              reduce using rule 30 (type -> bool guardarTipoVar .)


state 46

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 53

state 47

    (21) mainfunction -> func main . agregaFunc PARIZQ PARDER fillMain bloque
    (35) agregaFunc -> .

    PARIZQ          reduce using rule 35 (agregaFunc -> .)

    agregaFunc                     shift and go to state 54

state 48

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end . cuadEnd PYC
    (4) cuadEnd -> .

    PYC             reduce using rule 4 (cuadEnd -> .)

    cuadEnd                        shift and go to state 55

state 49

    (31) function -> ftype func ID . agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID . agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf
    (35) agregaFunc -> .

    PARIZQ          reduce using rule 35 (agregaFunc -> .)

    agregaFunc                     shift and go to state 56

state 50

    (10) vars -> var type vaux PYC .

    var             reduce using rule 10 (vars -> var type vaux PYC .)
    int             reduce using rule 10 (vars -> var type vaux PYC .)
    float           reduce using rule 10 (vars -> var type vaux PYC .)
    string          reduce using rule 10 (vars -> var type vaux PYC .)
    bool            reduce using rule 10 (vars -> var type vaux PYC .)
    void            reduce using rule 10 (vars -> var type vaux PYC .)
    func            reduce using rule 10 (vars -> var type vaux PYC .)
    LLAVEIZQ        reduce using rule 10 (vars -> var type vaux PYC .)


state 51

    (12) vaux -> ID agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (157) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 157 (empty -> .)

    nextvar                        shift and go to state 57
    empty                          shift and go to state 59

state 52

    (13) vaux -> ID CORIZQ . CTEINT CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ . CTEINT COMA CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 60


state 53

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd . PYC

    PYC             shift and go to state 61


state 54

    (21) mainfunction -> func main agregaFunc . PARIZQ PARDER fillMain bloque

    PARIZQ          shift and go to state 62


state 55

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd . PYC

    PYC             shift and go to state 63


state 56

    (31) function -> ftype func ID agregaFunc . PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID agregaFunc . PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf

    PARIZQ          shift and go to state 64


state 57

    (12) vaux -> ID agregaVar nextvar .

    PYC             reduce using rule 12 (vaux -> ID agregaVar nextvar .)


state 58

    (15) nextvar -> COMA . vaux
    (12) vaux -> . ID agregaVar nextvar
    (13) vaux -> . ID CORIZQ CTEINT CORDER agregaVar nextvar
    (14) vaux -> . ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar

    ID              shift and go to state 41

    vaux                           shift and go to state 65

state 59

    (16) nextvar -> empty .

    PYC             reduce using rule 16 (nextvar -> empty .)


state 60

    (13) vaux -> ID CORIZQ CTEINT . CORDER agregaVar nextvar
    (14) vaux -> ID CORIZQ CTEINT . COMA CTEINT CORDER agregaVar nextvar

    CORDER          shift and go to state 66
    COMA            shift and go to state 67


state 61

    (2) programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .

    $end            reduce using rule 2 (programa -> program cuadGotoMain auxprograma ID PYC empty mainfunction end cuadEnd PYC .)


state 62

    (21) mainfunction -> func main agregaFunc PARIZQ . PARDER fillMain bloque

    PARDER          shift and go to state 68


state 63

    (1) programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .

    $end            reduce using rule 1 (programa -> program cuadGotoMain ID auxprograma PYC varsaux paux2 mainfunction end cuadEnd PYC .)


state 64

    (31) function -> ftype func ID agregaFunc PARIZQ . funcaux PARDER varsaux agregaDir bloque cuadEndf
    (32) function -> ftype func ID agregaFunc PARIZQ . empty PARDER varsaux agregaDir bloque cuadEndf
    (41) funcaux -> . type ID agregaPar masParam
    (42) funcaux -> . type ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (157) empty -> .
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    PARDER          reduce using rule 157 (empty -> .)
    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 69
    empty                          shift and go to state 70
    type                           shift and go to state 71

state 65

    (15) nextvar -> COMA vaux .

    PYC             reduce using rule 15 (nextvar -> COMA vaux .)


state 66

    (13) vaux -> ID CORIZQ CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 72

state 67

    (14) vaux -> ID CORIZQ CTEINT COMA . CTEINT CORDER agregaVar nextvar

    CTEINT          shift and go to state 73


state 68

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER . fillMain bloque
    (22) fillMain -> .

    LLAVEIZQ        reduce using rule 22 (fillMain -> .)

    fillMain                       shift and go to state 74

state 69

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux . PARDER varsaux agregaDir bloque cuadEndf

    PARDER          shift and go to state 75


state 70

    (32) function -> ftype func ID agregaFunc PARIZQ empty . PARDER varsaux agregaDir bloque cuadEndf

    PARDER          shift and go to state 76


state 71

    (41) funcaux -> type . ID agregaPar masParam
    (42) funcaux -> type . ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> type . ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam

    ID              shift and go to state 77


state 72

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (157) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 157 (empty -> .)

    nextvar                        shift and go to state 78
    empty                          shift and go to state 59

state 73

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT . CORDER agregaVar nextvar

    CORDER          shift and go to state 79


state 74

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER fillMain . bloque
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 80

state 75

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER . varsaux agregaDir bloque cuadEndf
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (157) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 157 (empty -> .)

  ! var             [ reduce using rule 157 (empty -> .) ]

    varsaux                        shift and go to state 82
    vars                           shift and go to state 11
    empty                          shift and go to state 12

state 76

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER . varsaux agregaDir bloque cuadEndf
    (6) varsaux -> . vars varsaux
    (7) varsaux -> . empty
    (10) vars -> . var type vaux PYC
    (11) vars -> . empty
    (157) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    LLAVEIZQ        reduce using rule 157 (empty -> .)

  ! var             [ reduce using rule 157 (empty -> .) ]

    empty                          shift and go to state 12
    varsaux                        shift and go to state 83
    vars                           shift and go to state 11

state 77

    (41) funcaux -> type ID . agregaPar masParam
    (42) funcaux -> type ID . CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> type ID . CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (18) agregaPar -> .

    CORIZQ          shift and go to state 85
    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 84

state 78

    (13) vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 13 (vaux -> ID CORIZQ CTEINT CORDER agregaVar nextvar .)


state 79

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER . agregaVar nextvar
    (17) agregaVar -> .

    COMA            reduce using rule 17 (agregaVar -> .)
    PYC             reduce using rule 17 (agregaVar -> .)

    agregaVar                      shift and go to state 86

state 80

    (21) mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque .

    end             reduce using rule 21 (mainfunction -> func main agregaFunc PARIZQ PARDER fillMain bloque .)


state 81

    (23) bloque -> LLAVEIZQ . bloqueaux LLAVEDER
    (24) bloque -> LLAVEIZQ . empty LLAVEDER
    (25) bloqueaux -> . estatuto bloqueaux
    (26) bloqueaux -> . estatuto
    (157) empty -> .
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada PYC
    (49) estatuto -> . condicion
    (50) estatuto -> . whileloop
    (51) estatuto -> . forloop
    (52) estatuto -> . lectura
    (53) estatuto -> . estReturn
    (54) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (63) escritura -> . write PARIZQ escaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER
    (85) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (88) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (91) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (95) lectura -> . read PARIZQ ID checkID cuadRead PARDER PYC
    (97) estReturn -> . return PARIZQ retAux PARDER PYC

    LLAVEDER        reduce using rule 157 (empty -> .)
    ID              shift and go to state 98
    write           shift and go to state 99
    if              shift and go to state 100
    while           shift and go to state 101
    for             shift and go to state 102
    read            shift and go to state 103
    return          shift and go to state 104

    bloqueaux                      shift and go to state 87
    empty                          shift and go to state 88
    estatuto                       shift and go to state 89
    asignacion                     shift and go to state 90
    escritura                      shift and go to state 91
    llamada                        shift and go to state 92
    condicion                      shift and go to state 93
    whileloop                      shift and go to state 94
    forloop                        shift and go to state 95
    lectura                        shift and go to state 96
    estReturn                      shift and go to state 97

state 82

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux . agregaDir bloque cuadEndf
    (33) agregaDir -> .

    LLAVEIZQ        reduce using rule 33 (agregaDir -> .)

    agregaDir                      shift and go to state 105

state 83

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux . agregaDir bloque cuadEndf
    (33) agregaDir -> .

    LLAVEIZQ        reduce using rule 33 (agregaDir -> .)

    agregaDir                      shift and go to state 106

state 84

    (41) funcaux -> type ID agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (157) empty -> .

    COMA            shift and go to state 108
    PARDER          reduce using rule 157 (empty -> .)

    masParam                       shift and go to state 107
    empty                          shift and go to state 109

state 85

    (42) funcaux -> type ID CORIZQ . CTEINT CORDER agregaPar masParam
    (43) funcaux -> type ID CORIZQ . CTEINT COMA CTEINT CORDER agregaPar masParam

    CTEINT          shift and go to state 110


state 86

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar . nextvar
    (15) nextvar -> . COMA vaux
    (16) nextvar -> . empty
    (157) empty -> .

    COMA            shift and go to state 58
    PYC             reduce using rule 157 (empty -> .)

    nextvar                        shift and go to state 111
    empty                          shift and go to state 59

state 87

    (23) bloque -> LLAVEIZQ bloqueaux . LLAVEDER

    LLAVEDER        shift and go to state 112


state 88

    (24) bloque -> LLAVEIZQ empty . LLAVEDER

    LLAVEDER        shift and go to state 113


state 89

    (25) bloqueaux -> estatuto . bloqueaux
    (26) bloqueaux -> estatuto .
    (25) bloqueaux -> . estatuto bloqueaux
    (26) bloqueaux -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada PYC
    (49) estatuto -> . condicion
    (50) estatuto -> . whileloop
    (51) estatuto -> . forloop
    (52) estatuto -> . lectura
    (53) estatuto -> . estReturn
    (54) asignacion -> . ID checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> . ID checkID asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> . ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (63) escritura -> . write PARIZQ escaux PARDER PYC
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER
    (85) condicion -> . if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (88) whileloop -> . while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (91) forloop -> . for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (95) lectura -> . read PARIZQ ID checkID cuadRead PARDER PYC
    (97) estReturn -> . return PARIZQ retAux PARDER PYC

    LLAVEDER        reduce using rule 26 (bloqueaux -> estatuto .)
    ID              shift and go to state 98
    write           shift and go to state 99
    if              shift and go to state 100
    while           shift and go to state 101
    for             shift and go to state 102
    read            shift and go to state 103
    return          shift and go to state 104

    estatuto                       shift and go to state 89
    bloqueaux                      shift and go to state 114
    asignacion                     shift and go to state 90
    escritura                      shift and go to state 91
    llamada                        shift and go to state 92
    condicion                      shift and go to state 93
    whileloop                      shift and go to state 94
    forloop                        shift and go to state 95
    lectura                        shift and go to state 96
    estReturn                      shift and go to state 97

state 90

    (46) estatuto -> asignacion .

    ID              reduce using rule 46 (estatuto -> asignacion .)
    write           reduce using rule 46 (estatuto -> asignacion .)
    if              reduce using rule 46 (estatuto -> asignacion .)
    while           reduce using rule 46 (estatuto -> asignacion .)
    for             reduce using rule 46 (estatuto -> asignacion .)
    read            reduce using rule 46 (estatuto -> asignacion .)
    return          reduce using rule 46 (estatuto -> asignacion .)
    LLAVEDER        reduce using rule 46 (estatuto -> asignacion .)


state 91

    (47) estatuto -> escritura .

    ID              reduce using rule 47 (estatuto -> escritura .)
    write           reduce using rule 47 (estatuto -> escritura .)
    if              reduce using rule 47 (estatuto -> escritura .)
    while           reduce using rule 47 (estatuto -> escritura .)
    for             reduce using rule 47 (estatuto -> escritura .)
    read            reduce using rule 47 (estatuto -> escritura .)
    return          reduce using rule 47 (estatuto -> escritura .)
    LLAVEDER        reduce using rule 47 (estatuto -> escritura .)


state 92

    (48) estatuto -> llamada . PYC

    PYC             shift and go to state 115


state 93

    (49) estatuto -> condicion .

    ID              reduce using rule 49 (estatuto -> condicion .)
    write           reduce using rule 49 (estatuto -> condicion .)
    if              reduce using rule 49 (estatuto -> condicion .)
    while           reduce using rule 49 (estatuto -> condicion .)
    for             reduce using rule 49 (estatuto -> condicion .)
    read            reduce using rule 49 (estatuto -> condicion .)
    return          reduce using rule 49 (estatuto -> condicion .)
    LLAVEDER        reduce using rule 49 (estatuto -> condicion .)


state 94

    (50) estatuto -> whileloop .

    ID              reduce using rule 50 (estatuto -> whileloop .)
    write           reduce using rule 50 (estatuto -> whileloop .)
    if              reduce using rule 50 (estatuto -> whileloop .)
    while           reduce using rule 50 (estatuto -> whileloop .)
    for             reduce using rule 50 (estatuto -> whileloop .)
    read            reduce using rule 50 (estatuto -> whileloop .)
    return          reduce using rule 50 (estatuto -> whileloop .)
    LLAVEDER        reduce using rule 50 (estatuto -> whileloop .)


state 95

    (51) estatuto -> forloop .

    ID              reduce using rule 51 (estatuto -> forloop .)
    write           reduce using rule 51 (estatuto -> forloop .)
    if              reduce using rule 51 (estatuto -> forloop .)
    while           reduce using rule 51 (estatuto -> forloop .)
    for             reduce using rule 51 (estatuto -> forloop .)
    read            reduce using rule 51 (estatuto -> forloop .)
    return          reduce using rule 51 (estatuto -> forloop .)
    LLAVEDER        reduce using rule 51 (estatuto -> forloop .)


state 96

    (52) estatuto -> lectura .

    ID              reduce using rule 52 (estatuto -> lectura .)
    write           reduce using rule 52 (estatuto -> lectura .)
    if              reduce using rule 52 (estatuto -> lectura .)
    while           reduce using rule 52 (estatuto -> lectura .)
    for             reduce using rule 52 (estatuto -> lectura .)
    read            reduce using rule 52 (estatuto -> lectura .)
    return          reduce using rule 52 (estatuto -> lectura .)
    LLAVEDER        reduce using rule 52 (estatuto -> lectura .)


state 97

    (53) estatuto -> estReturn .

    ID              reduce using rule 53 (estatuto -> estReturn .)
    write           reduce using rule 53 (estatuto -> estReturn .)
    if              reduce using rule 53 (estatuto -> estReturn .)
    while           reduce using rule 53 (estatuto -> estReturn .)
    for             reduce using rule 53 (estatuto -> estReturn .)
    read            reduce using rule 53 (estatuto -> estReturn .)
    return          reduce using rule 53 (estatuto -> estReturn .)
    LLAVEDER        reduce using rule 53 (estatuto -> estReturn .)


state 98

    (54) asignacion -> ID . checkID asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> ID . checkID asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> ID . checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (71) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID . checkFunc cuadEra PARIZQ PARDER
    (57) checkID -> .
    (80) checkFunc -> .

    CORIZQ          reduce using rule 57 (checkID -> .)
    ASIGNA          reduce using rule 57 (checkID -> .)
    PARIZQ          reduce using rule 80 (checkFunc -> .)

    checkID                        shift and go to state 116
    checkFunc                      shift and go to state 117

state 99

    (63) escritura -> write . PARIZQ escaux PARDER PYC

    PARIZQ          shift and go to state 118


state 100

    (85) condicion -> if . PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf

    PARIZQ          shift and go to state 119


state 101

    (88) whileloop -> while . migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile
    (89) migaja -> .

    PARIZQ          reduce using rule 89 (migaja -> .)

    migaja                         shift and go to state 120

state 102

    (91) forloop -> for . PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    PARIZQ          shift and go to state 121


state 103

    (95) lectura -> read . PARIZQ ID checkID cuadRead PARDER PYC

    PARIZQ          shift and go to state 122


state 104

    (97) estReturn -> return . PARIZQ retAux PARDER PYC

    PARIZQ          shift and go to state 123


state 105

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir . bloque cuadEndf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 124

state 106

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir . bloque cuadEndf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 125

state 107

    (41) funcaux -> type ID agregaPar masParam .

    PARDER          reduce using rule 41 (funcaux -> type ID agregaPar masParam .)


state 108

    (44) masParam -> COMA . funcaux
    (41) funcaux -> . type ID agregaPar masParam
    (42) funcaux -> . type ID CORIZQ CTEINT CORDER agregaPar masParam
    (43) funcaux -> . type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam
    (27) type -> . int guardarTipoVar
    (28) type -> . float guardarTipoVar
    (29) type -> . string guardarTipoVar
    (30) type -> . bool guardarTipoVar

    int             shift and go to state 26
    float           shift and go to state 27
    string          shift and go to state 28
    bool            shift and go to state 29

    funcaux                        shift and go to state 126
    type                           shift and go to state 71

state 109

    (45) masParam -> empty .

    PARDER          reduce using rule 45 (masParam -> empty .)


state 110

    (42) funcaux -> type ID CORIZQ CTEINT . CORDER agregaPar masParam
    (43) funcaux -> type ID CORIZQ CTEINT . COMA CTEINT CORDER agregaPar masParam

    CORDER          shift and go to state 127
    COMA            shift and go to state 128


state 111

    (14) vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .

    PYC             reduce using rule 14 (vaux -> ID CORIZQ CTEINT COMA CTEINT CORDER agregaVar nextvar .)


state 112

    (23) bloque -> LLAVEIZQ bloqueaux LLAVEDER .

    end             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    int             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    float           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    string          reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    bool            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    void            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    func            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    else            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    ID              reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    write           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    if              reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    while           reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    for             reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    read            reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    return          reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)
    LLAVEDER        reduce using rule 23 (bloque -> LLAVEIZQ bloqueaux LLAVEDER .)


state 113

    (24) bloque -> LLAVEIZQ empty LLAVEDER .

    end             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    int             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    float           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    string          reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    bool            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    void            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    func            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    else            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    ID              reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    write           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    if              reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    while           reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    for             reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    read            reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    return          reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)
    LLAVEDER        reduce using rule 24 (bloque -> LLAVEIZQ empty LLAVEDER .)


state 114

    (25) bloqueaux -> estatuto bloqueaux .

    LLAVEDER        reduce using rule 25 (bloqueaux -> estatuto bloqueaux .)


state 115

    (48) estatuto -> llamada PYC .

    ID              reduce using rule 48 (estatuto -> llamada PYC .)
    write           reduce using rule 48 (estatuto -> llamada PYC .)
    if              reduce using rule 48 (estatuto -> llamada PYC .)
    while           reduce using rule 48 (estatuto -> llamada PYC .)
    for             reduce using rule 48 (estatuto -> llamada PYC .)
    read            reduce using rule 48 (estatuto -> llamada PYC .)
    return          reduce using rule 48 (estatuto -> llamada PYC .)
    LLAVEDER        reduce using rule 48 (estatuto -> llamada PYC .)


state 116

    (54) asignacion -> ID checkID . asignaux ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> ID checkID . asignaux ASIGNA llamada_esp PYC
    (56) asignacion -> ID checkID . asignaux ASIGNA CTESTRING cuadAsignacion PYC
    (59) asignaux -> . CORIZQ expresion CORDER pushOTAsig
    (60) asignaux -> . CORIZQ expresion COMA expresion CORDER pushOTAsig
    (61) asignaux -> . empty
    (157) empty -> .

    CORIZQ          shift and go to state 130
    ASIGNA          reduce using rule 157 (empty -> .)

    asignaux                       shift and go to state 129
    empty                          shift and go to state 131

state 117

    (71) llamada -> ID checkFunc . cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID checkFunc . cuadEra PARIZQ PARDER
    (81) cuadEra -> .

    PARIZQ          reduce using rule 81 (cuadEra -> .)

    cuadEra                        shift and go to state 132

state 118

    (63) escritura -> write PARIZQ . escaux PARDER PYC
    (64) escaux -> . expresion cuadEsc nextexp
    (65) escaux -> . CTESTRING cuadEsc nextexp
    (66) escaux -> . llamada_esp nextexp
    (67) escaux -> . llamada nextexp
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada

    CTESTRING       shift and go to state 136
    ID              shift and go to state 140
    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149

    escaux                         shift and go to state 134
    expresion                      shift and go to state 135
    llamada_esp                    shift and go to state 137
    llamada                        shift and go to state 138
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144

state 119

    (85) condicion -> if PARIZQ . expresion PARDER cuadGotof bloque condicionAux cuadFinIf
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 150
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 120

    (88) whileloop -> while migaja . PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile

    PARIZQ          shift and go to state 155


state 121

    (91) forloop -> for PARIZQ . expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 156
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 122

    (95) lectura -> read PARIZQ . ID checkID cuadRead PARDER PYC

    ID              shift and go to state 157


state 123

    (97) estReturn -> return PARIZQ . retAux PARDER PYC
    (98) retAux -> . expresion cuadRet
    (99) retAux -> . CTESTRING cuadRet
    (100) retAux -> . true cuadRet
    (101) retAux -> . false cuadRet
    (102) retAux -> . llamada cuadRet
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER

    CTESTRING       shift and go to state 160
    true            shift and go to state 161
    false           shift and go to state 162
    ID              shift and go to state 164
    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147

    retAux                         shift and go to state 158
    expresion                      shift and go to state 159
    llamada                        shift and go to state 163
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152

state 124

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque . cuadEndf
    (34) cuadEndf -> .

    int             reduce using rule 34 (cuadEndf -> .)
    float           reduce using rule 34 (cuadEndf -> .)
    string          reduce using rule 34 (cuadEndf -> .)
    bool            reduce using rule 34 (cuadEndf -> .)
    void            reduce using rule 34 (cuadEndf -> .)
    func            reduce using rule 34 (cuadEndf -> .)

    cuadEndf                       shift and go to state 165

state 125

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque . cuadEndf
    (34) cuadEndf -> .

    int             reduce using rule 34 (cuadEndf -> .)
    float           reduce using rule 34 (cuadEndf -> .)
    string          reduce using rule 34 (cuadEndf -> .)
    bool            reduce using rule 34 (cuadEndf -> .)
    void            reduce using rule 34 (cuadEndf -> .)
    func            reduce using rule 34 (cuadEndf -> .)

    cuadEndf                       shift and go to state 166

state 126

    (44) masParam -> COMA funcaux .

    PARDER          reduce using rule 44 (masParam -> COMA funcaux .)


state 127

    (42) funcaux -> type ID CORIZQ CTEINT CORDER . agregaPar masParam
    (18) agregaPar -> .

    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 167

state 128

    (43) funcaux -> type ID CORIZQ CTEINT COMA . CTEINT CORDER agregaPar masParam

    CTEINT          shift and go to state 168


state 129

    (54) asignacion -> ID checkID asignaux . ASIGNA expresion cuadAsignacion PYC
    (55) asignacion -> ID checkID asignaux . ASIGNA llamada_esp PYC
    (56) asignacion -> ID checkID asignaux . ASIGNA CTESTRING cuadAsignacion PYC

    ASIGNA          shift and go to state 169


state 130

    (59) asignaux -> CORIZQ . expresion CORDER pushOTAsig
    (60) asignaux -> CORIZQ . expresion COMA expresion CORDER pushOTAsig
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 170
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 131

    (61) asignaux -> empty .

    ASIGNA          reduce using rule 61 (asignaux -> empty .)


state 132

    (71) llamada -> ID checkFunc cuadEra . PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID checkFunc cuadEra . PARIZQ PARDER

    PARIZQ          shift and go to state 171


state 133

    (124) factor -> PARIZQ . guardaFondo expresion PARDER quitaFondo
    (137) guardaFondo -> .

    PARIZQ          reduce using rule 137 (guardaFondo -> .)
    CTEINT          reduce using rule 137 (guardaFondo -> .)
    MENOS           reduce using rule 137 (guardaFondo -> .)
    CTEFLOAT        reduce using rule 137 (guardaFondo -> .)
    true            reduce using rule 137 (guardaFondo -> .)
    false           reduce using rule 137 (guardaFondo -> .)
    ID              reduce using rule 137 (guardaFondo -> .)
    CTESTRING       reduce using rule 137 (guardaFondo -> .)

    guardaFondo                    shift and go to state 172

state 134

    (63) escritura -> write PARIZQ escaux . PARDER PYC

    PARDER          shift and go to state 173


state 135

    (64) escaux -> expresion . cuadEsc nextexp
    (68) cuadEsc -> .

    COMA            reduce using rule 68 (cuadEsc -> .)
    PARDER          reduce using rule 68 (cuadEsc -> .)

    cuadEsc                        shift and go to state 174

state 136

    (65) escaux -> CTESTRING . cuadEsc nextexp
    (134) factor -> CTESTRING . pushOT
    (68) cuadEsc -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for COMA resolved using rule 68 (cuadEsc -> .)
  ! reduce/reduce conflict for PARDER resolved using rule 68 (cuadEsc -> .)
    COMA            reduce using rule 68 (cuadEsc -> .)
    PARDER          reduce using rule 68 (cuadEsc -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! COMA            [ reduce using rule 150 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 150 (pushOT -> .) ]

    cuadEsc                        shift and go to state 175
    pushOT                         shift and go to state 176

state 137

    (66) escaux -> llamada_esp . nextexp
    (133) factor -> llamada_esp . pushOT
    (69) nextexp -> . COMA escaux
    (70) nextexp -> . empty
    (150) pushOT -> .
    (157) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 150 (pushOT -> .)
    COMA            shift and go to state 179
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)

  ! COMA            [ reduce using rule 150 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 157 (empty -> .) ]

    nextexp                        shift and go to state 177
    pushOT                         shift and go to state 178
    empty                          shift and go to state 180

state 138

    (67) escaux -> llamada . nextexp
    (135) factor -> llamada .
    (69) nextexp -> . COMA escaux
    (70) nextexp -> . empty
    (157) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 135 (factor -> llamada .)
    MULT            reduce using rule 135 (factor -> llamada .)
    DIV             reduce using rule 135 (factor -> llamada .)
    MAS             reduce using rule 135 (factor -> llamada .)
    MENOS           reduce using rule 135 (factor -> llamada .)
    MAYORQUE        reduce using rule 135 (factor -> llamada .)
    MENORQUE        reduce using rule 135 (factor -> llamada .)
    EQUALS          reduce using rule 135 (factor -> llamada .)
    DIFERENTE       reduce using rule 135 (factor -> llamada .)
    AND             reduce using rule 135 (factor -> llamada .)
    OR              reduce using rule 135 (factor -> llamada .)
    PARDER          reduce using rule 135 (factor -> llamada .)
    COMA            shift and go to state 179

  ! COMA            [ reduce using rule 135 (factor -> llamada .) ]
  ! PARDER          [ reduce using rule 157 (empty -> .) ]

    nextexp                        shift and go to state 181
    empty                          shift and go to state 180

state 139

    (104) expresion -> andExpresion . cuadAnd
    (105) expresion -> andExpresion . cuadAnd OR pushOper andExpresion cuadAnd
    (106) cuadAnd -> .

    OR              reduce using rule 106 (cuadAnd -> .)
    COMA            reduce using rule 106 (cuadAnd -> .)
    PARDER          reduce using rule 106 (cuadAnd -> .)
    DOSPUNTOS       reduce using rule 106 (cuadAnd -> .)
    CORDER          reduce using rule 106 (cuadAnd -> .)
    PYC             reduce using rule 106 (cuadAnd -> .)

    cuadAnd                        shift and go to state 182

state 140

    (139) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (71) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID . checkFunc cuadEra PARIZQ PARDER
    (130) factor -> ID . checkIDfac pushOT
    (131) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (80) checkFunc -> .
    (136) checkIDfac -> .

    PUNTO           shift and go to state 183
    PARIZQ          reduce using rule 80 (checkFunc -> .)
    CORIZQ          reduce using rule 136 (checkIDfac -> .)
    MULT            reduce using rule 136 (checkIDfac -> .)
    DIV             reduce using rule 136 (checkIDfac -> .)
    MAS             reduce using rule 136 (checkIDfac -> .)
    MENOS           reduce using rule 136 (checkIDfac -> .)
    MAYORQUE        reduce using rule 136 (checkIDfac -> .)
    MENORQUE        reduce using rule 136 (checkIDfac -> .)
    EQUALS          reduce using rule 136 (checkIDfac -> .)
    DIFERENTE       reduce using rule 136 (checkIDfac -> .)
    AND             reduce using rule 136 (checkIDfac -> .)
    OR              reduce using rule 136 (checkIDfac -> .)
    COMA            reduce using rule 136 (checkIDfac -> .)
    PARDER          reduce using rule 136 (checkIDfac -> .)

    checkFunc                      shift and go to state 117
    checkIDfac                     shift and go to state 184

state 141

    (107) andExpresion -> relopExpresion . cuadRelop
    (108) andExpresion -> relopExpresion . cuadRelop AND pushOper relopExpresion cuadRelop
    (109) cuadRelop -> .

    AND             reduce using rule 109 (cuadRelop -> .)
    OR              reduce using rule 109 (cuadRelop -> .)
    COMA            reduce using rule 109 (cuadRelop -> .)
    PARDER          reduce using rule 109 (cuadRelop -> .)
    DOSPUNTOS       reduce using rule 109 (cuadRelop -> .)
    CORDER          reduce using rule 109 (cuadRelop -> .)
    PYC             reduce using rule 109 (cuadRelop -> .)

    cuadRelop                      shift and go to state 185

state 142

    (110) relopExpresion -> aritExpresion . cuadArit
    (111) relopExpresion -> aritExpresion . cuadArit relopAux aritExpresion cuadArit
    (153) cuadArit -> .

    MAYORQUE        reduce using rule 153 (cuadArit -> .)
    MENORQUE        reduce using rule 153 (cuadArit -> .)
    EQUALS          reduce using rule 153 (cuadArit -> .)
    DIFERENTE       reduce using rule 153 (cuadArit -> .)
    AND             reduce using rule 153 (cuadArit -> .)
    OR              reduce using rule 153 (cuadArit -> .)
    COMA            reduce using rule 153 (cuadArit -> .)
    PARDER          reduce using rule 153 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 153 (cuadArit -> .)
    CORDER          reduce using rule 153 (cuadArit -> .)
    PYC             reduce using rule 153 (cuadArit -> .)

    cuadArit                       shift and go to state 186

state 143

    (116) aritExpresion -> term .
    (117) aritExpresion -> term . cuadTerm aritAux aritExpresion cuadTerm
    (151) cuadTerm -> .

    MAYORQUE        reduce using rule 116 (aritExpresion -> term .)
    MENORQUE        reduce using rule 116 (aritExpresion -> term .)
    EQUALS          reduce using rule 116 (aritExpresion -> term .)
    DIFERENTE       reduce using rule 116 (aritExpresion -> term .)
    AND             reduce using rule 116 (aritExpresion -> term .)
    OR              reduce using rule 116 (aritExpresion -> term .)
    COMA            reduce using rule 116 (aritExpresion -> term .)
    PARDER          reduce using rule 116 (aritExpresion -> term .)
    DOSPUNTOS       reduce using rule 116 (aritExpresion -> term .)
    CORDER          reduce using rule 116 (aritExpresion -> term .)
    PYC             reduce using rule 116 (aritExpresion -> term .)
    MAS             reduce using rule 151 (cuadTerm -> .)
    MENOS           reduce using rule 151 (cuadTerm -> .)

    cuadTerm                       shift and go to state 187

state 144

    (120) term -> factor .
    (121) term -> factor . cuadFactor termAux term cuadFactor
    (152) cuadFactor -> .

    MAS             reduce using rule 120 (term -> factor .)
    MENOS           reduce using rule 120 (term -> factor .)
    MAYORQUE        reduce using rule 120 (term -> factor .)
    MENORQUE        reduce using rule 120 (term -> factor .)
    EQUALS          reduce using rule 120 (term -> factor .)
    DIFERENTE       reduce using rule 120 (term -> factor .)
    AND             reduce using rule 120 (term -> factor .)
    OR              reduce using rule 120 (term -> factor .)
    COMA            reduce using rule 120 (term -> factor .)
    PARDER          reduce using rule 120 (term -> factor .)
    DOSPUNTOS       reduce using rule 120 (term -> factor .)
    CORDER          reduce using rule 120 (term -> factor .)
    PYC             reduce using rule 120 (term -> factor .)
    MULT            reduce using rule 152 (cuadFactor -> .)
    DIV             reduce using rule 152 (cuadFactor -> .)

    cuadFactor                     shift and go to state 188

state 145

    (125) factor -> CTEINT . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 189

state 146

    (126) factor -> MENOS . CTEINT pushOT

    CTEINT          shift and go to state 190


state 147

    (127) factor -> CTEFLOAT . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 191

state 148

    (128) factor -> true . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 192

state 149

    (129) factor -> false . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 193

state 150

    (85) condicion -> if PARIZQ expresion . PARDER cuadGotof bloque condicionAux cuadFinIf

    PARDER          shift and go to state 194


state 151

    (130) factor -> ID . checkIDfac pushOT
    (131) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (139) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (71) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID . checkFunc cuadEra PARIZQ PARDER
    (136) checkIDfac -> .
    (80) checkFunc -> .

    PUNTO           shift and go to state 183
    CORIZQ          reduce using rule 136 (checkIDfac -> .)
    MULT            reduce using rule 136 (checkIDfac -> .)
    DIV             reduce using rule 136 (checkIDfac -> .)
    MAS             reduce using rule 136 (checkIDfac -> .)
    MENOS           reduce using rule 136 (checkIDfac -> .)
    MAYORQUE        reduce using rule 136 (checkIDfac -> .)
    MENORQUE        reduce using rule 136 (checkIDfac -> .)
    EQUALS          reduce using rule 136 (checkIDfac -> .)
    DIFERENTE       reduce using rule 136 (checkIDfac -> .)
    AND             reduce using rule 136 (checkIDfac -> .)
    OR              reduce using rule 136 (checkIDfac -> .)
    PARDER          reduce using rule 136 (checkIDfac -> .)
    DOSPUNTOS       reduce using rule 136 (checkIDfac -> .)
    CORDER          reduce using rule 136 (checkIDfac -> .)
    COMA            reduce using rule 136 (checkIDfac -> .)
    PYC             reduce using rule 136 (checkIDfac -> .)
    PARIZQ          reduce using rule 80 (checkFunc -> .)

    checkIDfac                     shift and go to state 184
    checkFunc                      shift and go to state 117

state 152

    (133) factor -> llamada_esp . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 178

state 153

    (134) factor -> CTESTRING . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 176

state 154

    (135) factor -> llamada .

    MULT            reduce using rule 135 (factor -> llamada .)
    DIV             reduce using rule 135 (factor -> llamada .)
    MAS             reduce using rule 135 (factor -> llamada .)
    MENOS           reduce using rule 135 (factor -> llamada .)
    MAYORQUE        reduce using rule 135 (factor -> llamada .)
    MENORQUE        reduce using rule 135 (factor -> llamada .)
    EQUALS          reduce using rule 135 (factor -> llamada .)
    DIFERENTE       reduce using rule 135 (factor -> llamada .)
    AND             reduce using rule 135 (factor -> llamada .)
    OR              reduce using rule 135 (factor -> llamada .)
    PARDER          reduce using rule 135 (factor -> llamada .)
    DOSPUNTOS       reduce using rule 135 (factor -> llamada .)
    CORDER          reduce using rule 135 (factor -> llamada .)
    COMA            reduce using rule 135 (factor -> llamada .)
    PYC             reduce using rule 135 (factor -> llamada .)


state 155

    (88) whileloop -> while migaja PARIZQ . expresion PARDER cuadGotof bloque cuadFinWhile
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 195
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 156

    (91) forloop -> for PARIZQ expresion . checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor
    (92) checkExpFor -> .

    DOSPUNTOS       reduce using rule 92 (checkExpFor -> .)

    checkExpFor                    shift and go to state 196

state 157

    (95) lectura -> read PARIZQ ID . checkID cuadRead PARDER PYC
    (57) checkID -> .

    PARDER          reduce using rule 57 (checkID -> .)

    checkID                        shift and go to state 197

state 158

    (97) estReturn -> return PARIZQ retAux . PARDER PYC

    PARDER          shift and go to state 198


state 159

    (98) retAux -> expresion . cuadRet
    (103) cuadRet -> .

    PARDER          reduce using rule 103 (cuadRet -> .)

    cuadRet                        shift and go to state 199

state 160

    (99) retAux -> CTESTRING . cuadRet
    (134) factor -> CTESTRING . pushOT
    (103) cuadRet -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 103 (cuadRet -> .)
    PARDER          reduce using rule 103 (cuadRet -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! PARDER          [ reduce using rule 150 (pushOT -> .) ]

    cuadRet                        shift and go to state 200
    pushOT                         shift and go to state 176

state 161

    (100) retAux -> true . cuadRet
    (128) factor -> true . pushOT
    (103) cuadRet -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 103 (cuadRet -> .)
    PARDER          reduce using rule 103 (cuadRet -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! PARDER          [ reduce using rule 150 (pushOT -> .) ]

    cuadRet                        shift and go to state 201
    pushOT                         shift and go to state 192

state 162

    (101) retAux -> false . cuadRet
    (129) factor -> false . pushOT
    (103) cuadRet -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for PARDER resolved using rule 103 (cuadRet -> .)
    PARDER          reduce using rule 103 (cuadRet -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! PARDER          [ reduce using rule 150 (pushOT -> .) ]

    cuadRet                        shift and go to state 202
    pushOT                         shift and go to state 193

state 163

    (102) retAux -> llamada . cuadRet
    (135) factor -> llamada .
    (103) cuadRet -> .

  ! reduce/reduce conflict for PARDER resolved using rule 103 (cuadRet -> .)
    MULT            reduce using rule 135 (factor -> llamada .)
    DIV             reduce using rule 135 (factor -> llamada .)
    MAS             reduce using rule 135 (factor -> llamada .)
    MENOS           reduce using rule 135 (factor -> llamada .)
    MAYORQUE        reduce using rule 135 (factor -> llamada .)
    MENORQUE        reduce using rule 135 (factor -> llamada .)
    EQUALS          reduce using rule 135 (factor -> llamada .)
    DIFERENTE       reduce using rule 135 (factor -> llamada .)
    AND             reduce using rule 135 (factor -> llamada .)
    OR              reduce using rule 135 (factor -> llamada .)
    PARDER          reduce using rule 103 (cuadRet -> .)

  ! PARDER          [ reduce using rule 135 (factor -> llamada .) ]

    cuadRet                        shift and go to state 203

state 164

    (71) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID . checkFunc cuadEra PARIZQ PARDER
    (130) factor -> ID . checkIDfac pushOT
    (131) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (139) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (80) checkFunc -> .
    (136) checkIDfac -> .

    PUNTO           shift and go to state 183
    PARIZQ          reduce using rule 80 (checkFunc -> .)
    CORIZQ          reduce using rule 136 (checkIDfac -> .)
    MULT            reduce using rule 136 (checkIDfac -> .)
    DIV             reduce using rule 136 (checkIDfac -> .)
    MAS             reduce using rule 136 (checkIDfac -> .)
    MENOS           reduce using rule 136 (checkIDfac -> .)
    MAYORQUE        reduce using rule 136 (checkIDfac -> .)
    MENORQUE        reduce using rule 136 (checkIDfac -> .)
    EQUALS          reduce using rule 136 (checkIDfac -> .)
    DIFERENTE       reduce using rule 136 (checkIDfac -> .)
    AND             reduce using rule 136 (checkIDfac -> .)
    OR              reduce using rule 136 (checkIDfac -> .)
    PARDER          reduce using rule 136 (checkIDfac -> .)

    checkFunc                      shift and go to state 117
    checkIDfac                     shift and go to state 184

state 165

    (31) function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .

    int             reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    float           reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    string          reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    bool            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    void            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)
    func            reduce using rule 31 (function -> ftype func ID agregaFunc PARIZQ funcaux PARDER varsaux agregaDir bloque cuadEndf .)


state 166

    (32) function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .

    int             reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    float           reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    string          reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    bool            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    void            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)
    func            reduce using rule 32 (function -> ftype func ID agregaFunc PARIZQ empty PARDER varsaux agregaDir bloque cuadEndf .)


state 167

    (42) funcaux -> type ID CORIZQ CTEINT CORDER agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (157) empty -> .

    COMA            shift and go to state 108
    PARDER          reduce using rule 157 (empty -> .)

    masParam                       shift and go to state 204
    empty                          shift and go to state 109

state 168

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT . CORDER agregaPar masParam

    CORDER          shift and go to state 205


state 169

    (54) asignacion -> ID checkID asignaux ASIGNA . expresion cuadAsignacion PYC
    (55) asignacion -> ID checkID asignaux ASIGNA . llamada_esp PYC
    (56) asignacion -> ID checkID asignaux ASIGNA . CTESTRING cuadAsignacion PYC
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    CTESTRING       shift and go to state 209
    ID              shift and go to state 206
    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149

    expresion                      shift and go to state 207
    llamada_esp                    shift and go to state 208
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada                        shift and go to state 154

state 170

    (59) asignaux -> CORIZQ expresion . CORDER pushOTAsig
    (60) asignaux -> CORIZQ expresion . COMA expresion CORDER pushOTAsig

    CORDER          shift and go to state 210
    COMA            shift and go to state 211


state 171

    (71) llamada -> ID checkFunc cuadEra PARIZQ . guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID checkFunc cuadEra PARIZQ . PARDER
    (137) guardaFondo -> .

    PARDER          shift and go to state 213
    CTESTRING       reduce using rule 137 (guardaFondo -> .)
    ID              reduce using rule 137 (guardaFondo -> .)
    PARIZQ          reduce using rule 137 (guardaFondo -> .)
    CTEINT          reduce using rule 137 (guardaFondo -> .)
    MENOS           reduce using rule 137 (guardaFondo -> .)
    CTEFLOAT        reduce using rule 137 (guardaFondo -> .)
    true            reduce using rule 137 (guardaFondo -> .)
    false           reduce using rule 137 (guardaFondo -> .)

    guardaFondo                    shift and go to state 212

state 172

    (124) factor -> PARIZQ guardaFondo . expresion PARDER quitaFondo
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 214
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 173

    (63) escritura -> write PARIZQ escaux PARDER . PYC

    PYC             shift and go to state 215


state 174

    (64) escaux -> expresion cuadEsc . nextexp
    (69) nextexp -> . COMA escaux
    (70) nextexp -> . empty
    (157) empty -> .

    COMA            shift and go to state 179
    PARDER          reduce using rule 157 (empty -> .)

    nextexp                        shift and go to state 216
    empty                          shift and go to state 180

state 175

    (65) escaux -> CTESTRING cuadEsc . nextexp
    (69) nextexp -> . COMA escaux
    (70) nextexp -> . empty
    (157) empty -> .

    COMA            shift and go to state 179
    PARDER          reduce using rule 157 (empty -> .)

    nextexp                        shift and go to state 217
    empty                          shift and go to state 180

state 176

    (134) factor -> CTESTRING pushOT .

    MULT            reduce using rule 134 (factor -> CTESTRING pushOT .)
    DIV             reduce using rule 134 (factor -> CTESTRING pushOT .)
    MAS             reduce using rule 134 (factor -> CTESTRING pushOT .)
    MENOS           reduce using rule 134 (factor -> CTESTRING pushOT .)
    MAYORQUE        reduce using rule 134 (factor -> CTESTRING pushOT .)
    MENORQUE        reduce using rule 134 (factor -> CTESTRING pushOT .)
    EQUALS          reduce using rule 134 (factor -> CTESTRING pushOT .)
    DIFERENTE       reduce using rule 134 (factor -> CTESTRING pushOT .)
    AND             reduce using rule 134 (factor -> CTESTRING pushOT .)
    OR              reduce using rule 134 (factor -> CTESTRING pushOT .)
    COMA            reduce using rule 134 (factor -> CTESTRING pushOT .)
    PARDER          reduce using rule 134 (factor -> CTESTRING pushOT .)
    DOSPUNTOS       reduce using rule 134 (factor -> CTESTRING pushOT .)
    CORDER          reduce using rule 134 (factor -> CTESTRING pushOT .)
    PYC             reduce using rule 134 (factor -> CTESTRING pushOT .)


state 177

    (66) escaux -> llamada_esp nextexp .

    PARDER          reduce using rule 66 (escaux -> llamada_esp nextexp .)


state 178

    (133) factor -> llamada_esp pushOT .

    MULT            reduce using rule 133 (factor -> llamada_esp pushOT .)
    DIV             reduce using rule 133 (factor -> llamada_esp pushOT .)
    MAS             reduce using rule 133 (factor -> llamada_esp pushOT .)
    MENOS           reduce using rule 133 (factor -> llamada_esp pushOT .)
    MAYORQUE        reduce using rule 133 (factor -> llamada_esp pushOT .)
    MENORQUE        reduce using rule 133 (factor -> llamada_esp pushOT .)
    EQUALS          reduce using rule 133 (factor -> llamada_esp pushOT .)
    DIFERENTE       reduce using rule 133 (factor -> llamada_esp pushOT .)
    AND             reduce using rule 133 (factor -> llamada_esp pushOT .)
    OR              reduce using rule 133 (factor -> llamada_esp pushOT .)
    COMA            reduce using rule 133 (factor -> llamada_esp pushOT .)
    PARDER          reduce using rule 133 (factor -> llamada_esp pushOT .)
    DOSPUNTOS       reduce using rule 133 (factor -> llamada_esp pushOT .)
    CORDER          reduce using rule 133 (factor -> llamada_esp pushOT .)
    PYC             reduce using rule 133 (factor -> llamada_esp pushOT .)


state 179

    (69) nextexp -> COMA . escaux
    (64) escaux -> . expresion cuadEsc nextexp
    (65) escaux -> . CTESTRING cuadEsc nextexp
    (66) escaux -> . llamada_esp nextexp
    (67) escaux -> . llamada nextexp
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada

    CTESTRING       shift and go to state 136
    ID              shift and go to state 140
    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149

    escaux                         shift and go to state 218
    expresion                      shift and go to state 135
    llamada_esp                    shift and go to state 137
    llamada                        shift and go to state 138
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144

state 180

    (70) nextexp -> empty .

    PARDER          reduce using rule 70 (nextexp -> empty .)


state 181

    (67) escaux -> llamada nextexp .

    PARDER          reduce using rule 67 (escaux -> llamada nextexp .)


state 182

    (104) expresion -> andExpresion cuadAnd .
    (105) expresion -> andExpresion cuadAnd . OR pushOper andExpresion cuadAnd

    COMA            reduce using rule 104 (expresion -> andExpresion cuadAnd .)
    PARDER          reduce using rule 104 (expresion -> andExpresion cuadAnd .)
    DOSPUNTOS       reduce using rule 104 (expresion -> andExpresion cuadAnd .)
    CORDER          reduce using rule 104 (expresion -> andExpresion cuadAnd .)
    PYC             reduce using rule 104 (expresion -> andExpresion cuadAnd .)
    OR              shift and go to state 219


state 183

    (139) llamada_esp -> ID PUNTO . especiales PARIZQ PARDER
    (140) especiales -> . length
    (141) especiales -> . max
    (142) especiales -> . min
    (143) especiales -> . avg
    (144) especiales -> . median
    (145) especiales -> . mode
    (146) especiales -> . variance
    (147) especiales -> . stdev
    (148) especiales -> . graph

    length          shift and go to state 221
    max             shift and go to state 222
    min             shift and go to state 223
    avg             shift and go to state 224
    median          shift and go to state 225
    mode            shift and go to state 226
    variance        shift and go to state 227
    stdev           shift and go to state 228
    graph           shift and go to state 229

    especiales                     shift and go to state 220

state 184

    (130) factor -> ID checkIDfac . pushOT
    (131) factor -> ID checkIDfac . CORIZQ expresion CORDER pushOT
    (132) factor -> ID checkIDfac . CORIZQ expresion COMA expresion CORDER pushOT
    (150) pushOT -> .

    CORIZQ          shift and go to state 231
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 230

state 185

    (107) andExpresion -> relopExpresion cuadRelop .
    (108) andExpresion -> relopExpresion cuadRelop . AND pushOper relopExpresion cuadRelop

    OR              reduce using rule 107 (andExpresion -> relopExpresion cuadRelop .)
    COMA            reduce using rule 107 (andExpresion -> relopExpresion cuadRelop .)
    PARDER          reduce using rule 107 (andExpresion -> relopExpresion cuadRelop .)
    DOSPUNTOS       reduce using rule 107 (andExpresion -> relopExpresion cuadRelop .)
    CORDER          reduce using rule 107 (andExpresion -> relopExpresion cuadRelop .)
    PYC             reduce using rule 107 (andExpresion -> relopExpresion cuadRelop .)
    AND             shift and go to state 232


state 186

    (110) relopExpresion -> aritExpresion cuadArit .
    (111) relopExpresion -> aritExpresion cuadArit . relopAux aritExpresion cuadArit
    (112) relopAux -> . MAYORQUE pushOper
    (113) relopAux -> . MENORQUE pushOper
    (114) relopAux -> . EQUALS pushOper
    (115) relopAux -> . DIFERENTE pushOper

    AND             reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    OR              reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    COMA            reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    PARDER          reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    CORDER          reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    PYC             reduce using rule 110 (relopExpresion -> aritExpresion cuadArit .)
    MAYORQUE        shift and go to state 234
    MENORQUE        shift and go to state 235
    EQUALS          shift and go to state 236
    DIFERENTE       shift and go to state 237

    relopAux                       shift and go to state 233

state 187

    (117) aritExpresion -> term cuadTerm . aritAux aritExpresion cuadTerm
    (118) aritAux -> . MAS pushOper
    (119) aritAux -> . MENOS pushOper

    MAS             shift and go to state 239
    MENOS           shift and go to state 240

    aritAux                        shift and go to state 238

state 188

    (121) term -> factor cuadFactor . termAux term cuadFactor
    (122) termAux -> . MULT pushOper
    (123) termAux -> . DIV pushOper

    MULT            shift and go to state 242
    DIV             shift and go to state 243

    termAux                        shift and go to state 241

state 189

    (125) factor -> CTEINT pushOT .

    MULT            reduce using rule 125 (factor -> CTEINT pushOT .)
    DIV             reduce using rule 125 (factor -> CTEINT pushOT .)
    MAS             reduce using rule 125 (factor -> CTEINT pushOT .)
    MENOS           reduce using rule 125 (factor -> CTEINT pushOT .)
    MAYORQUE        reduce using rule 125 (factor -> CTEINT pushOT .)
    MENORQUE        reduce using rule 125 (factor -> CTEINT pushOT .)
    EQUALS          reduce using rule 125 (factor -> CTEINT pushOT .)
    DIFERENTE       reduce using rule 125 (factor -> CTEINT pushOT .)
    AND             reduce using rule 125 (factor -> CTEINT pushOT .)
    OR              reduce using rule 125 (factor -> CTEINT pushOT .)
    COMA            reduce using rule 125 (factor -> CTEINT pushOT .)
    PARDER          reduce using rule 125 (factor -> CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 125 (factor -> CTEINT pushOT .)
    CORDER          reduce using rule 125 (factor -> CTEINT pushOT .)
    PYC             reduce using rule 125 (factor -> CTEINT pushOT .)


state 190

    (126) factor -> MENOS CTEINT . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 244

state 191

    (127) factor -> CTEFLOAT pushOT .

    MULT            reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    DIV             reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    MAS             reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    MENOS           reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    MAYORQUE        reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    MENORQUE        reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    EQUALS          reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    DIFERENTE       reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    AND             reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    OR              reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    COMA            reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    PARDER          reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    DOSPUNTOS       reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    CORDER          reduce using rule 127 (factor -> CTEFLOAT pushOT .)
    PYC             reduce using rule 127 (factor -> CTEFLOAT pushOT .)


state 192

    (128) factor -> true pushOT .

    MULT            reduce using rule 128 (factor -> true pushOT .)
    DIV             reduce using rule 128 (factor -> true pushOT .)
    MAS             reduce using rule 128 (factor -> true pushOT .)
    MENOS           reduce using rule 128 (factor -> true pushOT .)
    MAYORQUE        reduce using rule 128 (factor -> true pushOT .)
    MENORQUE        reduce using rule 128 (factor -> true pushOT .)
    EQUALS          reduce using rule 128 (factor -> true pushOT .)
    DIFERENTE       reduce using rule 128 (factor -> true pushOT .)
    AND             reduce using rule 128 (factor -> true pushOT .)
    OR              reduce using rule 128 (factor -> true pushOT .)
    COMA            reduce using rule 128 (factor -> true pushOT .)
    PARDER          reduce using rule 128 (factor -> true pushOT .)
    DOSPUNTOS       reduce using rule 128 (factor -> true pushOT .)
    CORDER          reduce using rule 128 (factor -> true pushOT .)
    PYC             reduce using rule 128 (factor -> true pushOT .)


state 193

    (129) factor -> false pushOT .

    MULT            reduce using rule 129 (factor -> false pushOT .)
    DIV             reduce using rule 129 (factor -> false pushOT .)
    MAS             reduce using rule 129 (factor -> false pushOT .)
    MENOS           reduce using rule 129 (factor -> false pushOT .)
    MAYORQUE        reduce using rule 129 (factor -> false pushOT .)
    MENORQUE        reduce using rule 129 (factor -> false pushOT .)
    EQUALS          reduce using rule 129 (factor -> false pushOT .)
    DIFERENTE       reduce using rule 129 (factor -> false pushOT .)
    AND             reduce using rule 129 (factor -> false pushOT .)
    OR              reduce using rule 129 (factor -> false pushOT .)
    COMA            reduce using rule 129 (factor -> false pushOT .)
    PARDER          reduce using rule 129 (factor -> false pushOT .)
    DOSPUNTOS       reduce using rule 129 (factor -> false pushOT .)
    CORDER          reduce using rule 129 (factor -> false pushOT .)
    PYC             reduce using rule 129 (factor -> false pushOT .)


state 194

    (85) condicion -> if PARIZQ expresion PARDER . cuadGotof bloque condicionAux cuadFinIf
    (154) cuadGotof -> .

    LLAVEIZQ        reduce using rule 154 (cuadGotof -> .)

    cuadGotof                      shift and go to state 245

state 195

    (88) whileloop -> while migaja PARIZQ expresion . PARDER cuadGotof bloque cuadFinWhile

    PARDER          shift and go to state 246


state 196

    (91) forloop -> for PARIZQ expresion checkExpFor . DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor

    DOSPUNTOS       shift and go to state 247


state 197

    (95) lectura -> read PARIZQ ID checkID . cuadRead PARDER PYC
    (96) cuadRead -> .

    PARDER          reduce using rule 96 (cuadRead -> .)

    cuadRead                       shift and go to state 248

state 198

    (97) estReturn -> return PARIZQ retAux PARDER . PYC

    PYC             shift and go to state 249


state 199

    (98) retAux -> expresion cuadRet .

    PARDER          reduce using rule 98 (retAux -> expresion cuadRet .)


state 200

    (99) retAux -> CTESTRING cuadRet .

    PARDER          reduce using rule 99 (retAux -> CTESTRING cuadRet .)


state 201

    (100) retAux -> true cuadRet .

    PARDER          reduce using rule 100 (retAux -> true cuadRet .)


state 202

    (101) retAux -> false cuadRet .

    PARDER          reduce using rule 101 (retAux -> false cuadRet .)


state 203

    (102) retAux -> llamada cuadRet .

    PARDER          reduce using rule 102 (retAux -> llamada cuadRet .)


state 204

    (42) funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam .

    PARDER          reduce using rule 42 (funcaux -> type ID CORIZQ CTEINT CORDER agregaPar masParam .)


state 205

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER . agregaPar masParam
    (18) agregaPar -> .

    COMA            reduce using rule 18 (agregaPar -> .)
    PARDER          reduce using rule 18 (agregaPar -> .)

    agregaPar                      shift and go to state 250

state 206

    (139) llamada_esp -> ID . PUNTO especiales PARIZQ PARDER
    (130) factor -> ID . checkIDfac pushOT
    (131) factor -> ID . checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> ID . checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (71) llamada -> ID . checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> ID . checkFunc cuadEra PARIZQ PARDER
    (136) checkIDfac -> .
    (80) checkFunc -> .

    PUNTO           shift and go to state 183
    CORIZQ          reduce using rule 136 (checkIDfac -> .)
    MULT            reduce using rule 136 (checkIDfac -> .)
    DIV             reduce using rule 136 (checkIDfac -> .)
    MAS             reduce using rule 136 (checkIDfac -> .)
    MENOS           reduce using rule 136 (checkIDfac -> .)
    MAYORQUE        reduce using rule 136 (checkIDfac -> .)
    MENORQUE        reduce using rule 136 (checkIDfac -> .)
    EQUALS          reduce using rule 136 (checkIDfac -> .)
    DIFERENTE       reduce using rule 136 (checkIDfac -> .)
    AND             reduce using rule 136 (checkIDfac -> .)
    OR              reduce using rule 136 (checkIDfac -> .)
    PYC             reduce using rule 136 (checkIDfac -> .)
    COMA            reduce using rule 136 (checkIDfac -> .)
    PARDER          reduce using rule 136 (checkIDfac -> .)
    PARIZQ          reduce using rule 80 (checkFunc -> .)

    checkIDfac                     shift and go to state 184
    checkFunc                      shift and go to state 117

state 207

    (54) asignacion -> ID checkID asignaux ASIGNA expresion . cuadAsignacion PYC
    (58) cuadAsignacion -> .

    PYC             reduce using rule 58 (cuadAsignacion -> .)

    cuadAsignacion                 shift and go to state 251

state 208

    (55) asignacion -> ID checkID asignaux ASIGNA llamada_esp . PYC
    (133) factor -> llamada_esp . pushOT
    (150) pushOT -> .

  ! shift/reduce conflict for PYC resolved as shift
    PYC             shift and go to state 252
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! PYC             [ reduce using rule 150 (pushOT -> .) ]

    pushOT                         shift and go to state 178

state 209

    (56) asignacion -> ID checkID asignaux ASIGNA CTESTRING . cuadAsignacion PYC
    (134) factor -> CTESTRING . pushOT
    (58) cuadAsignacion -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for PYC resolved using rule 58 (cuadAsignacion -> .)
    PYC             reduce using rule 58 (cuadAsignacion -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! PYC             [ reduce using rule 150 (pushOT -> .) ]

    cuadAsignacion                 shift and go to state 253
    pushOT                         shift and go to state 176

state 210

    (59) asignaux -> CORIZQ expresion CORDER . pushOTAsig
    (62) pushOTAsig -> .

    ASIGNA          reduce using rule 62 (pushOTAsig -> .)

    pushOTAsig                     shift and go to state 254

state 211

    (60) asignaux -> CORIZQ expresion COMA . expresion CORDER pushOTAsig
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 255
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 212

    (71) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo . llamaux verPars PARDER cuadGoSub quitaFondo
    (75) llamaux -> . expresion cuadPar nextparametro
    (76) llamaux -> . llamada_esp cuadPar nextparametro
    (77) llamaux -> . CTESTRING cuadPar nextparametro
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    CTESTRING       shift and go to state 259
    ID              shift and go to state 206
    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149

    llamaux                        shift and go to state 256
    expresion                      shift and go to state 257
    llamada_esp                    shift and go to state 258
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada                        shift and go to state 154

state 213

    (72) llamada -> ID checkFunc cuadEra PARIZQ PARDER .

    PYC             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    COMA            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    PARDER          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    MULT            reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    DIV             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    MAS             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    MENOS           reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    MAYORQUE        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    MENORQUE        reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    EQUALS          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    DIFERENTE       reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    AND             reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    OR              reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)
    CORDER          reduce using rule 72 (llamada -> ID checkFunc cuadEra PARIZQ PARDER .)


state 214

    (124) factor -> PARIZQ guardaFondo expresion . PARDER quitaFondo

    PARDER          shift and go to state 260


state 215

    (63) escritura -> write PARIZQ escaux PARDER PYC .

    ID              reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    write           reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    if              reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    while           reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    for             reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    read            reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    return          reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)
    LLAVEDER        reduce using rule 63 (escritura -> write PARIZQ escaux PARDER PYC .)


state 216

    (64) escaux -> expresion cuadEsc nextexp .

    PARDER          reduce using rule 64 (escaux -> expresion cuadEsc nextexp .)


state 217

    (65) escaux -> CTESTRING cuadEsc nextexp .

    PARDER          reduce using rule 65 (escaux -> CTESTRING cuadEsc nextexp .)


state 218

    (69) nextexp -> COMA escaux .

    PARDER          reduce using rule 69 (nextexp -> COMA escaux .)


state 219

    (105) expresion -> andExpresion cuadAnd OR . pushOper andExpresion cuadAnd
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 261

state 220

    (139) llamada_esp -> ID PUNTO especiales . PARIZQ PARDER

    PARIZQ          shift and go to state 262


state 221

    (140) especiales -> length .

    PARIZQ          reduce using rule 140 (especiales -> length .)


state 222

    (141) especiales -> max .

    PARIZQ          reduce using rule 141 (especiales -> max .)


state 223

    (142) especiales -> min .

    PARIZQ          reduce using rule 142 (especiales -> min .)


state 224

    (143) especiales -> avg .

    PARIZQ          reduce using rule 143 (especiales -> avg .)


state 225

    (144) especiales -> median .

    PARIZQ          reduce using rule 144 (especiales -> median .)


state 226

    (145) especiales -> mode .

    PARIZQ          reduce using rule 145 (especiales -> mode .)


state 227

    (146) especiales -> variance .

    PARIZQ          reduce using rule 146 (especiales -> variance .)


state 228

    (147) especiales -> stdev .

    PARIZQ          reduce using rule 147 (especiales -> stdev .)


state 229

    (148) especiales -> graph .

    PARIZQ          reduce using rule 148 (especiales -> graph .)


state 230

    (130) factor -> ID checkIDfac pushOT .

    MULT            reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    DIV             reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    MAS             reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    MENOS           reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    MAYORQUE        reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    MENORQUE        reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    EQUALS          reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    DIFERENTE       reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    AND             reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    OR              reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    COMA            reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    PARDER          reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    DOSPUNTOS       reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    CORDER          reduce using rule 130 (factor -> ID checkIDfac pushOT .)
    PYC             reduce using rule 130 (factor -> ID checkIDfac pushOT .)


state 231

    (131) factor -> ID checkIDfac CORIZQ . expresion CORDER pushOT
    (132) factor -> ID checkIDfac CORIZQ . expresion COMA expresion CORDER pushOT
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 263
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 232

    (108) andExpresion -> relopExpresion cuadRelop AND . pushOper relopExpresion cuadRelop
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 264

state 233

    (111) relopExpresion -> aritExpresion cuadArit relopAux . aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    aritExpresion                  shift and go to state 265
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 234

    (112) relopAux -> MAYORQUE . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 266

state 235

    (113) relopAux -> MENORQUE . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 267

state 236

    (114) relopAux -> EQUALS . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 268

state 237

    (115) relopAux -> DIFERENTE . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 269

state 238

    (117) aritExpresion -> term cuadTerm aritAux . aritExpresion cuadTerm
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    term                           shift and go to state 143
    aritExpresion                  shift and go to state 270
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 239

    (118) aritAux -> MAS . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 271

state 240

    (119) aritAux -> MENOS . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 272

state 241

    (121) term -> factor cuadFactor termAux . term cuadFactor
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    factor                         shift and go to state 144
    term                           shift and go to state 273
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 242

    (122) termAux -> MULT . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 274

state 243

    (123) termAux -> DIV . pushOper
    (149) pushOper -> .

    PARIZQ          reduce using rule 149 (pushOper -> .)
    CTEINT          reduce using rule 149 (pushOper -> .)
    MENOS           reduce using rule 149 (pushOper -> .)
    CTEFLOAT        reduce using rule 149 (pushOper -> .)
    true            reduce using rule 149 (pushOper -> .)
    false           reduce using rule 149 (pushOper -> .)
    ID              reduce using rule 149 (pushOper -> .)
    CTESTRING       reduce using rule 149 (pushOper -> .)

    pushOper                       shift and go to state 275

state 244

    (126) factor -> MENOS CTEINT pushOT .

    MULT            reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    DIV             reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    MAS             reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    MENOS           reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    MAYORQUE        reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    MENORQUE        reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    EQUALS          reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    DIFERENTE       reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    AND             reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    OR              reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    COMA            reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    PARDER          reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    DOSPUNTOS       reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    CORDER          reduce using rule 126 (factor -> MENOS CTEINT pushOT .)
    PYC             reduce using rule 126 (factor -> MENOS CTEINT pushOT .)


state 245

    (85) condicion -> if PARIZQ expresion PARDER cuadGotof . bloque condicionAux cuadFinIf
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 276

state 246

    (88) whileloop -> while migaja PARIZQ expresion PARDER . cuadGotof bloque cuadFinWhile
    (154) cuadGotof -> .

    LLAVEIZQ        reduce using rule 154 (cuadGotof -> .)

    cuadGotof                      shift and go to state 277

state 247

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS . expresion checkExpFor PARDER gotoFor bloque returnFor
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 278
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 248

    (95) lectura -> read PARIZQ ID checkID cuadRead . PARDER PYC

    PARDER          shift and go to state 279


state 249

    (97) estReturn -> return PARIZQ retAux PARDER PYC .

    ID              reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    write           reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    if              reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    while           reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    for             reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    read            reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    return          reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)
    LLAVEDER        reduce using rule 97 (estReturn -> return PARIZQ retAux PARDER PYC .)


state 250

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar . masParam
    (44) masParam -> . COMA funcaux
    (45) masParam -> . empty
    (157) empty -> .

    COMA            shift and go to state 108
    PARDER          reduce using rule 157 (empty -> .)

    masParam                       shift and go to state 280
    empty                          shift and go to state 109

state 251

    (54) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion . PYC

    PYC             shift and go to state 281


state 252

    (55) asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .

    ID              reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    write           reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    if              reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    while           reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    for             reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    read            reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    return          reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)
    LLAVEDER        reduce using rule 55 (asignacion -> ID checkID asignaux ASIGNA llamada_esp PYC .)


state 253

    (56) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion . PYC

    PYC             shift and go to state 282


state 254

    (59) asignaux -> CORIZQ expresion CORDER pushOTAsig .

    ASIGNA          reduce using rule 59 (asignaux -> CORIZQ expresion CORDER pushOTAsig .)


state 255

    (60) asignaux -> CORIZQ expresion COMA expresion . CORDER pushOTAsig

    CORDER          shift and go to state 283


state 256

    (71) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux . verPars PARDER cuadGoSub quitaFondo
    (83) verPars -> .

    PARDER          reduce using rule 83 (verPars -> .)

    verPars                        shift and go to state 284

state 257

    (75) llamaux -> expresion . cuadPar nextparametro
    (82) cuadPar -> .

    COMA            reduce using rule 82 (cuadPar -> .)
    PARDER          reduce using rule 82 (cuadPar -> .)

    cuadPar                        shift and go to state 285

state 258

    (76) llamaux -> llamada_esp . cuadPar nextparametro
    (133) factor -> llamada_esp . pushOT
    (82) cuadPar -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for COMA resolved using rule 82 (cuadPar -> .)
  ! reduce/reduce conflict for PARDER resolved using rule 82 (cuadPar -> .)
    COMA            reduce using rule 82 (cuadPar -> .)
    PARDER          reduce using rule 82 (cuadPar -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! COMA            [ reduce using rule 150 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 150 (pushOT -> .) ]

    cuadPar                        shift and go to state 286
    pushOT                         shift and go to state 178

state 259

    (77) llamaux -> CTESTRING . cuadPar nextparametro
    (134) factor -> CTESTRING . pushOT
    (82) cuadPar -> .
    (150) pushOT -> .

  ! reduce/reduce conflict for COMA resolved using rule 82 (cuadPar -> .)
  ! reduce/reduce conflict for PARDER resolved using rule 82 (cuadPar -> .)
    COMA            reduce using rule 82 (cuadPar -> .)
    PARDER          reduce using rule 82 (cuadPar -> .)
    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)

  ! COMA            [ reduce using rule 150 (pushOT -> .) ]
  ! PARDER          [ reduce using rule 150 (pushOT -> .) ]

    cuadPar                        shift and go to state 287
    pushOT                         shift and go to state 176

state 260

    (124) factor -> PARIZQ guardaFondo expresion PARDER . quitaFondo
    (138) quitaFondo -> .

    MULT            reduce using rule 138 (quitaFondo -> .)
    DIV             reduce using rule 138 (quitaFondo -> .)
    MAS             reduce using rule 138 (quitaFondo -> .)
    MENOS           reduce using rule 138 (quitaFondo -> .)
    MAYORQUE        reduce using rule 138 (quitaFondo -> .)
    MENORQUE        reduce using rule 138 (quitaFondo -> .)
    EQUALS          reduce using rule 138 (quitaFondo -> .)
    DIFERENTE       reduce using rule 138 (quitaFondo -> .)
    AND             reduce using rule 138 (quitaFondo -> .)
    OR              reduce using rule 138 (quitaFondo -> .)
    COMA            reduce using rule 138 (quitaFondo -> .)
    PARDER          reduce using rule 138 (quitaFondo -> .)
    DOSPUNTOS       reduce using rule 138 (quitaFondo -> .)
    CORDER          reduce using rule 138 (quitaFondo -> .)
    PYC             reduce using rule 138 (quitaFondo -> .)

    quitaFondo                     shift and go to state 288

state 261

    (105) expresion -> andExpresion cuadAnd OR pushOper . andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    andExpresion                   shift and go to state 289
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 262

    (139) llamada_esp -> ID PUNTO especiales PARIZQ . PARDER

    PARDER          shift and go to state 290


state 263

    (131) factor -> ID checkIDfac CORIZQ expresion . CORDER pushOT
    (132) factor -> ID checkIDfac CORIZQ expresion . COMA expresion CORDER pushOT

    CORDER          shift and go to state 291
    COMA            shift and go to state 292


state 264

    (108) andExpresion -> relopExpresion cuadRelop AND pushOper . relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    relopExpresion                 shift and go to state 293
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 265

    (111) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion . cuadArit
    (153) cuadArit -> .

    AND             reduce using rule 153 (cuadArit -> .)
    OR              reduce using rule 153 (cuadArit -> .)
    COMA            reduce using rule 153 (cuadArit -> .)
    PARDER          reduce using rule 153 (cuadArit -> .)
    DOSPUNTOS       reduce using rule 153 (cuadArit -> .)
    CORDER          reduce using rule 153 (cuadArit -> .)
    PYC             reduce using rule 153 (cuadArit -> .)

    cuadArit                       shift and go to state 294

state 266

    (112) relopAux -> MAYORQUE pushOper .

    PARIZQ          reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    CTEINT          reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    MENOS           reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    CTEFLOAT        reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    true            reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    false           reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    ID              reduce using rule 112 (relopAux -> MAYORQUE pushOper .)
    CTESTRING       reduce using rule 112 (relopAux -> MAYORQUE pushOper .)


state 267

    (113) relopAux -> MENORQUE pushOper .

    PARIZQ          reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    CTEINT          reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    MENOS           reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    CTEFLOAT        reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    true            reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    false           reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    ID              reduce using rule 113 (relopAux -> MENORQUE pushOper .)
    CTESTRING       reduce using rule 113 (relopAux -> MENORQUE pushOper .)


state 268

    (114) relopAux -> EQUALS pushOper .

    PARIZQ          reduce using rule 114 (relopAux -> EQUALS pushOper .)
    CTEINT          reduce using rule 114 (relopAux -> EQUALS pushOper .)
    MENOS           reduce using rule 114 (relopAux -> EQUALS pushOper .)
    CTEFLOAT        reduce using rule 114 (relopAux -> EQUALS pushOper .)
    true            reduce using rule 114 (relopAux -> EQUALS pushOper .)
    false           reduce using rule 114 (relopAux -> EQUALS pushOper .)
    ID              reduce using rule 114 (relopAux -> EQUALS pushOper .)
    CTESTRING       reduce using rule 114 (relopAux -> EQUALS pushOper .)


state 269

    (115) relopAux -> DIFERENTE pushOper .

    PARIZQ          reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    CTEINT          reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    MENOS           reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    CTEFLOAT        reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    true            reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    false           reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    ID              reduce using rule 115 (relopAux -> DIFERENTE pushOper .)
    CTESTRING       reduce using rule 115 (relopAux -> DIFERENTE pushOper .)


state 270

    (117) aritExpresion -> term cuadTerm aritAux aritExpresion . cuadTerm
    (151) cuadTerm -> .

    MAYORQUE        reduce using rule 151 (cuadTerm -> .)
    MENORQUE        reduce using rule 151 (cuadTerm -> .)
    EQUALS          reduce using rule 151 (cuadTerm -> .)
    DIFERENTE       reduce using rule 151 (cuadTerm -> .)
    AND             reduce using rule 151 (cuadTerm -> .)
    OR              reduce using rule 151 (cuadTerm -> .)
    COMA            reduce using rule 151 (cuadTerm -> .)
    PARDER          reduce using rule 151 (cuadTerm -> .)
    DOSPUNTOS       reduce using rule 151 (cuadTerm -> .)
    CORDER          reduce using rule 151 (cuadTerm -> .)
    PYC             reduce using rule 151 (cuadTerm -> .)

    cuadTerm                       shift and go to state 295

state 271

    (118) aritAux -> MAS pushOper .

    PARIZQ          reduce using rule 118 (aritAux -> MAS pushOper .)
    CTEINT          reduce using rule 118 (aritAux -> MAS pushOper .)
    MENOS           reduce using rule 118 (aritAux -> MAS pushOper .)
    CTEFLOAT        reduce using rule 118 (aritAux -> MAS pushOper .)
    true            reduce using rule 118 (aritAux -> MAS pushOper .)
    false           reduce using rule 118 (aritAux -> MAS pushOper .)
    ID              reduce using rule 118 (aritAux -> MAS pushOper .)
    CTESTRING       reduce using rule 118 (aritAux -> MAS pushOper .)


state 272

    (119) aritAux -> MENOS pushOper .

    PARIZQ          reduce using rule 119 (aritAux -> MENOS pushOper .)
    CTEINT          reduce using rule 119 (aritAux -> MENOS pushOper .)
    MENOS           reduce using rule 119 (aritAux -> MENOS pushOper .)
    CTEFLOAT        reduce using rule 119 (aritAux -> MENOS pushOper .)
    true            reduce using rule 119 (aritAux -> MENOS pushOper .)
    false           reduce using rule 119 (aritAux -> MENOS pushOper .)
    ID              reduce using rule 119 (aritAux -> MENOS pushOper .)
    CTESTRING       reduce using rule 119 (aritAux -> MENOS pushOper .)


state 273

    (121) term -> factor cuadFactor termAux term . cuadFactor
    (152) cuadFactor -> .

    MAS             reduce using rule 152 (cuadFactor -> .)
    MENOS           reduce using rule 152 (cuadFactor -> .)
    MAYORQUE        reduce using rule 152 (cuadFactor -> .)
    MENORQUE        reduce using rule 152 (cuadFactor -> .)
    EQUALS          reduce using rule 152 (cuadFactor -> .)
    DIFERENTE       reduce using rule 152 (cuadFactor -> .)
    AND             reduce using rule 152 (cuadFactor -> .)
    OR              reduce using rule 152 (cuadFactor -> .)
    COMA            reduce using rule 152 (cuadFactor -> .)
    PARDER          reduce using rule 152 (cuadFactor -> .)
    DOSPUNTOS       reduce using rule 152 (cuadFactor -> .)
    CORDER          reduce using rule 152 (cuadFactor -> .)
    PYC             reduce using rule 152 (cuadFactor -> .)

    cuadFactor                     shift and go to state 296

state 274

    (122) termAux -> MULT pushOper .

    PARIZQ          reduce using rule 122 (termAux -> MULT pushOper .)
    CTEINT          reduce using rule 122 (termAux -> MULT pushOper .)
    MENOS           reduce using rule 122 (termAux -> MULT pushOper .)
    CTEFLOAT        reduce using rule 122 (termAux -> MULT pushOper .)
    true            reduce using rule 122 (termAux -> MULT pushOper .)
    false           reduce using rule 122 (termAux -> MULT pushOper .)
    ID              reduce using rule 122 (termAux -> MULT pushOper .)
    CTESTRING       reduce using rule 122 (termAux -> MULT pushOper .)


state 275

    (123) termAux -> DIV pushOper .

    PARIZQ          reduce using rule 123 (termAux -> DIV pushOper .)
    CTEINT          reduce using rule 123 (termAux -> DIV pushOper .)
    MENOS           reduce using rule 123 (termAux -> DIV pushOper .)
    CTEFLOAT        reduce using rule 123 (termAux -> DIV pushOper .)
    true            reduce using rule 123 (termAux -> DIV pushOper .)
    false           reduce using rule 123 (termAux -> DIV pushOper .)
    ID              reduce using rule 123 (termAux -> DIV pushOper .)
    CTESTRING       reduce using rule 123 (termAux -> DIV pushOper .)


state 276

    (85) condicion -> if PARIZQ expresion PARDER cuadGotof bloque . condicionAux cuadFinIf
    (86) condicionAux -> . else cuadGoto bloque
    (87) condicionAux -> . empty
    (157) empty -> .

    else            shift and go to state 298
    ID              reduce using rule 157 (empty -> .)
    write           reduce using rule 157 (empty -> .)
    if              reduce using rule 157 (empty -> .)
    while           reduce using rule 157 (empty -> .)
    for             reduce using rule 157 (empty -> .)
    read            reduce using rule 157 (empty -> .)
    return          reduce using rule 157 (empty -> .)
    LLAVEDER        reduce using rule 157 (empty -> .)

    condicionAux                   shift and go to state 297
    empty                          shift and go to state 299

state 277

    (88) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof . bloque cuadFinWhile
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 300

state 278

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion . checkExpFor PARDER gotoFor bloque returnFor
    (92) checkExpFor -> .

    PARDER          reduce using rule 92 (checkExpFor -> .)

    checkExpFor                    shift and go to state 301

state 279

    (95) lectura -> read PARIZQ ID checkID cuadRead PARDER . PYC

    PYC             shift and go to state 302


state 280

    (43) funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam .

    PARDER          reduce using rule 43 (funcaux -> type ID CORIZQ CTEINT COMA CTEINT CORDER agregaPar masParam .)


state 281

    (54) asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .

    ID              reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    write           reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    if              reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    while           reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    for             reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    read            reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    return          reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 54 (asignacion -> ID checkID asignaux ASIGNA expresion cuadAsignacion PYC .)


state 282

    (56) asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .

    ID              reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    write           reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    if              reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    while           reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    for             reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    read            reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    return          reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)
    LLAVEDER        reduce using rule 56 (asignacion -> ID checkID asignaux ASIGNA CTESTRING cuadAsignacion PYC .)


state 283

    (60) asignaux -> CORIZQ expresion COMA expresion CORDER . pushOTAsig
    (62) pushOTAsig -> .

    ASIGNA          reduce using rule 62 (pushOTAsig -> .)

    pushOTAsig                     shift and go to state 303

state 284

    (71) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars . PARDER cuadGoSub quitaFondo

    PARDER          shift and go to state 304


state 285

    (75) llamaux -> expresion cuadPar . nextparametro
    (78) nextparametro -> . COMA llamaux
    (79) nextparametro -> . empty
    (157) empty -> .

    COMA            shift and go to state 306
    PARDER          reduce using rule 157 (empty -> .)

    nextparametro                  shift and go to state 305
    empty                          shift and go to state 307

state 286

    (76) llamaux -> llamada_esp cuadPar . nextparametro
    (78) nextparametro -> . COMA llamaux
    (79) nextparametro -> . empty
    (157) empty -> .

    COMA            shift and go to state 306
    PARDER          reduce using rule 157 (empty -> .)

    nextparametro                  shift and go to state 308
    empty                          shift and go to state 307

state 287

    (77) llamaux -> CTESTRING cuadPar . nextparametro
    (78) nextparametro -> . COMA llamaux
    (79) nextparametro -> . empty
    (157) empty -> .

    COMA            shift and go to state 306
    PARDER          reduce using rule 157 (empty -> .)

    nextparametro                  shift and go to state 309
    empty                          shift and go to state 307

state 288

    (124) factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .

    MULT            reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DIV             reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAS             reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENOS           reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MAYORQUE        reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    MENORQUE        reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    EQUALS          reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DIFERENTE       reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    AND             reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    OR              reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    COMA            reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    PARDER          reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    DOSPUNTOS       reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    CORDER          reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)
    PYC             reduce using rule 124 (factor -> PARIZQ guardaFondo expresion PARDER quitaFondo .)


state 289

    (105) expresion -> andExpresion cuadAnd OR pushOper andExpresion . cuadAnd
    (106) cuadAnd -> .

    COMA            reduce using rule 106 (cuadAnd -> .)
    PARDER          reduce using rule 106 (cuadAnd -> .)
    DOSPUNTOS       reduce using rule 106 (cuadAnd -> .)
    CORDER          reduce using rule 106 (cuadAnd -> .)
    PYC             reduce using rule 106 (cuadAnd -> .)

    cuadAnd                        shift and go to state 310

state 290

    (139) llamada_esp -> ID PUNTO especiales PARIZQ PARDER .

    COMA            reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PARDER          reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MULT            reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIV             reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAS             reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENOS           reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MAYORQUE        reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    MENORQUE        reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    EQUALS          reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DIFERENTE       reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    AND             reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    OR              reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    CORDER          reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)
    PYC             reduce using rule 139 (llamada_esp -> ID PUNTO especiales PARIZQ PARDER .)


state 291

    (131) factor -> ID checkIDfac CORIZQ expresion CORDER . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 311

state 292

    (132) factor -> ID checkIDfac CORIZQ expresion COMA . expresion CORDER pushOT
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149
    ID              shift and go to state 151
    CTESTRING       shift and go to state 153

    expresion                      shift and go to state 312
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada_esp                    shift and go to state 152
    llamada                        shift and go to state 154

state 293

    (108) andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion . cuadRelop
    (109) cuadRelop -> .

    OR              reduce using rule 109 (cuadRelop -> .)
    COMA            reduce using rule 109 (cuadRelop -> .)
    PARDER          reduce using rule 109 (cuadRelop -> .)
    DOSPUNTOS       reduce using rule 109 (cuadRelop -> .)
    CORDER          reduce using rule 109 (cuadRelop -> .)
    PYC             reduce using rule 109 (cuadRelop -> .)

    cuadRelop                      shift and go to state 313

state 294

    (111) relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .

    AND             reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    OR              reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    COMA            reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PARDER          reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    DOSPUNTOS       reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    CORDER          reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)
    PYC             reduce using rule 111 (relopExpresion -> aritExpresion cuadArit relopAux aritExpresion cuadArit .)


state 295

    (117) aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .

    MAYORQUE        reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    MENORQUE        reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    EQUALS          reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    DIFERENTE       reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    AND             reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    OR              reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    COMA            reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    PARDER          reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    DOSPUNTOS       reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    CORDER          reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)
    PYC             reduce using rule 117 (aritExpresion -> term cuadTerm aritAux aritExpresion cuadTerm .)


state 296

    (121) term -> factor cuadFactor termAux term cuadFactor .

    MAS             reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    MENOS           reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    MAYORQUE        reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    MENORQUE        reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    EQUALS          reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    DIFERENTE       reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    AND             reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    OR              reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    COMA            reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    PARDER          reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    DOSPUNTOS       reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    CORDER          reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)
    PYC             reduce using rule 121 (term -> factor cuadFactor termAux term cuadFactor .)


state 297

    (85) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux . cuadFinIf
    (155) cuadFinIf -> .

    ID              reduce using rule 155 (cuadFinIf -> .)
    write           reduce using rule 155 (cuadFinIf -> .)
    if              reduce using rule 155 (cuadFinIf -> .)
    while           reduce using rule 155 (cuadFinIf -> .)
    for             reduce using rule 155 (cuadFinIf -> .)
    read            reduce using rule 155 (cuadFinIf -> .)
    return          reduce using rule 155 (cuadFinIf -> .)
    LLAVEDER        reduce using rule 155 (cuadFinIf -> .)

    cuadFinIf                      shift and go to state 314

state 298

    (86) condicionAux -> else . cuadGoto bloque
    (156) cuadGoto -> .

    LLAVEIZQ        reduce using rule 156 (cuadGoto -> .)

    cuadGoto                       shift and go to state 315

state 299

    (87) condicionAux -> empty .

    ID              reduce using rule 87 (condicionAux -> empty .)
    write           reduce using rule 87 (condicionAux -> empty .)
    if              reduce using rule 87 (condicionAux -> empty .)
    while           reduce using rule 87 (condicionAux -> empty .)
    for             reduce using rule 87 (condicionAux -> empty .)
    read            reduce using rule 87 (condicionAux -> empty .)
    return          reduce using rule 87 (condicionAux -> empty .)
    LLAVEDER        reduce using rule 87 (condicionAux -> empty .)


state 300

    (88) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque . cuadFinWhile
    (90) cuadFinWhile -> .

    ID              reduce using rule 90 (cuadFinWhile -> .)
    write           reduce using rule 90 (cuadFinWhile -> .)
    if              reduce using rule 90 (cuadFinWhile -> .)
    while           reduce using rule 90 (cuadFinWhile -> .)
    for             reduce using rule 90 (cuadFinWhile -> .)
    read            reduce using rule 90 (cuadFinWhile -> .)
    return          reduce using rule 90 (cuadFinWhile -> .)
    LLAVEDER        reduce using rule 90 (cuadFinWhile -> .)

    cuadFinWhile                   shift and go to state 316

state 301

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor . PARDER gotoFor bloque returnFor

    PARDER          shift and go to state 317


state 302

    (95) lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .

    ID              reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    write           reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    if              reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    while           reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    for             reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    read            reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    return          reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)
    LLAVEDER        reduce using rule 95 (lectura -> read PARIZQ ID checkID cuadRead PARDER PYC .)


state 303

    (60) asignaux -> CORIZQ expresion COMA expresion CORDER pushOTAsig .

    ASIGNA          reduce using rule 60 (asignaux -> CORIZQ expresion COMA expresion CORDER pushOTAsig .)


state 304

    (71) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER . cuadGoSub quitaFondo
    (84) cuadGoSub -> .

    PYC             reduce using rule 84 (cuadGoSub -> .)
    COMA            reduce using rule 84 (cuadGoSub -> .)
    PARDER          reduce using rule 84 (cuadGoSub -> .)
    MULT            reduce using rule 84 (cuadGoSub -> .)
    DIV             reduce using rule 84 (cuadGoSub -> .)
    MAS             reduce using rule 84 (cuadGoSub -> .)
    MENOS           reduce using rule 84 (cuadGoSub -> .)
    MAYORQUE        reduce using rule 84 (cuadGoSub -> .)
    MENORQUE        reduce using rule 84 (cuadGoSub -> .)
    EQUALS          reduce using rule 84 (cuadGoSub -> .)
    DIFERENTE       reduce using rule 84 (cuadGoSub -> .)
    AND             reduce using rule 84 (cuadGoSub -> .)
    OR              reduce using rule 84 (cuadGoSub -> .)
    DOSPUNTOS       reduce using rule 84 (cuadGoSub -> .)
    CORDER          reduce using rule 84 (cuadGoSub -> .)

    cuadGoSub                      shift and go to state 318

state 305

    (75) llamaux -> expresion cuadPar nextparametro .

    PARDER          reduce using rule 75 (llamaux -> expresion cuadPar nextparametro .)


state 306

    (78) nextparametro -> COMA . llamaux
    (75) llamaux -> . expresion cuadPar nextparametro
    (76) llamaux -> . llamada_esp cuadPar nextparametro
    (77) llamaux -> . CTESTRING cuadPar nextparametro
    (104) expresion -> . andExpresion cuadAnd
    (105) expresion -> . andExpresion cuadAnd OR pushOper andExpresion cuadAnd
    (139) llamada_esp -> . ID PUNTO especiales PARIZQ PARDER
    (107) andExpresion -> . relopExpresion cuadRelop
    (108) andExpresion -> . relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop
    (110) relopExpresion -> . aritExpresion cuadArit
    (111) relopExpresion -> . aritExpresion cuadArit relopAux aritExpresion cuadArit
    (116) aritExpresion -> . term
    (117) aritExpresion -> . term cuadTerm aritAux aritExpresion cuadTerm
    (120) term -> . factor
    (121) term -> . factor cuadFactor termAux term cuadFactor
    (124) factor -> . PARIZQ guardaFondo expresion PARDER quitaFondo
    (125) factor -> . CTEINT pushOT
    (126) factor -> . MENOS CTEINT pushOT
    (127) factor -> . CTEFLOAT pushOT
    (128) factor -> . true pushOT
    (129) factor -> . false pushOT
    (130) factor -> . ID checkIDfac pushOT
    (131) factor -> . ID checkIDfac CORIZQ expresion CORDER pushOT
    (132) factor -> . ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT
    (133) factor -> . llamada_esp pushOT
    (134) factor -> . CTESTRING pushOT
    (135) factor -> . llamada
    (71) llamada -> . ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo
    (72) llamada -> . ID checkFunc cuadEra PARIZQ PARDER

    CTESTRING       shift and go to state 259
    ID              shift and go to state 206
    PARIZQ          shift and go to state 133
    CTEINT          shift and go to state 145
    MENOS           shift and go to state 146
    CTEFLOAT        shift and go to state 147
    true            shift and go to state 148
    false           shift and go to state 149

    llamaux                        shift and go to state 319
    expresion                      shift and go to state 257
    llamada_esp                    shift and go to state 258
    andExpresion                   shift and go to state 139
    relopExpresion                 shift and go to state 141
    aritExpresion                  shift and go to state 142
    term                           shift and go to state 143
    factor                         shift and go to state 144
    llamada                        shift and go to state 154

state 307

    (79) nextparametro -> empty .

    PARDER          reduce using rule 79 (nextparametro -> empty .)


state 308

    (76) llamaux -> llamada_esp cuadPar nextparametro .

    PARDER          reduce using rule 76 (llamaux -> llamada_esp cuadPar nextparametro .)


state 309

    (77) llamaux -> CTESTRING cuadPar nextparametro .

    PARDER          reduce using rule 77 (llamaux -> CTESTRING cuadPar nextparametro .)


state 310

    (105) expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .

    COMA            reduce using rule 105 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    PARDER          reduce using rule 105 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    DOSPUNTOS       reduce using rule 105 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    CORDER          reduce using rule 105 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)
    PYC             reduce using rule 105 (expresion -> andExpresion cuadAnd OR pushOper andExpresion cuadAnd .)


state 311

    (131) factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .

    MULT            reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    DIV             reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MAS             reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MENOS           reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MAYORQUE        reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    MENORQUE        reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    EQUALS          reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    DIFERENTE       reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    AND             reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    OR              reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    COMA            reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    PARDER          reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    DOSPUNTOS       reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    CORDER          reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)
    PYC             reduce using rule 131 (factor -> ID checkIDfac CORIZQ expresion CORDER pushOT .)


state 312

    (132) factor -> ID checkIDfac CORIZQ expresion COMA expresion . CORDER pushOT

    CORDER          shift and go to state 320


state 313

    (108) andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .

    OR              reduce using rule 108 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    COMA            reduce using rule 108 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    PARDER          reduce using rule 108 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    DOSPUNTOS       reduce using rule 108 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    CORDER          reduce using rule 108 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)
    PYC             reduce using rule 108 (andExpresion -> relopExpresion cuadRelop AND pushOper relopExpresion cuadRelop .)


state 314

    (85) condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .

    ID              reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    write           reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    if              reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    while           reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    for             reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    read            reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    return          reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)
    LLAVEDER        reduce using rule 85 (condicion -> if PARIZQ expresion PARDER cuadGotof bloque condicionAux cuadFinIf .)


state 315

    (86) condicionAux -> else cuadGoto . bloque
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 321

state 316

    (88) whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .

    ID              reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    write           reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    if              reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    while           reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    for             reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    read            reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    return          reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)
    LLAVEDER        reduce using rule 88 (whileloop -> while migaja PARIZQ expresion PARDER cuadGotof bloque cuadFinWhile .)


state 317

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER . gotoFor bloque returnFor
    (93) gotoFor -> .

    LLAVEIZQ        reduce using rule 93 (gotoFor -> .)

    gotoFor                        shift and go to state 322

state 318

    (71) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub . quitaFondo
    (138) quitaFondo -> .

    PYC             reduce using rule 138 (quitaFondo -> .)
    COMA            reduce using rule 138 (quitaFondo -> .)
    PARDER          reduce using rule 138 (quitaFondo -> .)
    MULT            reduce using rule 138 (quitaFondo -> .)
    DIV             reduce using rule 138 (quitaFondo -> .)
    MAS             reduce using rule 138 (quitaFondo -> .)
    MENOS           reduce using rule 138 (quitaFondo -> .)
    MAYORQUE        reduce using rule 138 (quitaFondo -> .)
    MENORQUE        reduce using rule 138 (quitaFondo -> .)
    EQUALS          reduce using rule 138 (quitaFondo -> .)
    DIFERENTE       reduce using rule 138 (quitaFondo -> .)
    AND             reduce using rule 138 (quitaFondo -> .)
    OR              reduce using rule 138 (quitaFondo -> .)
    DOSPUNTOS       reduce using rule 138 (quitaFondo -> .)
    CORDER          reduce using rule 138 (quitaFondo -> .)

    quitaFondo                     shift and go to state 323

state 319

    (78) nextparametro -> COMA llamaux .

    PARDER          reduce using rule 78 (nextparametro -> COMA llamaux .)


state 320

    (132) factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER . pushOT
    (150) pushOT -> .

    MULT            reduce using rule 150 (pushOT -> .)
    DIV             reduce using rule 150 (pushOT -> .)
    MAS             reduce using rule 150 (pushOT -> .)
    MENOS           reduce using rule 150 (pushOT -> .)
    MAYORQUE        reduce using rule 150 (pushOT -> .)
    MENORQUE        reduce using rule 150 (pushOT -> .)
    EQUALS          reduce using rule 150 (pushOT -> .)
    DIFERENTE       reduce using rule 150 (pushOT -> .)
    AND             reduce using rule 150 (pushOT -> .)
    OR              reduce using rule 150 (pushOT -> .)
    COMA            reduce using rule 150 (pushOT -> .)
    PARDER          reduce using rule 150 (pushOT -> .)
    DOSPUNTOS       reduce using rule 150 (pushOT -> .)
    CORDER          reduce using rule 150 (pushOT -> .)
    PYC             reduce using rule 150 (pushOT -> .)

    pushOT                         shift and go to state 324

state 321

    (86) condicionAux -> else cuadGoto bloque .

    ID              reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    write           reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    if              reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    while           reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    for             reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    read            reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    return          reduce using rule 86 (condicionAux -> else cuadGoto bloque .)
    LLAVEDER        reduce using rule 86 (condicionAux -> else cuadGoto bloque .)


state 322

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor . bloque returnFor
    (23) bloque -> . LLAVEIZQ bloqueaux LLAVEDER
    (24) bloque -> . LLAVEIZQ empty LLAVEDER

    LLAVEIZQ        shift and go to state 81

    bloque                         shift and go to state 325

state 323

    (71) llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .

    PYC             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    COMA            reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    PARDER          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MULT            reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    DIV             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MAS             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MENOS           reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MAYORQUE        reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    MENORQUE        reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    EQUALS          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    DIFERENTE       reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    AND             reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    OR              reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    DOSPUNTOS       reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)
    CORDER          reduce using rule 71 (llamada -> ID checkFunc cuadEra PARIZQ guardaFondo llamaux verPars PARDER cuadGoSub quitaFondo .)


state 324

    (132) factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .

    MULT            reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    DIV             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MAS             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MENOS           reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MAYORQUE        reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    MENORQUE        reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    EQUALS          reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    DIFERENTE       reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    AND             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    OR              reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    COMA            reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    PARDER          reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    DOSPUNTOS       reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    CORDER          reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)
    PYC             reduce using rule 132 (factor -> ID checkIDfac CORIZQ expresion COMA expresion CORDER pushOT .)


state 325

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque . returnFor
    (94) returnFor -> .

    ID              reduce using rule 94 (returnFor -> .)
    write           reduce using rule 94 (returnFor -> .)
    if              reduce using rule 94 (returnFor -> .)
    while           reduce using rule 94 (returnFor -> .)
    for             reduce using rule 94 (returnFor -> .)
    read            reduce using rule 94 (returnFor -> .)
    return          reduce using rule 94 (returnFor -> .)
    LLAVEDER        reduce using rule 94 (returnFor -> .)

    returnFor                      shift and go to state 326

state 326

    (91) forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .

    ID              reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    write           reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    if              reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    while           reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    for             reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    read            reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    return          reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)
    LLAVEDER        reduce using rule 91 (forloop -> for PARIZQ expresion checkExpFor DOSPUNTOS expresion checkExpFor PARDER gotoFor bloque returnFor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for var in state 8 resolved as shift
WARNING: shift/reduce conflict for var in state 11 resolved as shift
WARNING: shift/reduce conflict for var in state 75 resolved as shift
WARNING: shift/reduce conflict for var in state 76 resolved as shift
WARNING: shift/reduce conflict for COMA in state 137 resolved as shift
WARNING: shift/reduce conflict for COMA in state 138 resolved as shift
WARNING: shift/reduce conflict for PYC in state 208 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsaux -> empty)
WARNING: rejected rule (vars -> empty) in state 12
WARNING: reduce/reduce conflict in state 136 resolved using rule (cuadEsc -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (pushOT -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (factor -> llamada)
WARNING: rejected rule (empty -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 160 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 161
WARNING: reduce/reduce conflict in state 162 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 162
WARNING: reduce/reduce conflict in state 163 resolved using rule (cuadRet -> <empty>)
WARNING: rejected rule (factor -> llamada) in state 163
WARNING: reduce/reduce conflict in state 209 resolved using rule (cuadAsignacion -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 209
WARNING: reduce/reduce conflict in state 258 resolved using rule (cuadPar -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 259 resolved using rule (cuadPar -> <empty>)
WARNING: rejected rule (pushOT -> <empty>) in state 259
